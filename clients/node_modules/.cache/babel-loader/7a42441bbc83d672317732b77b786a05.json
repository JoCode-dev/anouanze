{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Map/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { getNearParoisses } from \"../../actions/paroisse\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport List from \"./List/List\";\nimport Marker from \"./Marker\";\nimport ParoisseMarker from \"./ParoisseMarker\";\nimport mapStyles from \"./mapStyles\";\nimport { isEmpty } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  var _paroisses$result;\n\n  const [shistApi, setShiftApi] = useState(true);\n  const [userCoords, setUserCoords] = useState({});\n  const [coordinates, setCoordinates] = useState({});\n  const [paroisseCoords, setParoisseCoords] = useState({\n    lat: null,\n    lng: null\n  });\n  let coords = \"\";\n  const dispatch = useDispatch();\n  const paroisses = useSelector(state => state.nearParoisses);\n  const apiKey = shistApi && \"AIzaSyBwwRjHA3A4j64wjjtRgKfhviBkvz9psYE\";\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(_ref => {\n      let {\n        coords: {\n          latitude,\n          longitude\n        }\n      } = _ref;\n      setCoordinates({\n        lat: latitude,\n        lng: longitude\n      });\n      setUserCoords({\n        lat: latitude,\n        lng: longitude\n      });\n    });\n  }, []);\n  useEffect(() => {\n    coords = coordinates.lat + \";\" + coordinates.lng;\n    dispatch(getNearParoisses(coords));\n  }, [coordinates]);\n  const google = window.google;\n\n  const apiIsLoaded = (map, maps) => {\n    const directionsService = new google.maps.DirectionsService();\n    const directionsRenderer = new google.maps.DirectionsRenderer();\n    directionsRenderer.setMap(map);\n    const origin = coordinates;\n    const destination = {\n      lat: 5.324624319460143,\n      lng: -4.021609463163046\n    };\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === google.maps.DirectionsStatus.OK) {\n        directionsRenderer.setDirections(result);\n      } else {\n        console.error(`error fetching directions ${result}`);\n      }\n    });\n  };\n\n  const handleParoisseCoords = coords => {\n    setParoisseCoords({\n      lat: latitude,\n      lng: longitude\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pr\\xE8s de Chez vous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), !isEmpty(paroisses.result) ? /*#__PURE__*/_jsxDEV(List, {\n        paroisses: paroisses.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Aucun R\\xE9sultat pour cette zone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: apiKey\n        },\n        defaultCenter: coordinates,\n        center: coordinates,\n        defaultZoom: 15,\n        margin: [50, 50, 50, 50],\n        options: {\n          disableDefaultUI: true,\n          zoomControl: true,\n          styles: mapStyles\n        },\n        onChange: e => {\n          console.log(e);\n          setCoordinates({\n            lat: e.center.lat,\n            lng: e.center.lng\n          });\n        },\n        onGoogleApiLoaded: _ref2 => {\n          let {\n            map,\n            maps\n          } = _ref2;\n          return apiIsLoaded(map, maps);\n        },\n        yesIWantToUseGoogleMapApiInternals: true,\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          lat: userCoords.lat,\n          lng: userCoords.lng\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), (_paroisses$result = paroisses.result) === null || _paroisses$result === void 0 ? void 0 : _paroisses$result.map((paroisses, idx) => /*#__PURE__*/_jsxDEV(ParoisseMarker, {\n          lat: paroisses.location.coordinates[0],\n          lng: paroisses.location.coordinates[1]\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"evORuXk6ess9KZk1PMmtCJWwlK8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMapReact","getNearParoisses","useDispatch","useSelector","List","Marker","ParoisseMarker","mapStyles","isEmpty","Map","shistApi","setShiftApi","userCoords","setUserCoords","coordinates","setCoordinates","paroisseCoords","setParoisseCoords","lat","lng","coords","dispatch","paroisses","state","nearParoisses","apiKey","navigator","geolocation","getCurrentPosition","latitude","longitude","google","window","apiIsLoaded","map","maps","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","setMap","origin","destination","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setDirections","console","error","handleParoisseCoords","key","disableDefaultUI","zoomControl","styles","e","log","center","idx","location"],"sources":["/Users/macbookpro/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Map/Map.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\n\nimport { getNearParoisses } from \"../../actions/paroisse\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport List from \"./List/List\";\nimport Marker from \"./Marker\";\nimport ParoisseMarker from \"./ParoisseMarker\";\n\nimport mapStyles from \"./mapStyles\";\n\nimport { isEmpty } from \"../utils\";\n\nconst Map = () => {\n  const [shistApi, setShiftApi] = useState(true);\n  const [userCoords, setUserCoords] = useState({});\n  const [coordinates, setCoordinates] = useState({});\n  const [paroisseCoords, setParoisseCoords] = useState({\n    lat: null,\n    lng: null\n  });\n  let coords = \"\";\n\n  const dispatch = useDispatch();\n  const paroisses = useSelector((state) => state.nearParoisses);\n  const apiKey = shistApi && \"AIzaSyBwwRjHA3A4j64wjjtRgKfhviBkvz9psYE\";\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      ({ coords: { latitude, longitude } }) => {\n        setCoordinates({ lat: latitude, lng: longitude });\n        setUserCoords({ lat: latitude, lng: longitude });\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    coords = coordinates.lat + \";\" + coordinates.lng;\n    dispatch(getNearParoisses(coords));\n  }, [coordinates]);\n\n  const google = window.google;\n\n  const apiIsLoaded = (map, maps) => {\n    const directionsService = new google.maps.DirectionsService();\n    const directionsRenderer = new google.maps.DirectionsRenderer();\n    directionsRenderer.setMap(map);\n    const origin = coordinates;\n    const destination = { lat: 5.324624319460143, lng: -4.021609463163046 };\n\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING,\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          directionsRenderer.setDirections(result);\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  };\n\n  const handleParoisseCoords = (coords) => {\n    setParoisseCoords({ lat: latitude, lng: longitude})\n  }\n\n  return (\n    <div className=\"map-container\">\n      <div className=\"map-list-container\">\n        <h1>Près de Chez vous</h1>\n        {!isEmpty(paroisses.result) ? (\n          <List paroisses={paroisses.result} />\n        ) : (\n          <>\n            <h2>Aucun Résultat pour cette zone</h2>{\" \"}\n          </>\n        )}\n      </div>\n      <div className=\"map-container\">\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: apiKey }}\n          defaultCenter={coordinates}\n          center={coordinates}\n          defaultZoom={15}\n          margin={[50, 50, 50, 50]}\n          options={{\n            disableDefaultUI: true,\n            zoomControl: true,\n            styles: mapStyles,\n          }}\n          onChange={(e) => {\n            console.log(e);\n            setCoordinates({ lat: e.center.lat, lng: e.center.lng });\n          }}\n          onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps)}\n          yesIWantToUseGoogleMapApiInternals={true}\n        >\n          <Marker lat={userCoords.lat} lng={userCoords.lng} />\n\n          {paroisses.result?.map((paroisses, idx) => (\n            <ParoisseMarker\n              lat={paroisses.location.coordinates[0]}\n              lng={paroisses.location.coordinates[1]}\n              key={idx}\n            />\n          ))}\n        </GoogleMapReact>\n      </div>\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}