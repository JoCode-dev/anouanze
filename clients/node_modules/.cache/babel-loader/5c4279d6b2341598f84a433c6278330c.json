{"ast":null,"code":"var _jsxFileName = \"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Paroisse/ChooseButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { chooseParoisse, unchooseParoisse } from \"../../actions/paroisse\";\nimport { isEmpty } from \"../utils/index\";\nimport { UidContext } from \"../AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChooseButton = _ref => {\n  _s();\n\n  let {\n    paroisse\n  } = _ref;\n  const [isChoosen, setIsChoosen] = useState(false);\n  const uid = useContext(UidContext);\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user.user);\n  const Uid = user === null || user === void 0 ? void 0 : user._id;\n  const Pid = paroisse === null || paroisse === void 0 ? void 0 : paroisse._id;\n\n  const toggleBtn = () => {\n    console.log(Uid);\n    console.log(Pid);\n  };\n\n  useEffect(() => {\n    console.log(uid);\n  }, []);\n\n  const choose = () => {\n    dispatch(chooseParoisse(Pid, Uid));\n    setIsChoosen(true);\n  };\n\n  const unChoose = () => {\n    dispatch(unchooseParoisse(Pid, Uid));\n    setIsChoosen(false);\n  };\n\n  useEffect(() => {\n    if (paroisse.paroissiens.includes(Uid)) {\n      setIsChoosen(true);\n    } else setIsChoosen(false);\n  }, [paroisse.paroissiens, Uid, isChoosen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Uid !== \"\" && isChoosen === true && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"choose-paroisse-container\",\n      onClick: unChoose,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Paroisse d\\xE9j\\xE0 choisie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + \"/imgs/icons/love.png\",\n        alt: \"heart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), Uid !== \"\" && isChoosen === false && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"choose-paroisse-container\",\n      onClick: choose,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Choisir comme ma paroisse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + \"/imgs/icons/love.png\",\n        alt: \"heart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: paroisse.paroissiens.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChooseButton, \"LZeigftWA7dQPif0u/yIlSk4Fbw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ChooseButton;\nexport default ChooseButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseButton\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useDispatch","useSelector","chooseParoisse","unchooseParoisse","isEmpty","UidContext","ChooseButton","paroisse","isChoosen","setIsChoosen","uid","dispatch","user","state","Uid","_id","Pid","toggleBtn","console","log","choose","unChoose","paroissiens","includes","process","env","PUBLIC_URL","length"],"sources":["/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Paroisse/ChooseButton.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { chooseParoisse, unchooseParoisse } from \"../../actions/paroisse\";\nimport { isEmpty } from \"../utils/index\";\nimport { UidContext } from \"../AppContext\";\n\nconst ChooseButton = ({ paroisse }) => {\n  const [isChoosen, setIsChoosen] = useState(false);\n  const uid = useContext(UidContext);\n\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.user);\n\n  const Uid = user?._id;\n  const Pid = paroisse?._id;\n\n  const toggleBtn = () => {\n    console.log(Uid);\n    console.log(Pid);\n  };\n\n  useEffect(() => {\n    console.log(uid);\n  },[])\n\n  const choose = () => {\n    dispatch(chooseParoisse(Pid, Uid));\n    setIsChoosen(true);\n  };\n\n  const unChoose = () => {\n    dispatch(unchooseParoisse(Pid, Uid));\n    setIsChoosen(false);\n  };\n\n  useEffect(() => {\n    if (paroisse.paroissiens.includes(Uid)) {\n      setIsChoosen(true);\n    } else setIsChoosen(false);\n  }, [paroisse.paroissiens, Uid, isChoosen]);\n\n  return (\n    <div>\n      {Uid !== \"\" && isChoosen === true && (\n        <button className=\"choose-paroisse-container\" onClick={unChoose}>\n          <p>Paroisse déjà choisie</p>{\" \"}\n          <img\n            src={process.env.PUBLIC_URL + \"/imgs/icons/love.png\"}\n            alt=\"heart\"\n          />\n        </button>\n      )}\n\n      {Uid !== \"\" && isChoosen === false && (\n        <button className=\"choose-paroisse-container\" onClick={choose}>\n          <p>Choisir comme ma paroisse</p>{\" \"}\n          <img\n            src={process.env.PUBLIC_URL + \"/imgs/icons/love.png\"}\n            alt=\"heart\"\n          />\n        </button>\n      )}\n\n      <div>{paroisse.paroissiens.length}</div>\n    </div>\n  );\n};\n\nexport default ChooseButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}