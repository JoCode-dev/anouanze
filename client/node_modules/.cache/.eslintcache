[{"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/index.js":"1","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/App.js":"2","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/index.js":"3","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/actions/user.js":"4","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/actions/event.js":"5","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Loader/Loader.jsx":"6","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/routes/index.js":"7","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/auth.js":"8","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/users.js":"9","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/user.js":"10","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/events.js":"11","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/threeEvents.js":"12","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/event.js":"13","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/actu.js":"14","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/actus.js":"15","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/message.js":"16","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/paroisse.js":"17","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/nearParoisses.js":"18","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/paroisses.js":"19","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/constants/reducers.js":"20","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/api/index.js":"21","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/Home.jsx":"22","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/Event.jsx":"23","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/Events.jsx":"24","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/Login.jsx":"25","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/Paroisse.jsx":"26","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/actions/paroisse.js":"27","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/utils/index.js":"28","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/NavBar/NavBar.jsx":"29","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Footer/Footer.jsx":"30","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Login/LogContainer.jsx":"31","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Carousel/Carousel.jsx":"32","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Map/Map.jsx":"33","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/actions/auth.js":"34","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Map/mapStyles.js":"35","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Map/Marker.jsx":"36","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Map/ParoisseMarker.jsx":"37","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Login/Forms/SignUpForm.jsx":"38","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Login/Forms/SignInForm.jsx":"39","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Map/List/List.jsx":"40","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/HeadBar/HeadBar.jsx":"41","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/Paroisses.jsx":"42","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/actions/actus.js":"43","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Paroisse/ChooseButton.jsx":"44","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/AppContext.js":"45","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/AdminDashboard.jsx":"46","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/ModDashboard.jsx":"47","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/AdminDashboard/LeftBar.jsx":"48","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/AdminDashboard/DashBoard.jsx":"49","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/AdminDashboard/ParoissesBoard.jsx":"50","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/AdminDashboard/EventsBoard.jsx":"51","/Users/jocode/Documents/GitHub/anouanze/client/src/index.js":"52","/Users/jocode/Documents/GitHub/anouanze/client/src/App.js":"53","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/index.js":"54","/Users/jocode/Documents/GitHub/anouanze/client/src/actions/user.js":"55","/Users/jocode/Documents/GitHub/anouanze/client/src/actions/event.js":"56","/Users/jocode/Documents/GitHub/anouanze/client/src/components/AppContext.js":"57","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Loader/Loader.jsx":"58","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/auth.js":"59","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/user.js":"60","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/events.js":"61","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/threeEvents.js":"62","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/actu.js":"63","/Users/jocode/Documents/GitHub/anouanze/client/src/routes/index.js":"64","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/actus.js":"65","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/event.js":"66","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/paroisse.js":"67","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/paroisses.js":"68","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/nearParoisses.js":"69","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/message.js":"70","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/users.js":"71","/Users/jocode/Documents/GitHub/anouanze/client/src/constants/reducers.js":"72","/Users/jocode/Documents/GitHub/anouanze/client/src/api/index.js":"73","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Home.jsx":"74","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Event.jsx":"75","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Paroisse.jsx":"76","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/AdminDashboard.jsx":"77","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Events.jsx":"78","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Paroisses.jsx":"79","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Login.jsx":"80","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/ModDashboard.jsx":"81","/Users/jocode/Documents/GitHub/anouanze/client/src/actions/actus.js":"82","/Users/jocode/Documents/GitHub/anouanze/client/src/actions/paroisse.js":"83","/Users/jocode/Documents/GitHub/anouanze/client/src/components/utils/index.js":"84","/Users/jocode/Documents/GitHub/anouanze/client/src/components/NavBar/NavBar.jsx":"85","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Map/Map.jsx":"86","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Footer/Footer.jsx":"87","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Carousel/Carousel.jsx":"88","/Users/jocode/Documents/GitHub/anouanze/client/src/components/AdminDashboard/DashBoard.jsx":"89","/Users/jocode/Documents/GitHub/anouanze/client/src/components/AdminDashboard/LeftBar.jsx":"90","/Users/jocode/Documents/GitHub/anouanze/client/src/components/AdminDashboard/EventsBoard.jsx":"91","/Users/jocode/Documents/GitHub/anouanze/client/src/components/AdminDashboard/ParoissesBoard.jsx":"92","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Login/LogContainer.jsx":"93","/Users/jocode/Documents/GitHub/anouanze/client/src/components/HeadBar/HeadBar.jsx":"94","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Paroisse/ChooseButton.jsx":"95","/Users/jocode/Documents/GitHub/anouanze/client/src/actions/auth.js":"96","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Map/mapStyles.js":"97","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Map/Marker.jsx":"98","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Map/ParoisseMarker.jsx":"99","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Map/List/List.jsx":"100","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Login/Forms/SignInForm.jsx":"101","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Login/Forms/SignUpForm.jsx":"102","/Users/jocode/Documents/GitHub/anouanze/client/src/components/MaParoisse/MaParoisse.jsx":"103","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Actu.jsx":"104","/Users/jocode/Documents/GitHub/anouanze/client/src/components/MaParoisse/scroll.js":"105","/Users/jocode/Documents/GitHub/anouanze/client/src/components/DemandeMesses/DemandeMesses.jsx":"106","/Users/jocode/Documents/GitHub/anouanze/client/src/components/VerseDay/VerseDay.jsx":"107","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/demande.js":"108","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/demandes.js":"109","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Demandes.jsx":"110","/Users/jocode/Documents/GitHub/anouanze/client/src/actions/demandes.js":"111","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Provinces.jsx":"112","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Diocese.jsx":"113","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/premiumEvents.js":"114","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/othersEvent.js":"115","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Paroisse/PriestCard.jsx":"116","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Search/SearchBar.jsx":"117","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Search/List.jsx":"118","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Home/Bloc Dioceses/DiocesesBloc.jsx":"119","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Home/Bloc Events/EventsBloc.jsx":"120","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Home/Bloc Subscribe/SubscribeBloc.jsx":"121","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Actus.jsx":"122","/Users/jocode/Documents/GitHub/anouanze/client/src/components/ModDashboard/DemandesBoard.jsx":"123","/Users/jocode/Documents/GitHub/anouanze/client/src/components/ModDashboard/LeftBar.jsx":"124","/Users/jocode/Documents/GitHub/anouanze/client/src/components/ModDashboard/ParoisseBoard.jsx":"125","/Users/jocode/Documents/GitHub/anouanze/client/src/components/ModDashboard/Actus.jsx":"126"},{"size":601,"mtime":1654598048000,"results":"127","hashOfConfig":"128"},{"size":941,"mtime":1659832642653,"results":"129","hashOfConfig":"128"},{"size":599,"mtime":1655128334000,"results":"130","hashOfConfig":"128"},{"size":642,"mtime":1654682702000,"results":"131","hashOfConfig":"128"},{"size":1302,"mtime":1653826298000,"results":"132","hashOfConfig":"128"},{"size":462,"mtime":1659825096418,"results":"133","hashOfConfig":"128"},{"size":1260,"mtime":1659901360699,"results":"134","hashOfConfig":"128"},{"size":474,"mtime":1659834372148,"results":"135","hashOfConfig":"128"},{"size":318,"mtime":1659834260304,"results":"136","hashOfConfig":"128"},{"size":662,"mtime":1659834273099,"results":"137","hashOfConfig":"128"},{"size":321,"mtime":1659834325411,"results":"138","hashOfConfig":"128"},{"size":338,"mtime":1659834286421,"results":"139","hashOfConfig":"128"},{"size":674,"mtime":1659834332399,"results":"140","hashOfConfig":"128"},{"size":676,"mtime":1659834390034,"results":"141","hashOfConfig":"128"},{"size":319,"mtime":1659834380177,"results":"142","hashOfConfig":"128"},{"size":329,"mtime":1659834316618,"results":"143","hashOfConfig":"128"},{"size":2475,"mtime":1659834133851,"results":"144","hashOfConfig":"128"},{"size":330,"mtime":1659834309150,"results":"145","hashOfConfig":"128"},{"size":326,"mtime":1659834295365,"results":"146","hashOfConfig":"128"},{"size":1859,"mtime":1657710681118,"results":"147","hashOfConfig":"128"},{"size":3309,"mtime":1659604678665,"results":"148","hashOfConfig":"128"},{"size":429,"mtime":1654682884000,"results":"149","hashOfConfig":"128"},{"size":4064,"mtime":1659834626820,"results":"150","hashOfConfig":"128"},{"size":4907,"mtime":1659834614929,"results":"151","hashOfConfig":"128"},{"size":441,"mtime":1659834597529,"results":"152","hashOfConfig":"128"},{"size":6944,"mtime":1659838177329,"results":"153","hashOfConfig":"128"},{"size":3102,"mtime":1659825015520,"results":"154","hashOfConfig":"128"},{"size":728,"mtime":1654211978000,"results":"155","hashOfConfig":"128"},{"size":2357,"mtime":1660188711016,"results":"156","hashOfConfig":"128"},{"size":880,"mtime":1654254044000,"results":"157","hashOfConfig":"128"},{"size":1264,"mtime":1654600238000,"results":"158","hashOfConfig":"128"},{"size":2031,"mtime":1654600230000,"results":"159","hashOfConfig":"128"},{"size":4203,"mtime":1659836467129,"results":"160","hashOfConfig":"128"},{"size":950,"mtime":1654682694000,"results":"161","hashOfConfig":"128"},{"size":1251,"mtime":1659834670985,"results":"162","hashOfConfig":"128"},{"size":208,"mtime":1655127600000,"results":"163","hashOfConfig":"128"},{"size":232,"mtime":1655134868000,"results":"164","hashOfConfig":"128"},{"size":3133,"mtime":1653752928000,"results":"165","hashOfConfig":"128"},{"size":1883,"mtime":1653752876000,"results":"166","hashOfConfig":"128"},{"size":1017,"mtime":1655290064000,"results":"167","hashOfConfig":"128"},{"size":621,"mtime":1657622051266,"results":"168","hashOfConfig":"128"},{"size":3014,"mtime":1659834454905,"results":"169","hashOfConfig":"128"},{"size":1238,"mtime":1657882643378,"results":"170","hashOfConfig":"128"},{"size":1526,"mtime":1659838227968,"results":"171","hashOfConfig":"128"},{"size":90,"mtime":1659832338936,"results":"172","hashOfConfig":"128"},{"size":1294,"mtime":1660188795759,"results":"173","hashOfConfig":"128"},{"size":124,"mtime":1659901280392,"results":"174","hashOfConfig":"128"},{"size":2020,"mtime":1660188891143,"results":"175","hashOfConfig":"128"},{"size":115,"mtime":1660187179627,"results":"176","hashOfConfig":"128"},{"size":135,"mtime":1660187190699,"results":"177","hashOfConfig":"128"},{"size":121,"mtime":1660187204897,"results":"178","hashOfConfig":"128"},{"size":601,"mtime":1654598048000,"results":"179","hashOfConfig":"180"},{"size":1090,"mtime":1664356934294,"results":"181","hashOfConfig":"180"},{"size":808,"mtime":1664291963433,"results":"182","hashOfConfig":"180"},{"size":642,"mtime":1654682702000,"results":"183","hashOfConfig":"180"},{"size":1748,"mtime":1664291882041,"results":"184","hashOfConfig":"180"},{"size":90,"mtime":1659832338936,"results":"185","hashOfConfig":"180"},{"size":462,"mtime":1659825096418,"results":"186","hashOfConfig":"180"},{"size":474,"mtime":1659834372148,"results":"187","hashOfConfig":"180"},{"size":662,"mtime":1659834273099,"results":"188","hashOfConfig":"180"},{"size":321,"mtime":1664291880720,"results":"189","hashOfConfig":"180"},{"size":338,"mtime":1659834286421,"results":"190","hashOfConfig":"180"},{"size":676,"mtime":1659834390034,"results":"191","hashOfConfig":"180"},{"size":1824,"mtime":1665261993492,"results":"192","hashOfConfig":"180"},{"size":319,"mtime":1659834380177,"results":"193","hashOfConfig":"180"},{"size":674,"mtime":1659834332399,"results":"194","hashOfConfig":"180"},{"size":2475,"mtime":1659834133851,"results":"195","hashOfConfig":"180"},{"size":326,"mtime":1659834295365,"results":"196","hashOfConfig":"180"},{"size":330,"mtime":1659834309150,"results":"197","hashOfConfig":"180"},{"size":329,"mtime":1659834316618,"results":"198","hashOfConfig":"180"},{"size":318,"mtime":1659834260304,"results":"199","hashOfConfig":"180"},{"size":2202,"mtime":1664291729674,"results":"200","hashOfConfig":"180"},{"size":3825,"mtime":1665996965112,"results":"201","hashOfConfig":"180"},{"size":1224,"mtime":1665393835375,"results":"202","hashOfConfig":"180"},{"size":3519,"mtime":1664463479488,"results":"203","hashOfConfig":"180"},{"size":9599,"mtime":1666002622434,"results":"204","hashOfConfig":"180"},{"size":1294,"mtime":1665281330976,"results":"205","hashOfConfig":"180"},{"size":5374,"mtime":1666000962063,"results":"206","hashOfConfig":"180"},{"size":4617,"mtime":1666000974282,"results":"207","hashOfConfig":"180"},{"size":495,"mtime":1664963019084,"results":"208","hashOfConfig":"180"},{"size":1272,"mtime":1665324682428,"results":"209","hashOfConfig":"180"},{"size":1237,"mtime":1665285696790,"results":"210","hashOfConfig":"180"},{"size":3083,"mtime":1666001038386,"results":"211","hashOfConfig":"180"},{"size":728,"mtime":1654211978000,"results":"212","hashOfConfig":"180"},{"size":3521,"mtime":1666619291427,"results":"213","hashOfConfig":"180"},{"size":2926,"mtime":1666000885530,"results":"214","hashOfConfig":"180"},{"size":886,"mtime":1665393844925,"results":"215","hashOfConfig":"180"},{"size":2579,"mtime":1665570353791,"results":"216","hashOfConfig":"180"},{"size":152,"mtime":1660256558751,"results":"217","hashOfConfig":"180"},{"size":2020,"mtime":1660188891143,"results":"218","hashOfConfig":"180"},{"size":18885,"mtime":1666000907204,"results":"219","hashOfConfig":"180"},{"size":23784,"mtime":1666000913222,"results":"220","hashOfConfig":"180"},{"size":1264,"mtime":1666617683548,"results":"221","hashOfConfig":"180"},{"size":621,"mtime":1657622051266,"results":"222","hashOfConfig":"180"},{"size":2923,"mtime":1666000933070,"results":"223","hashOfConfig":"180"},{"size":1276,"mtime":1664364832034,"results":"224","hashOfConfig":"180"},{"size":1251,"mtime":1659834670985,"results":"225","hashOfConfig":"180"},{"size":208,"mtime":1655127600000,"results":"226","hashOfConfig":"180"},{"size":232,"mtime":1655134868000,"results":"227","hashOfConfig":"180"},{"size":1235,"mtime":1666000735005,"results":"228","hashOfConfig":"180"},{"size":2532,"mtime":1666000859641,"results":"229","hashOfConfig":"180"},{"size":4416,"mtime":1666000878345,"results":"230","hashOfConfig":"180"},{"size":5670,"mtime":1662732995133,"results":"231","hashOfConfig":"180"},{"size":1661,"mtime":1665678399873,"results":"232","hashOfConfig":"180"},{"size":810,"mtime":1660906342631,"results":"233","hashOfConfig":"180"},{"size":759,"mtime":1664962289298,"results":"234","hashOfConfig":"180"},{"size":112,"mtime":1660923826979,"results":"235","hashOfConfig":"180"},{"size":575,"mtime":1661161911083,"results":"236","hashOfConfig":"180"},{"size":339,"mtime":1661161853813,"results":"237","hashOfConfig":"180"},{"size":7846,"mtime":1666000948970,"results":"238","hashOfConfig":"180"},{"size":844,"mtime":1665316044704,"results":"239","hashOfConfig":"180"},{"size":4850,"mtime":1664966876670,"results":"240","hashOfConfig":"180"},{"size":3072,"mtime":1666000957811,"results":"241","hashOfConfig":"180"},{"size":329,"mtime":1664291861739,"results":"242","hashOfConfig":"180"},{"size":327,"mtime":1664291876337,"results":"243","hashOfConfig":"180"},{"size":1099,"mtime":1665680209283,"results":"244","hashOfConfig":"180"},{"size":969,"mtime":1666000938973,"results":"245","hashOfConfig":"180"},{"size":1712,"mtime":1665137908320,"results":"246","hashOfConfig":"180"},{"size":792,"mtime":1665223782285,"results":"247","hashOfConfig":"180"},{"size":860,"mtime":1664962292383,"results":"248","hashOfConfig":"180"},{"size":433,"mtime":1664962724743,"results":"249","hashOfConfig":"180"},{"size":1966,"mtime":1666002666462,"results":"250","hashOfConfig":"180"},{"size":1686,"mtime":1665321272519,"results":"251","hashOfConfig":"180"},{"size":2025,"mtime":1665324705239,"results":"252","hashOfConfig":"180"},{"size":16314,"mtime":1666000919787,"results":"253","hashOfConfig":"180"},{"size":10125,"mtime":1666000899557,"results":"254","hashOfConfig":"180"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bmqoqk",{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"294"},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},"yekeap",{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417"},{"filePath":"418","messages":"419","suppressedMessages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"427","messages":"428","suppressedMessages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"413"},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"440","messages":"441","suppressedMessages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"443","messages":"444","suppressedMessages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"446","messages":"447","suppressedMessages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"449","messages":"450","suppressedMessages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","suppressedMessages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"455","messages":"456","suppressedMessages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"458","messages":"459","suppressedMessages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"461","messages":"462","suppressedMessages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"464","messages":"465","suppressedMessages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"467","messages":"468","suppressedMessages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"470","messages":"471","suppressedMessages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"473","messages":"474","suppressedMessages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"476","messages":"477","suppressedMessages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"479","messages":"480","suppressedMessages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482"},{"filePath":"483","messages":"484","suppressedMessages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","suppressedMessages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489"},{"filePath":"490","messages":"491","suppressedMessages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493"},{"filePath":"494","messages":"495","suppressedMessages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"497"},{"filePath":"498","messages":"499","suppressedMessages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501"},{"filePath":"502","messages":"503","suppressedMessages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505"},{"filePath":"506","messages":"507","suppressedMessages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509"},{"filePath":"510","messages":"511","suppressedMessages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513"},{"filePath":"514","messages":"515","suppressedMessages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517"},{"filePath":"518","messages":"519","suppressedMessages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"521","messages":"522","suppressedMessages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"524","messages":"525","suppressedMessages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","suppressedMessages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"530","messages":"531","suppressedMessages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533"},{"filePath":"534","messages":"535","suppressedMessages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"537","messages":"538","suppressedMessages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"413"},{"filePath":"541","messages":"542","suppressedMessages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544"},{"filePath":"545","messages":"546","suppressedMessages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548"},{"filePath":"549","messages":"550","suppressedMessages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","suppressedMessages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"555","messages":"556","suppressedMessages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558"},{"filePath":"559","messages":"560","suppressedMessages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","suppressedMessages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"565","messages":"566","suppressedMessages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"568","messages":"569","suppressedMessages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"571","messages":"572","suppressedMessages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","suppressedMessages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","suppressedMessages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580"},{"filePath":"581","messages":"582","suppressedMessages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"413"},{"filePath":"585","messages":"586","suppressedMessages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588"},{"filePath":"589","messages":"590","suppressedMessages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"592","messages":"593","suppressedMessages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"595","messages":"596","suppressedMessages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"598","messages":"599","suppressedMessages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"601","messages":"602","suppressedMessages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"604","messages":"605","suppressedMessages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607"},{"filePath":"608","messages":"609","suppressedMessages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"611","messages":"612","suppressedMessages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614"},{"filePath":"615","messages":"616","suppressedMessages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618"},{"filePath":"619","messages":"620","suppressedMessages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"622","messages":"623","suppressedMessages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"413"},{"filePath":"625","messages":"626","suppressedMessages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"628","messages":"629","suppressedMessages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631"},{"filePath":"632","messages":"633","suppressedMessages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635"},{"filePath":"636","messages":"637","suppressedMessages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","suppressedMessages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"642","messages":"643","suppressedMessages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"645","messages":"646","suppressedMessages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"648"},{"filePath":"649","messages":"650","suppressedMessages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652"},{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"657"},{"filePath":"658","messages":"659","suppressedMessages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661"},{"filePath":"662","messages":"663","suppressedMessages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665"},"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/index.js",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/App.js",["666"],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/index.js",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/actions/user.js",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/actions/event.js",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Loader/Loader.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/routes/index.js",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/auth.js",[],["667"],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/users.js",[],["668"],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/user.js",[],["669"],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/events.js",[],["670"],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/threeEvents.js",[],["671"],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/event.js",[],["672"],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/actu.js",[],["673"],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/actus.js",[],["674"],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/message.js",[],["675"],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/paroisse.js",[],["676"],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/nearParoisses.js",[],["677"],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/reducers/paroisses.js",[],["678"],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/constants/reducers.js",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/api/index.js",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/Home.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/Event.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/Events.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/Login.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/Paroisse.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/actions/paroisse.js",["679","680","681"],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/utils/index.js",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/NavBar/NavBar.jsx",["682"],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Footer/Footer.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Login/LogContainer.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Carousel/Carousel.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Map/Map.jsx",["683","684"],["685"],"import React, { useEffect, useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\n\nimport { getNearParoisses } from \"../../actions/paroisse\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport List from \"./List/List\";\nimport Marker from \"./Marker\";\nimport ParoisseMarker from \"./ParoisseMarker\";\n\nimport mapStyles from \"./mapStyles\";\n\nimport { isEmpty } from \"../utils\";\n\nconst Map = () => {\n  const [shistApi] = useState(true);\n  const [userCoords, setUserCoords] = useState({});\n  const [coordinates, setCoordinates] = useState({});\n  const [onLoading, setOnLoading] = useState(true);\n  let coords = \"\";\n\n  const dispatch = useDispatch();\n  const paroisses = useSelector((state) => state.nearParoisses);\n  const apiKey = shistApi && \"AIzaSyBwwRjHA3A4j64wjjtRgKfhviBkvz9psYE\";\n\n  const [paroisseCoords, setParoisseCoords] = useState({\n    lat: !isEmpty(paroisses)\n      ? paroisses?.result[0]?.location.coordinates[0]\n      : null,\n    lng: !isEmpty(paroisses)\n      ? paroisses?.result[0]?.location.coordinates[1]\n      : null,\n  });\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      ({ coords: { latitude, longitude } }) => {\n        setCoordinates({ lat: latitude, lng: longitude });\n        setUserCoords({ lat: latitude, lng: longitude });\n      }\n    );\n\n    setTimeout(() => {\n      setOnLoading(false);\n    }, 3000);\n  }, []);\n\n  useEffect(() => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    coords = coordinates.lat + \";\" + coordinates.lng;\n    dispatch(getNearParoisses(coords));\n  }, [coordinates]);\n\n  //const google = window.google;\n\n  /*   const apiIsLoaded = (map, maps) => {\n    const directionsService = new google.maps.DirectionsService();\n    const directionsRenderer = new google.maps.DirectionsRenderer();\n    directionsRenderer.setMap(map);\n\n    directionsService.route(\n      {\n        origin: coordinates,\n        destination: paroisseCoords,\n        travelMode: google.maps.TravelMode.DRIVING,\n      },\n      (response, status) => {\n        if (status === \"OK\") {\n          directionsRenderer.setDirections(response);\n          console.log(response.routes[0].overview_path, \"Ruta\");\n          const routePolyline = new google.maps.Polyline({\n            path: response.routes[0].overview_path,\n          });\n          routePolyline.setMap(map);\n        } else {\n          window.alert(\"Directions request failed due to \" + status);\n        }\n      }\n    );\n  }; */\n\n  const handleParoisseCoords = (coords) => {\n    setParoisseCoords({ lat: coords[0], lng: coords[1] });\n  };\n\n  return (\n    <div className=\"map-container\">\n      <div className=\"map-list-container\">\n        <h1>Près de Chez vous</h1>\n        {!isEmpty(paroisses.result) ? (\n          <List paroisses={paroisses.result} />\n        ) : (\n          <>\n            <h2>Aucun Résultat pour cette zone</h2>{\" \"}\n          </>\n        )}\n      </div>\n      <div className=\"map-container\">\n        {onLoading ? (\n          <div className=\"lds-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        ) : (\n          <GoogleMapReact\n            bootstrapURLKeys={{ key: apiKey }}\n            defaultCenter={coordinates}\n            center={coordinates}\n            defaultZoom={15}\n            margin={[50, 50, 50, 50]}\n            options={{\n              disableDefaultUI: true,\n              zoomControl: true,\n              styles: mapStyles,\n            }}\n            onChange={(e) => {\n              console.log(e);\n              setCoordinates({ lat: e.center.lat, lng: e.center.lng });\n            }}\n            //onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps)}\n            yesIWantToUseGoogleMapApiInternals={true}\n          >\n            <Marker lat={userCoords.lat} lng={userCoords.lng} />\n\n            {paroisses.result?.map((paroisses, idx) => (\n              <ParoisseMarker\n                lat={paroisses.location.coordinates[0]}\n                lng={paroisses.location.coordinates[1]}\n                key={idx}\n              />\n            ))}\n          </GoogleMapReact>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Map;\n","/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/actions/auth.js",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Map/mapStyles.js",[],["686"],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Map/Marker.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Map/ParoisseMarker.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Login/Forms/SignUpForm.jsx",["687"],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Login/Forms/SignInForm.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Map/List/List.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/HeadBar/HeadBar.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/Paroisses.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/actions/actus.js",["688"],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/Paroisse/ChooseButton.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/AppContext.js",["689"],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/AdminDashboard.jsx",["690","691","692","693"],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/pages/ModDashboard.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/AdminDashboard/LeftBar.jsx",["694","695"],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/AdminDashboard/DashBoard.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/AdminDashboard/ParoissesBoard.jsx",[],[],"/Users/jocode/Desktop/JVC/APP PAROISSE/ANOUANZE/client/src/components/AdminDashboard/EventsBoard.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/index.js",[],[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/App.js",["696"],[],"import React, { useEffect, useState } from \"react\";\nimport Routes from \"./routes\";\nimport Loader from \"./components/Loader/Loader\";\nimport { getUser } from \"./actions/user\";\nimport { useDispatch } from \"react-redux\";\nimport { UidContext } from \"./components/AppContext\";\nimport { GoogleOAuthProvider } from \"@react-oauth/google\";\n\nconst App = () => {\n  const [onLoading, setOnLoading] = useState(true);\n\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem(\"jwt\"));\n  const userId = user?.result?._id;\n\n  useEffect(() => {\n    dispatch(getUser(userId));\n\n    setTimeout(() => {\n      setOnLoading(false);\n    }, 2000);\n  }, [userId]);\n\n  const GOOGLE_CLIENT_ID =\n    \"204343189133-r0sop34kjle3b4286ko64mj4t0ddm5av.apps.googleusercontent.com\";\n\n  return (\n    <GoogleOAuthProvider clientId={GOOGLE_CLIENT_ID}>\n      <div>\n        {onLoading ? (\n          <Loader />\n        ) : (\n          <UidContext.Provider value={userId}>\n            <Routes />\n          </UidContext.Provider>\n        )}\n      </div>\n    </GoogleOAuthProvider>\n  );\n};\n\nexport default App;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/index.js",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/actions/user.js",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/actions/event.js",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/AppContext.js",["697"],[],"import React, { createContext } from \"react\";\n\nexport const UidContext = createContext();\n","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Loader/Loader.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/auth.js",[],["698"],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/user.js",[],["699"],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/events.js",[],["700"],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/threeEvents.js",[],["701"],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/actu.js",[],["702"],"/Users/jocode/Documents/GitHub/anouanze/client/src/routes/index.js",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/actus.js",[],["703"],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/event.js",[],["704"],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/paroisse.js",[],["705"],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/paroisses.js",[],["706"],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/nearParoisses.js",[],["707"],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/message.js",[],["708"],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/users.js",[],["709"],"/Users/jocode/Documents/GitHub/anouanze/client/src/constants/reducers.js",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/api/index.js",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Home.jsx",["710","711"],[],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport NavBar from \"../components/NavBar/NavBar\";\nimport Carousel from \"../components/Carousel/Carousel\";\nimport MapComponent from \"../components/Map/Map\";\nimport Footer from \"../components/Footer/Footer\";\nimport MaParoisse from \"../components/MaParoisse/MaParoisse\";\nimport DemandeMesses from \"../components/DemandeMesses/DemandeMesses\";\nimport SearchBar from \"../components/Search/SearchBar\";\n\nimport DiocesesBloc from \"../components/Home/Bloc Dioceses/DiocesesBloc\";\nimport EventsBloc from \"../components/Home/Bloc Events/EventsBloc\";\nimport SubscribeBloc from \"../components/Home/Bloc Subscribe/SubscribeBloc\";\nimport { isEmpty } from \"../components/utils\";\n\nconst Home = () => {\n  const user = useSelector((state) => state.user.user);\n  return (\n    <main className=\"home-container\">\n      <NavBar value={\"Accueil\"} />\n      <SearchBar />\n      <Carousel />\n      <MapComponent />\n      {/*user?._paroisse !== \"\" && <MaParoisse id={user?._paroisse} /> */}\n      <DiocesesBloc />\n      <DemandeMesses />\n      <EventsBloc />\n      {isEmpty(user) && <SubscribeBloc />}\n\n      <Footer dot=\"\" />\n    </main>\n  );\n};\n\nexport default Home;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Event.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Paroisse.jsx",["712","713","714","715","716","717","718"],[],"import React, { useState, useEffect } from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getParoisse } from \"../actions/paroisse\";\nimport { getActuByID } from \"../actions/actus\";\nimport { isEmpty } from \"../components/utils\";\nimport NavBar from \"../components/NavBar/NavBar\";\n\nimport ChooseButton from \"../components/Paroisse/ChooseButton\";\nimport PriestCard from \"../components/Paroisse/PriestCard\";\n\nimport Loader from \"../components/Loader/Loader\";\n\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Navigation, Pagination } from \"swiper\";\n\n// Import Swiper styles\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/scrollbar\";\n\nconst Paroisse = () => {\n  const [onLoading, setOnLoading] = useState(true);\n  const [isCardVisible, setIsCardVisible] = useState(false);\n  const [priestID, setPriestID] = useState(null);\n  const [priestData, setPriestData] = useState({});\n\n  const { id } = useParams();\n  const dispatch = useDispatch();\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  let paroisse = {};\n  paroisse = useSelector((state) => state.paroisse);\n\n  let actus = {};\n  actus = useSelector((state) => state.actus);\n\n  const putDashes = (hours) => {\n    const arrayLength = hours.length;\n    let result = \"\";\n    if (arrayLength === 2) {\n      result = hours[0] + \" - \" + hours[1];\n    } else if (arrayLength === 1) {\n      result = hours[0];\n    } else {\n      result = hours[0] + \" - \" + hours[1] + \" - \" + hours[2];\n    }\n    return result;\n  };\n\n  const renderConfessions = () => {\n    let bool = true;\n\n    return (\n      <>\n        {paroisse?.confessions.map((conf, idx) => (\n          <>\n            {(bool = conf?.dayHour.length > 0)}\n            <div key={idx}>\n              {bool && conf.dayName + \" :\"} {bool && putDashes(conf?.dayHour)}\n            </div>\n          </>\n        ))}\n      </>\n    );\n  };\n\n  useEffect(() => {\n    if (onLoading) {\n      dispatch(getParoisse(id));\n      dispatch(getActuByID(id));\n    }\n\n    setTimeout(() => {\n      setOnLoading(false);\n    }, 1000);\n  }, [dispatch, id, onLoading]);\n\n  const checkPriest = (priest) => {\n    setIsCardVisible(true);\n    setPriestData(priest);\n  };\n\n  const name = !isEmpty(paroisse) && paroisse.diocese;\n  const provinceName = !isEmpty(paroisse) && paroisse.province;\n\n  const sendName = () => {\n    const voy = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"];\n    let bool = true;\n\n    for (let i = 0; i < voy.length; i++) {\n      if (name[0] === voy[i]) {\n        bool = true;\n        break;\n      } else {\n        bool = false;\n      }\n    }\n\n    return bool === true ? `Diocèse d'${name}` : `Diocèse de ${name}`;\n  };\n\n  const sendProvinceName = () => {\n    const voy = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"];\n    let bool = true;\n\n    for (let i = 0; i < voy.length; i++) {\n      if (provinceName[0] === voy[i]) {\n        bool = true;\n        break;\n      } else {\n        bool = false;\n      }\n    }\n\n    return bool === true ? `d'${provinceName}` : `de ${provinceName}`;\n  };\n\n  return (\n    <>\n      {onLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <NavBar value={\"Paroisses\"} />\n          <div className=\"paroisse-container\">\n            <div className=\"file-arianne\">\n              <NavLink to=\"/provinces\" className=\"file-ariane-element\">\n                <h1>Diocèses et Paroisses</h1>\n              </NavLink>\n              <NavLink to=\"/provinces\" className=\"file-ariane-element\">\n                <h1>Province écclésiastique {sendProvinceName()}</h1>\n              </NavLink>\n              <NavLink to={`/diocese/${name}`} className=\"file-ariane-element\">\n                <h1>{sendName()}</h1>\n              </NavLink>\n            </div>\n            {!isEmpty(paroisse) ? (\n              <>\n                <div className=\"paroisse-image\">\n                  {paroisse?.pictures[0] ? (\n                    <img\n                      src={process.env.PUBLIC_URL + paroisse.pictures[0]}\n                      alt={paroisse.name}\n                    />\n                  ) : (\n                    <img\n                      src={process.env.PUBLIC_URL + \"/imgs/icon.png\"}\n                      alt={paroisse.name}\n                    />\n                  )}\n                </div>\n                <div className=\"paroisse-infos\">\n                  <div className=\"paroisse-name\">{paroisse.name}</div>\n\n                  <div className=\"paroisse-program-head\">\n                    Programme des Messes\n                  </div>\n\n                  <div className=\"paroisse-program\">\n                    {!isEmpty(paroisse?.messes[0]?.dayHour) &&\n                      paroisse?.messes.map((messe, idx) => (\n                        <>\n                          <div key={idx}>\n                            {messe.dayName} : {putDashes(messe?.dayHour)}\n                          </div>\n                        </>\n                      ))}\n                  </div>\n\n                  <div className=\"paroisse-program-head\">\n                    Programme des Confessions\n                  </div>\n\n                  <div className=\"paroisse-program\">\n                    {!isEmpty(paroisse?.confessions) && renderConfessions()}\n                  </div>\n\n                  <div className=\"paroisse-program-head\">\n                    Actualité Paroissiale\n                  </div>\n\n                  <div className=\"paroisse-placeholder\">\n                    Catéchèse - Récollection - Pélé - Veillée et autres\n                    informations qui permettrons aux paroissiens d'être informés\n                  </div>\n\n                  {!isEmpty(actus.data) &&\n                    renderActus(actus.data, paroisse._id)}\n\n                  <div className=\"paroisse-program-head\">\n                    Présentation de la paroisse\n                  </div>\n\n                  <div className=\"paroisse-placeholder\">\n                    Histoire de la paroisse - Clergé - Autres\n                  </div>\n                </div>\n              </>\n            ) : (\n              <>\n                <Loader />\n              </>\n            )}\n\n            <div className=\"paroisse-sub-container\">\n              <div className=\"paroisse-history-container\">\n                {paroisse?.history ? (\n                  <>\n                    <div>{paroisse.history}</div>\n                  </>\n                ) : (\n                  <>\n                    <div>Histoire non répertoriée</div>\n                  </>\n                )}\n              </div>\n\n              <div className=\"paroisse-program-head\">Clergé</div>\n\n              <div className=\"paroisse-clergy-container\">\n                {!isEmpty(paroisse?.clergy) ? (\n                  <>\n                    <div className=\"paroisse-clergy-blocks\">\n                      {paroisse.clergy.map((priest, idx) => (\n                        <>\n                          <div className=\"paroisse-priest-block\" key={idx}>\n                            <div className=\"paroisse-priest-img\">\n                              <img\n                                src={\n                                  process.env.PUBLIC_URL + priest.priestPicture\n                                }\n                                alt={priest.name}\n                              />\n                            </div>\n                            <div className=\"paroisse-priest-name\">\n                              Père {priest.priestName}\n                            </div>\n                            <div className=\"paroisse-priest-role\">\n                              {priest.priestRole}\n                            </div>\n                            <div\n                              className=\"priest-discover\"\n                              onClick={() => checkPriest(priest)}\n                            >\n                              Découvrir +\n                            </div>\n                          </div>\n                        </>\n                      ))}\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <div>Clergé non répertorié</div>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n          {isCardVisible === true && (\n            <PriestCard\n              priestData={priestData}\n              isCardVisible={isCardVisible}\n              setIsCardVisible={setIsCardVisible}\n              paroisseName={paroisse?.name}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst renderActus = (actus, idParoisse) => {\n  let newArr = actus\n    .sort((a, b) => {\n      return b.createdAt.localeCompare(a.createdAt);\n    })\n    .slice(0, 3);\n\n  return (\n    <div className=\"paroisse-actus\">\n      {!isEmpty(newArr)\n        ? newArr.map((actu, idx) => (\n            <NavLink to={`/actu/${actu._id}`} className=\"actu-block\" key={idx}>\n              <img\n                src={process.env.PUBLIC_URL + actu.poster}\n                alt={actu.title}\n              />\n              <h2>{actu.title}</h2>\n            </NavLink>\n          ))\n        : null}\n      {newArr.length >= 1 && (\n        <NavLink to={`/actus/${idParoisse}`} className=\"actu-block\">\n          <img\n            src={process.env.PUBLIC_URL + \"/uploads/actus/default-actu.jpg\"}\n            alt=\"Plus Actualitéss\"\n          />\n          <h2>Plus d'actualités</h2>\n        </NavLink>\n      )}\n    </div>\n  );\n};\n\nexport default Paroisse;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/AdminDashboard.jsx",["719","720","721","722"],[],"import React, { createContext } from \"react\";\nimport LeftBar from \"../components/AdminDashboard/LeftBar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport DashBoard from \"../components/AdminDashboard/DashBoard\";\nimport ParoissesBoard from \"../components/AdminDashboard/ParoissesBoard\";\nimport EventsBoard from \"../components/AdminDashboard/EventsBoard\";\nimport { isEmpty } from \"../components/utils/index\";\n\nexport const AdminContext = createContext();\n\nconst AdminDashboard = () => {\n  const [menuId, setMenuId] = useState(1);\n  const userDatas = useSelector((state) => state.user.user);\n\n  const toogleMenu = (e) => {\n    setMenuId(e);\n  };\n\n  return (\n    <AdminContext.Provider value={{ menuId, toogleMenu }}>\n      {!isEmpty(userDatas) ? (\n        <div className=\"admin-dashboard-container\">\n          <div className=\"admin-dashboard-left\">\n            <LeftBar userName={`${userDatas?.name} ${userDatas?.lastName}`} />\n          </div>\n          <div className=\"admin-dashboard-center\">\n            {menuId == 1 && <DashBoard />}\n            {menuId == 2 && <ParoissesBoard />}\n            {menuId == 3 && <EventsBoard />}\n          </div>\n        </div>\n      ) : null}\n    </AdminContext.Provider>\n  );\n};\n\nexport default AdminDashboard;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Events.jsx",["723","724","725","726","727"],[],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllEvents } from \"../actions/event\";\nimport { NavLink } from \"react-router-dom\";\nimport { isEmpty } from \"../components/utils\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport Footer from \"../components/Footer/Footer\";\n\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/fr\";\n\nimport Loader from \"../components/Loader/Loader\";\n\nconst Events = () => {\n  const dispatch = useDispatch();\n\n  const [onLoading, setOnLoading] = useState(true);\n  const [onPlaceholder, setOnPlaceholder] = useState(true);\n  const events = useSelector((state) => state.events);\n  useEffect(() => {\n    if (onLoading) {\n      dispatch(getAllEvents());\n    }\n  }, [dispatch, onLoading]);\n\n  const newArr = !isEmpty(events)\n    ? events.sort((a, b) => {\n        return Number(b.isPremium) - Number(a.isPremium);\n      })\n    : [];\n\n  dayjs.locale(\"fr\");\n  const hourParser = (date) => {\n    return dayjs(date).format(\"HH\");\n  };\n\n  const minuteParser = (date) => {\n    return dayjs(date).format(\"mm\");\n  };\n\n  useEffect(() => {\n    if (!isEmpty(events)) {\n      setOnLoading(false);\n      events.map((event) => console.log(event));\n    }\n\n    setTimeout(() => {\n      setOnLoading(false);\n    }, 2000);\n\n    setTimeout(() => {\n      setOnPlaceholder(false);\n    }, 3000);\n  }, [events]);\n\n  return (\n    <>\n      {onLoading ? (\n        <>\n          <Loader />\n        </>\n      ) : (\n        <>\n          <NavBar value={\"Events\"} />\n          <div className=\"events-container\">\n\n            <div className=\"events-blocks-container\">\n              {isEmpty(events) || onPlaceholder\n                ? events.map((event) => (\n                    <>\n                      <div className=\"card\">\n                        <div className=\"card_load\"></div>\n                        <div className=\"card_load-content\">\n                          <div className=\"card_load_extreme_title\"></div>\n                          <div className=\"card_load_extreme_descripion\"></div>\n                        </div>\n                      </div>\n                    </>\n                  ))\n                : events.map((event) => (\n                    <>\n                      <a\n                        href={event.poster}\n                        target=\"_blank\"\n                        className=\"event-card\"\n                      >\n                        <div className=\"event-poster\">\n                          <img src={event.poster} alt=\"poster\" />\n                        </div>\n                        <div className=\"event-details\">\n                          <div className=\"event-title\">\n                            <h2>{event.title}</h2>\n                          </div>\n\n                          <div className=\"event-description\">\n                            <p>{event.description}</p>\n                            <p>Lieu : {event.address}</p>\n                          </div>\n\n                          <div className=\"event-sub\">\n                            <div className=\"event-date\">\n                              <img\n                                src={\n                                  process.env.PUBLIC_URL +\n                                  \"/imgs/icons/calendar.png\"\n                                }\n                                alt=\"calendar \"\n                              />\n                              {event?.dateEvent.length === 1 ? (\n                                <>\n                                  <p>\n                                    {dayjs(event.dateEvent[0]).format(\n                                      \"DD MMMM YYYY\"\n                                    )}\n                                  </p>\n                                </>\n                              ) : (\n                                <>\n                                  <p>\n                                    {dayjs(event.dateEvent[0]).format(\n                                      \"DD MMMM YYYY\"\n                                    )}\n                                    <br />\n                                    {dayjs(event.dateEvent[1]).format(\n                                      \"DD MMMM YYYY\"\n                                    )}\n                                  </p>\n                                </>\n                              )}\n                            </div>\n                            <div className=\"event-time\">\n                              <img\n                                src={\n                                  process.env.PUBLIC_URL +\n                                  \"/imgs/icons/clock.png\"\n                                }\n                                alt=\"calendar \"\n                              />\n                              {hourParser(event.startAt) + \"H\"} -{\" \"}\n                              {hourParser(event.endAt) + \"H\"}\n                            </div>\n                            <div className=\"event-organizer\">\n                              <p>Organisateur :</p>\n                              {event.organizer}\n                            </div>\n                          </div>\n                        </div>\n                      </a>\n                    </>\n                  ))}\n            </div>\n          </div>\n         {/* <Footer /> */}\n\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Events;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Paroisses.jsx",["728"],[],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { isEmpty } from \"../components/utils\";\nimport { getAllParoisse } from \"../actions/paroisse\";\nimport Loader from \"../components/Loader/Loader\";\nimport NavBar from \"../components/NavBar/NavBar\";\n\nconst Paroisses = () => {\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n  const [onPlaceholder, setOnPlaceholder] = useState(true);\n  const [count, setCount] = useState(3);\n  const [paroissesGroupe, setParoissesGroupe] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n\n  const holder = [1, 2, 3, 4, 5, 6];\n\n  let paroisses = useSelector((state) => state.paroisses);\n\n  const loadMore = () => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop + 1 >\n      document.scrollingElement.scrollHeight\n    ) {\n      setIsLoading(true);\n    }\n  };\n\n  useEffect(() => {\n    if (isLoading) {\n      dispatch(getAllParoisse(count));\n      setIsLoading(false);\n      setCount(count + 4);\n    }\n\n    window.addEventListener(\"scroll\", loadMore);\n    return () => window.removeEventListener(\"scroll\", loadMore);\n  }, [dispatch, isLoading]);\n\n  useEffect(() => {\n    if (!isEmpty(paroisses)) {\n      setIsLoading(false);\n      setParoissesGroupe(paroisses);\n    }\n    setTimeout(() => {\n      setOnPlaceholder(false);\n    }, 3000);\n  }, [paroisses]);\n\n  const searchParoisse = (e) => {\n    setSearchText(e);\n\n    const regex = new RegExp(\n      \"(?:[^.w]|^|^\\\\W+)\" + e + \"(?:[^.w]|\\\\W(?=\\\\W+|$)|$)\",\n      \"i\"\n    );\n    const res = paroisses.filter((v) => regex.test(v.name));\n\n    setParoissesGroupe(res);\n\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <NavBar value={\"Paroisses\"} />\n          <div className=\"paroisses-container\">\n            <header className=\"paroisses-header\">\n              <h1>Paroisses</h1>\n            </header>\n\n            <div className=\"paroisses-blocks-container\">\n              {isEmpty(paroisses[0]) || onPlaceholder ? (\n                <>\n                  {holder.map((holder, idx) => (\n                    <div className=\"card\" key={idx}>\n                      <div className=\"card_load\"></div>\n                      <div className=\"card_load-content\">\n                        <div className=\"card_load_extreme_title\"></div>\n                        <div className=\"card_load_extreme_descripion\"></div>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              ) : (\n                <>\n                  <div className=\"search-container\">\n                    <input\n                      type=\"text\"\n                      value={searchText}\n                      onChange={(e) => searchParoisse(e.target.value)}\n                      placeholder=\"Chercher une Paroisse...\"\n                    />\n                  </div>\n                  {paroissesGroupe.map((paroisse) => (\n                    <>\n                      <NavLink\n                        to={`/paroisse/${paroisse._id}`}\n                        className=\"paroisse-card\"\n                        key={paroisse._id}\n                      >\n                        <div className=\"paroisse-card-img\">\n                          {paroisse?.pictures[0] ? (\n                            <img\n                              src={\n                                process.env.PUBLIC_URL + paroisse.pictures[0]\n                              }\n                              alt={paroisse.name}\n                            />\n                          ) : (\n                            <img\n                              src={process.env.PUBLIC_URL + \"/imgs/icon.png\"}\n                              alt={paroisse.name}\n                            />\n                          )}{\" \"}\n                        </div>\n                        <div className=\"paroisse-card-content\">\n                          <div className=\"paroisse-card-title\">\n                            {paroisse.name}\n                          </div>\n                          <div className=\"paroisse-card-descripion\">\n                            <div>Province : {paroisse.province}</div>\n                            <div>Diocèse : {paroisse.diocese}</div>\n                          </div>\n                        </div>\n                      </NavLink>\n                    </>\n                  ))}\n                </>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Paroisses;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Login.jsx",["729"],[],"import React, { useEffect } from \"react\";\nimport LogContainer from \"../components/Login/LogContainer\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty } from \"../components/utils\";\n\nconst Login = () => {\n  const user = useSelector((state) => state.user.user);\n\n  useEffect(() => {\n    if (!isEmpty(user)) {\n      window.location = \"/\";\n    }\n    {\n      localStorage.clear();\n    }\n  }, [user]);\n\n  return (\n    <div>\n      <LogContainer />\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/ModDashboard.jsx",["730","731","732","733","734"],[],"import React, { createContext, useEffect } from \"react\";\nimport LeftBar from \"../components/ModDashboard/LeftBar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport ParoisseBoard from \"../components/ModDashboard/ParoisseBoard\";\nimport Actus from \"../components/ModDashboard/Actus\";\nimport DemandesBoard from \"../components/ModDashboard/DemandesBoard\";\nimport { isEmpty } from \"../components/utils/index\";\n\nexport const ModContext = createContext();\n\nconst ModDashboard = () => {\n  const [menuId, setMenuId] = useState(1);\n  const userDatas = useSelector((state) => state.user.user);\n\n  const toogleMenu = (e) => {\n    setMenuId(e);\n  };\n\n  return (\n    <ModContext.Provider value={{ menuId, toogleMenu }}>\n      {!isEmpty(userDatas) ? (\n        <div className=\"mod-dashboard-container\">\n          <div className=\"mod-dashboard-left\">\n            <LeftBar userName={`${userDatas?.name} ${userDatas?.lastName}`} />\n          </div>\n          <div className=\"mod-dashboard-center\">\n            {menuId == 1 && <Actus />}\n            {menuId == 2 && <ParoisseBoard />}\n            {menuId == 3 && <DemandesBoard />}\n          </div>\n        </div>\n      ) : null}\n    </ModContext.Provider>\n  );\n};\n\nexport default ModDashboard;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/actions/actus.js",["735","736"],[],"import * as api from \"../api\";\n\nimport {\n  GET_ALL_ACTUS,\n  GET_ACTU,\n  GET_ACTU_BY_ID,\n  CREATE_ACTU,\n  UPDATE_ACTU,\n  DELETE_ACTU,\n} from \"../constants/reducers\";\n\nexport const getAllActus = () => async (dispatch) => {\n  try {\n    const { data } = await api.getAllActus();\n    dispatch({ type: GET_ALL_ACTUS, payload: data });\n  } catch (error) {}\n};\n\nexport const getActu = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.getActu(id);\n    dispatch({ type: GET_ACTU, payload: data });\n  } catch (error) {}\n};\n\nexport const getActuByID = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.getActusById(id);\n    dispatch({ type: GET_ALL_ACTUS, payload: data });\n  } catch (error) {}\n};\n\nexport const createActu = (data) => async (dispatch) => {\n  try {\n    await api.createActu(data);\n  } catch (error) {}\n};\n\nexport const updateActu = (id, actuData) => async (dispatch) => {\n  try {\n    const { data } = await api.updateActu(id, actuData);\n    dispatch({ type: UPDATE_ACTU, payload: { id, data } });\n  } catch (error) {}\n};\n\nexport const deleteActu = (id) => async (dispatch) => {\n  try {\n    await api.removeActu(id);\n    dispatch({ type: DELETE_ACTU, payload: { id } });\n  } catch (error) {}\n};\n","/Users/jocode/Documents/GitHub/anouanze/client/src/actions/paroisse.js",["737","738"],[],"import * as api from \"../api\";\nimport {\n  GET_ALL_PAROISSE,\n  GET_PAROISSE,\n  GET_NEAR_PAROISSES,\n  UPDATE_PAROISSE,\n  DELETE_PAROISSE,\n  CHOOSE_PAROISSE,\n  UNCHOOSE_PAROISSE,\n  REMOVE_PRIEST,\n  REMOVE_MESSE,\n} from \"../constants/reducers\";\n\nexport const createParoisse = (data) => async (dispatch) => {\n  try {\n    await api.createParoisse(data);\n  } catch (error) {}\n};\n\nexport const getAllParoisse = (num) => async (dispatch) => {\n  try {\n    const { data } = await api.getParoisses();\n    const newArray = data.slice(0, num);\n    dispatch({ type: GET_ALL_PAROISSE, payload: newArray });\n  } catch (error) {}\n};\n\nexport const getParoisse = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.getParoisse(id);\n    dispatch({ type: GET_PAROISSE, payload: data });\n  } catch (error) {}\n};\n\n// Paroisses à proximité\nexport const getNearParoisses = (coords) => async (dispatch) => {\n  try {\n    const { data } = await api.getNearParoisses(coords);\n    dispatch({ type: GET_NEAR_PAROISSES, payload: data });\n  } catch (error) {}\n};\n\nexport const updateParoisse = (id, paroisseData) => async (dispatch) => {\n  try {\n    const { data } = await api.updateParoisse(id, paroisseData);\n    dispatch({ type: UPDATE_PAROISSE, payload: { id, data } });\n  } catch (error) {}\n};\n\nexport const deleteParoisse = (id) => async (dispatch) => {\n  try {\n    await api.deleteParoisse(id);\n    dispatch({ type: DELETE_PAROISSE, payload: { id } });\n  } catch (error) {}\n};\n\nexport const chooseParoisse = (paroisseId, userId) => async (dispatch) => {\n  try {\n    const { data } = await api.chooseParoisse(paroisseId, userId);\n    dispatch({ type: CHOOSE_PAROISSE, payload: { paroisseId, userId } });\n  } catch (error) {}\n};\n\nexport const unchooseParoisse = (paroisseId, userId) => async (dispatch) => {\n  try {\n    const { data } = await api.unchooseParoisse(paroisseId, userId);\n    dispatch({ type: UNCHOOSE_PAROISSE, payload: { paroisseId, userId } });\n  } catch (error) {}\n};\n\nexport const addPriest = (id, data) => async (dispatch) => {\n  try {\n    await api.addPriest(id, data);\n  } catch (error) {}\n};\n\nexport const removePriest = (id, priestId) => async (dispatch) => {\n  try {\n    await api.removePriest(id, priestId);\n    dispatch({ type: REMOVE_PRIEST, payload: { id, priestId } });\n  } catch (error) {}\n};\n\n// Add Messes\nexport const addMesses = (id, data) => async (dispatch) => {\n  try {\n    await api.addMesses(id, data);\n  } catch (error) {}\n};\n\n// Remove messes\nexport const removeMesse = (id, messeId) => async (dispatch) => {\n  try {\n    await api.removeMesse(id, messeId);\n    dispatch({ type: REMOVE_MESSE, payload: { id, messeId } });\n  } catch (error) {}\n};\n\n// Add Confessions\nexport const adConfession = (id, data) => async (dispatch) => {\n  try {\n    await api.addConfessions(id, data);\n  } catch (error) {}\n};\n\n// Remove Confessions\nexport const removeConfession = (id, confessionId) => async (dispatch) => {\n  try {\n    await api.removeConfessions(id, confessionId);\n    dispatch({ type: REMOVE_MESSE, payload: { id, confessionId } });\n  } catch (error) {}\n};\n","/Users/jocode/Documents/GitHub/anouanze/client/src/components/utils/index.js",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/NavBar/NavBar.jsx",["739"],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/Map/Map.jsx",[],["740"],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/Footer/Footer.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/Carousel/Carousel.jsx",["741"],[],"import React, { useEffect } from \"react\";\n\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Navigation, Autoplay, Keyboard, Pagination } from \"swiper\";\nimport { NavLink } from \"react-router-dom\";\n\n// Import Swiper styles\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/scrollbar\";\n\n//Actions\nimport { getPremiumEvents } from \"../../actions/event\";\n\n// Import Redux Modules\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// Import tools\nimport { isEmpty } from \"../utils\";\n\nconst Carousel = () => {\n  const events = useSelector((state) => state.premiumEvents);\n\n  useEffect(() => {\n    dispatch(getPremiumEvents());\n  }, []);\n\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const requireAuth = () => {\n    return isEmpty(user) ? \"/login\" : \"/events\";\n  };\n\n  return (\n    <>\n      <div className=\"carousel-container\">\n        <div className=\"header-carousel\">\n          <NavLink to={requireAuth()}>\n            <h1>Évènements</h1>\n          </NavLink>\n\n          <NavLink to={requireAuth()} className=\"header-see-more\">\n            <h3>Voir +&nbsp;</h3>\n            <img\n              src={process.env.PUBLIC_URL + \"/imgs/icons/arrow-right.png\"}\n              alt=\"arrow-right\"\n            />\n          </NavLink>\n        </div>\n        <div className=\"swiper-container\">\n          <Swiper\n            spaceBetween={30}\n            centeredSlides={true}\n            autoplay={{\n              delay: 2000,\n              disableOnInteraction: false,\n            }}\n            pagination={{\n              clickable: true,\n            }}\n            keyboard={true}\n            modules={[Autoplay, Pagination, Navigation, Keyboard]}\n          >\n            {events.length >= 1 ? (\n              events.map((event) => (\n                <SwiperSlide key={event._id}>\n                  <NavLink to={requireAuth()}>\n                    <img src={event.poster} alt=\"\" width=\"1310vh\" />\n                  </NavLink>\n                </SwiperSlide>\n              ))\n            ) : (\n              <>\n                <SwiperSlide>\n                  <img src=\"./uploads/events/default-event.jpg\" alt=\"\" />\n                </SwiperSlide>\n                <SwiperSlide>\n                  <img src=\"./uploads/events/default-event.jpg\" alt=\"\" />\n                </SwiperSlide>\n              </>\n            )}\n          </Swiper>\n        </div>\n      </div>\n      <div className=\"purple-band\"></div>\n    </>\n  );\n};\n\nexport default Carousel;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/components/AdminDashboard/DashBoard.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/AdminDashboard/LeftBar.jsx",["742","743"],[],"import React, { useState, useContext } from \"react\";\nimport { AdminContext } from \"../../pages/AdminDashboard\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\n\nconst LeftBar = ({ userName }) => {\n  const [isActive, setIsActive] = useState(\"\");\n  const { toogleMenu } = useContext(AdminContext);\n  const dispatch = useDispatch();\n\n  const toggleActive = (e) => {\n    const elements = document.querySelectorAll(\".left-bar-menu-element\");\n\n    toogleMenu(e.dataset.key);\n    elements.forEach((e) => {\n      e.classList.remove(\"active\");\n    });\n    e.classList.add(\"active\");\n  };\n\n  const handleLogout = async () => {\n    dispatch(logout());\n    localStorage.clear();\n    window.location = \"/\";\n  };\n\n  const handleHome = () => {\n    window.location = \"/\";\n  };\n  return (\n    <div className=\"left-bar-container\">\n      <div className=\"left-bar-header\">\n        <img\n          src={process.env.PUBLIC_URL + \"/imgs/icons/church.png\"}\n          alt={\"logo\"}\n          onClick={() => handleHome()}\n        />\n        <div>\n          <h4>{userName}</h4>\n          <h6>Administrateur</h6>\n        </div>\n      </div>\n\n      <div className=\"left-bar-menu-container\">\n        <div\n          className=\"left-bar-menu-element active\"\n          onClick={(e) => toggleActive(e.target)}\n          data-key=\"1\"\n        >\n          Accueil\n        </div>\n        <div\n          className=\"left-bar-menu-element\"\n          onClick={(e) => toggleActive(e.target)}\n          data-key=\"2\"\n        >\n          Paroisses\n        </div>\n        <div\n          className=\"left-bar-menu-element\"\n          onClick={(e) => toggleActive(e.target)}\n          data-key=\"3\"\n        >\n          Évènements\n        </div>\n      </div>\n\n      <div className=\"left-bar-footer\" onClick={() => handleLogout()}>\n        <img\n          src={process.env.PUBLIC_URL + \"/imgs/icons/logout.png\"}\n          alt={\"logo\"}\n        />\n\n        <p>Se Déconnecter</p>\n      </div>\n    </div>\n  );\n};\n\nexport default LeftBar;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/components/AdminDashboard/EventsBoard.jsx",["744","745","746","747","748"],[],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty } from \"../utils/index\";\nimport { NavLink } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport {\n  createEvent,\n  updateEvent,\n  deleteEvent,\n  getPremiumEvents,\n  getAllEvents,\n  getOthersEvents,\n} from \"../../actions/event\";\n\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/fr\";\n\nconst EventsBoard = () => {\n  const dispatch = useDispatch();\n  const allEvents = useSelector((state) => state.events);\n  let events = useSelector((state) => state.premiumEvents);\n  !isEmpty(events) &&\n    events.sort((a, b) => {\n      return b.createdAt.localeCompare(a.createdAt);\n    });\n\n  let otherEvents = useSelector((state) => state.othersEvent);\n  !isEmpty(otherEvents) &&\n    otherEvents.sort((a, b) => {\n      return b.createdAt.localeCompare(a.createdAt);\n    });\n  const user = useSelector((state) => state.user.user);\n\n  // Afficher / Cacher le formulaire\n  const [toggleForm, setToggleForm] = useState(false);\n\n  // Fichiers données\n  const [files, setFiles] = useState([]);\n  const [fileSet, setFileSet] = useState([]);\n\n  const [isOk, setIsOk] = useState(false);\n  const [count, setCount] = useState([1]);\n  const [countHours, setCountHours] = useState([1, 2]);\n\n  const [isSetForm, setIsSetForm] = useState(false);\n\n  // Mode édition\n  const [isEdit, setIsEdit] = useState(false);\n  const [eventEdit, setEventEdit] = useState(false);\n\n  const editEvent = (idx) => {\n    setIsEdit(true);\n    setCount([1]);\n    const eventFound = allEvents.filter((e) => e._id === idx)[0];\n    setEventEdit(eventFound);\n\n    const begin = dayjs(allEvents.startAt).format(\"HH:mm\");\n    const end = dayjs(allEvents.endAt).format(\"HH:mm\");\n\n    let dateFound = [];\n    eventFound?.dateEvent.forEach((el) => {\n      dateFound.push(dayjs(el).format(\"YYYY-MM-DD\"));\n    });\n\n    dateFound.length === 2 && setCount([1, 2]);\n\n\n    setToggleForm(true);\n\n    setFormData({\n      poster: eventFound.poster,\n      title: eventFound.title,\n      description: eventFound.description,\n      address: eventFound.address,\n      begin: begin,\n      end: end,\n      startAt: eventFound.startAt,\n      endAt: eventFound.endAt,\n      dateEvent: eventFound.dateEvent,\n      dateBegin: dateFound[0],\n      dateEnd: dateFound.length > 1 && dateFound[1],\n      organizer: eventFound.organizer,\n      isPremium: eventFound.isPremium,\n      posterId: eventFound.posterId,\n    });\n\n    files.length = 0;\n    files.push(eventFound.poster);\n  };\n\n  const deleteEvents = async (idx) => {\n    const eventFound = allEvents.filter((e) => e._id === idx)[0];\n    const id = eventFound._id;\n\n    var answer = window.confirm(\"Are you sure you want to delete this item?\");\n    if (answer) {\n      await dispatch(deleteEvent(id))\n        .then(() => {\n          dispatch(getAllEvents());\n          dispatch(getPremiumEvents());\n          dispatch(getOthersEvents());\n        })\n        .catch(() => {});\n    }\n  };\n\n  const [formData, setFormData] = useState({\n    poster: \"\",\n    title: \"\",\n    description: \"\",\n    address: \"\",\n    begin: \"00:00\",\n    end: \"00:00\",\n    startAt: null,\n    endAt: null,\n    dateEvent: [],\n    dateBegin: \"2022-01-01\",\n    dateEnd: \"2022-01-01\",\n    organizer: \"\",\n    isPremium: false,\n    posterId: user._id,\n  });\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    setIsOk(true);\n\n    const data = new FormData();\n    data.append(\"poster\", formData.poster);\n    data.append(\"title\", formData.title);\n    data.append(\"description\", formData.description);\n    data.append(\"address\", formData.address);\n    data.append(\"startAt\", formData.startAt);\n    data.append(\"endAt\", formData.endAt);\n    data.append(\"dateEvent\", formData.dateEvent);\n    data.append(\"organizer\", formData.organizer);\n    data.append(\"isPremium\", formData.isPremium);\n    data.append(\"posterId\", formData.posterId);\n\n    isEdit\n      ? await dispatch(updateEvent(eventEdit._id, data))\n          .then(() => {\n            setIsOk(false);\n            dispatch(getPremiumEvents());\n            dispatch(getOthersEvents());\n            dispatch(getAllEvents());\n\n            cancelForm();\n            setToggleForm(!toggleForm);\n            return true;\n          })\n          .catch((error) => {\n          })\n      : await dispatch(createEvent(data))\n          .then(() => {\n            setIsOk(false);\n            dispatch(getPremiumEvents());\n            dispatch(getOthersEvents());\n            dispatch(getAllEvents());\n\n            cancelForm();\n            setToggleForm(!toggleForm);\n            return true;\n          })\n          .catch((error) => {\n        \n          });\n\n    setIsOk(false);\n  };\n\n  const cancelForm = () => {\n    setFormData({\n      poster: \"\",\n      title: \"\",\n      description: \"\",\n      address: \"\",\n      startAt: 1663570800,\n      endAt: 1663570800,\n      dateEvent: [],\n      organizer: \"\",\n      posterId: \"\",\n    });\n  };\n\n  const renderHoursComponent = () => {\n    let ele = document.querySelectorAll(\".hourpicker-container\");\n\n    const valueByEl = (e) => {\n      switch (e) {\n        case 1:\n          return formData?.begin;\n\n        case 2:\n          return formData?.end;\n      }\n    };\n\n    const selectHour = (e, el) => {\n      const [hours, minutes] = ele[0]?.childNodes[0]?.value.split(\":\");\n      const hour1 = new Date(\"2022\", \"10\", \"10\", hours, minutes);\n\n      const [hours2, minutes2] = ele[1]?.childNodes[0]?.value.split(\":\");\n      const hour2 = new Date(\"2022\", \"10\", \"10\", hours2, minutes2);\n\n      switch (e) {\n        case 1:\n          setFormData({\n            ...formData,\n            startAt: hour1,\n            begin: el,\n            endAt: hour2,\n          });\n          break;\n\n        case 2:\n          setFormData({\n            ...formData,\n            startAt: hour1,\n            end: el,\n            endAt: hour2,\n          });\n          break;\n      }\n    };\n\n    return countHours.map((el) => (\n      <div className=\"hourpicker-container\">\n        <input\n          type=\"time\"\n          className=\"datepicker-input\"\n          value={valueByEl(el)}\n          onChange={(e) => {\n            selectHour(el, e.target.value);\n          }}\n        />\n      </div>\n    ));\n  };\n\n  useEffect(() => {\n    setIsSetForm(true);\n\n    if (isSetForm) {\n      setFormData({\n        ...formData,\n      });\n      setIsSetForm(false);\n    }\n  }, [formData]);\n\n  useEffect(() => {\n    dispatch(getPremiumEvents());\n    dispatch(getOthersEvents());\n    dispatch(getAllEvents());\n  }, [dispatch]);\n\n  const renderDatesComponent = () => {\n    const datesElement = document.querySelectorAll(\".datepicker-container\");\n    const selectDate = (idx, date) => {\n      const date1 = new Date(datesElement[0]?.childNodes[0]?.value);\n      const date2 = new Date(datesElement[1]?.childNodes[0]?.value);\n\n      const arr = [];\n      switch (count.length) {\n        case 1:\n          arr.push(date1);\n          setFormData({\n            ...formData,\n            dateBegin: datesElement[0]?.childNodes[0]?.value,\n            dateEvent: arr,\n          });\n          break;\n        case 2:\n          arr.push(date1);\n          arr.push(date2);\n\n          setFormData({\n            ...formData,\n            dateBegin: datesElement[0]?.childNodes[0]?.value,\n            dateEnd: datesElement[1]?.childNodes[0]?.value,\n            dateEvent: arr,\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    const dateValueByCount = (idx) => {\n      return idx === 1 ? formData.dateBegin : formData.dateEnd;\n    };\n\n    return count.map((el) => (\n      <div className=\"datepicker-container\">\n        <input\n          type=\"date\"\n          className=\"datepicker-input\"\n          value={dateValueByCount(el)}\n          onChange={(e) => selectDate(el, e.target.value)}\n        />\n      </div>\n    ));\n  };\n\n  const plusButton = () => {\n    const a = [1, 2];\n    const element = (\n      <div\n        className=\"plus-button\"\n        onClick={() => {\n          setFormData({\n            ...formData,\n          });\n          setCount(a);\n        }}\n      >\n        <img src={process.env.PUBLIC_URL + \"/imgs/icons/plus.png\"} alt=\"Plus\" />\n      </div>\n    );\n    switch (count.length) {\n      case 1:\n        return element;\n        break;\n      default:\n        break;\n    }\n  };\n\n  const fileSelectedHandler = (e) => {\n    const filesParsed = URL.createObjectURL(e.target.files[0]);\n    const filesSelected = e.target.files[0];\n\n    setFiles([...files, filesParsed]);\n    setFileSet([...fileSet, filesSelected]);\n    setFormData({ ...formData, poster: filesSelected });\n  };\n\n  const removeBlock = (idx) => {\n    let arr = [...fileSet];\n    let newArr = [...files];\n    arr.splice(idx, 1);\n    newArr.splice(idx, 1);\n\n    setFileSet(arr);\n    setFiles(newArr);\n    setFormData({ ...formData, poster: arr });\n  };\n\n  const renderFiles = () => {\n    return files.map((e, idx) => {\n      return (\n        <div className=\"picture-block\" key={idx}>\n          <img src={e} alt={idx} />\n          <div className=\"close-btn\" onClick={() => removeBlock(idx)}>\n            Supprimer\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <>\n      {toggleForm && (\n        // Form elements\n        <div className=\"form-container\">\n          <div className=\"form-group-container\">\n            <div className=\"container-header\">\n              <h1>Fiche Évènement</h1>\n\n              <div\n                className=\"form-closer\"\n                onClick={() => setToggleForm(!toggleForm)}\n              >\n                Fermer\n              </div>\n            </div>\n\n            <div className=\"form-elements-container\">\n              <form onSubmit={(e) => submitForm(e)}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"title\">Titre</label>\n                  <input\n                    htmlFor=\"title\"\n                    placeholder=\"Titre\"\n                    value={formData.title}\n                    onChange={(e) =>\n                      setFormData({ ...formData, title: e.target.value })\n                    }\n                  />\n                </div>\n                <div className=\"form-group-group\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"address\">Lieu</label>\n                    <input\n                      htmlFor=\"address\"\n                      placeholder=\"Lieu\"\n                      value={formData.address}\n                      onChange={(e) =>\n                        setFormData({ ...formData, address: e.target.value })\n                      }\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"description\">Description</label>\n                  <textarea\n                    htmlFor=\"description\"\n                    placeholder=\"Description\"\n                    value={formData.description}\n                    onChange={(e) =>\n                      setFormData({ ...formData, description: e.target.value })\n                    }\n                  />\n                </div>\n\n                {/** Date & Hour */}\n                <div className=\"dates-group\">\n                  <h2>Date</h2>\n                  {renderDatesComponent()}\n                  {plusButton()}\n                  <h2>Heure</h2>\n                  {renderHoursComponent()}\n                </div>\n\n                {/** Organisateur */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"organizer\">Organisateur</label>\n                  <input\n                    htmlFor=\"organizer\"\n                    placeholder=\"Organisateur\"\n                    value={formData.organizer}\n                    onChange={(e) =>\n                      setFormData({ ...formData, organizer: e.target.value })\n                    }\n                  />\n                </div>\n\n                {/** Picture */}\n                <div className=\"pictures\">\n                  <div className=\"pictures-title\">\n                    <h3>Image</h3>\n                  </div>\n                  <div className=\"pictures-content\">\n                    <div className=\"pictures-blocks-container\">\n                      {!isEmpty(files) && <>{renderFiles()}</>}\n\n                      {files.length < 1 && (\n                        <div className=\"file-upload\">\n                          <input\n                            type=\"file\"\n                            name=\"file\"\n                            onChange={(e) => fileSelectedHandler(e)}\n                            accept=\".jpg, .jpeg, .png\"\n                          />\n                          <i className=\"fa fa-arrow-up\"></i>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"btn-group\">\n                  <input type=\"submit\" value=\"Save\" />\n                  {isOk === true && <i className=\"fa fa-spinner fa-spin\"></i>}\n\n                  <input\n                    type=\"reset\"\n                    value=\"Annuler\"\n                    onClick={() => cancelForm()}\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className=\"events-board-container\">\n        <div className=\"header\">\n          <h1>Évènements</h1>\n        </div>\n\n        <div className=\"events-container\">\n          <h1>Évènements PREMIUM</h1>\n          <div className=\"premium-events\">\n            <div\n              className=\"event-add-element\"\n              onClick={() => {\n                setToggleForm(!toggleForm);\n                setFormData({ ...formData, isPremium: true });\n              }}\n            >\n              <img\n                src={process.env.PUBLIC_URL + \"/imgs/icons/add.png\"}\n                alt={\"add\"}\n              />\n            </div>\n            {!isEmpty(events) &&\n              events.map((element, i) => (\n                <div className=\"event-element\" key={i}>\n                  <div className=\"event-infos\">\n                    <div className=\"event-infos-image\">\n                      {element?.poster ? (\n                        <img\n                          src={process.env.PUBLIC_URL + element.poster}\n                          alt={element.name}\n                        />\n                      ) : (\n                        <img\n                          src={process.env.PUBLIC_URL + \"/imgs/icon.png\"}\n                          alt={element.name}\n                        />\n                      )}{\" \"}\n                    </div>\n                    <div className=\"event-infos-name\">\n                      <h4>{element.title}</h4>\n                      <h6>{element.organizer}</h6>\n                      <h6>{element.address}</h6>\n                    </div>\n                  </div>\n                  <div className=\"event-element-footer\">\n                    <NavLink\n                      to={`/event/${element._id}`}\n                      className=\"footer-view\"\n                      target=\"_blank\"\n                    >\n                      <img\n                        src={process.env.PUBLIC_URL + \"/imgs/icons/eye.png\"}\n                        alt={\"eye\"}\n                      />\n                    </NavLink>{\" \"}\n                    <div\n                      className=\"footer-edit\"\n                      onClick={() => editEvent(element._id)}\n                    >\n                      <img\n                        src={process.env.PUBLIC_URL + \"/imgs/icons/edit.png\"}\n                        alt={\"edit\"}\n                      />\n                    </div>\n                    <div\n                      className=\"footer-delete\"\n                      onClick={() => deleteEvents(element._id)}\n                    >\n                      <img\n                        src={process.env.PUBLIC_URL + \"/imgs/icons/trash.png\"}\n                        alt={\"delete\"}\n                      />\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n          <h1>Évènements SÉCONDAIRES</h1>\n\n          <div className=\"others-events\">\n            <div\n              className=\"event-add-element\"\n              onClick={() => {\n                setToggleForm(!toggleForm);\n                setFormData({ ...formData, isPremium: false });\n              }}\n            >\n              <img\n                src={process.env.PUBLIC_URL + \"/imgs/icons/add.png\"}\n                alt={\"add\"}\n              />\n            </div>\n            {!isEmpty(otherEvents) &&\n              otherEvents.map((element, i) => (\n                <div className=\"event-element\" key={i}>\n                  <div className=\"event-infos\">\n                    <div className=\"event-infos-image\">\n                      {element?.poster ? (\n                        <img\n                          src={process.env.PUBLIC_URL + element.poster}\n                          alt={element.name}\n                        />\n                      ) : (\n                        <img\n                          src={process.env.PUBLIC_URL + \"/imgs/icon.png\"}\n                          alt={element.name}\n                        />\n                      )}{\" \"}\n                    </div>\n                    <div className=\"event-infos-name\">\n                      <h4>{element.title}</h4>\n                      <h6>{element.organizer}</h6>\n                      <h6>{element.address}</h6>\n                    </div>\n                  </div>\n                  <div className=\"event-element-footer\">\n                    <NavLink\n                      to={`/event/${element._id}`}\n                      className=\"footer-view\"\n                      target=\"_blank\"\n                    >\n                      <img\n                        src={process.env.PUBLIC_URL + \"/imgs/icons/eye.png\"}\n                        alt={\"edit\"}\n                      />\n                    </NavLink>{\" \"}\n                    <div\n                      className=\"footer-edit\"\n                      onClick={() => editEvent(element._id)}\n                    >\n                      <img\n                        src={process.env.PUBLIC_URL + \"/imgs/icons/edit.png\"}\n                        alt={\"edit\"}\n                      />\n                    </div>\n                    <div\n                      className=\"footer-delete\"\n                      onClick={() => deleteEvents(element._id)}\n                    >\n                      <img\n                        src={process.env.PUBLIC_URL + \"/imgs/icons/trash.png\"}\n                        alt={\"delete\"}\n                      />\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EventsBoard;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/components/AdminDashboard/ParoissesBoard.jsx",["749","750","751","752","753"],[],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllParoisse } from \"../../actions/paroisse\";\nimport { isEmpty } from \"../utils/index\";\nimport { NavLink } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"../Map/Marker\";\n\nimport {\n  createParoisse,\n  updateParoisse,\n  deleteParoisse,\n} from \"../../actions/paroisse\";\n\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\n\nconst animatedComponents = makeAnimated();\n\nconst ParoissesBoard = () => {\n  // Afficher / Cacher le formulaire\n  const [toggleForm, setToggleForm] = useState(false);\n\n  // Coordonees pour la carte\n  const [userCoords, setUserCoords] = useState({});\n  const [coordinates, setCoordinates] = useState({});\n\n  // Jours - Heures / Messes & Confessions\n  const [days, setDays] = useState([\n    {\n      id: 1,\n      dayName: \"Lundi\",\n      dayHour: [],\n    },\n    {\n      id: 2,\n      dayName: \"Mardi\",\n      dayHour: [],\n    },\n    {\n      id: 3,\n      dayName: \"Mercredi\",\n      dayHour: [],\n    },\n    {\n      id: 4,\n      dayName: \"Jeudi\",\n      dayHour: [],\n    },\n    {\n      id: 5,\n      dayName: \"Vendredi\",\n      dayHour: [],\n    },\n    {\n      id: 6,\n      dayName: \"Samedi\",\n      dayHour: [],\n    },\n    {\n      id: 7,\n      dayName: \"Dimanche\",\n      dayHour: [],\n    },\n  ]);\n  const [daysConf, setDaysConf] = useState([\n    {\n      id: 1,\n      dayName: \"Lundi\",\n      dayHour: [],\n    },\n    {\n      id: 2,\n      dayName: \"Mardi\",\n      dayHour: [],\n    },\n    {\n      id: 3,\n      dayName: \"Mercredi\",\n      dayHour: [],\n    },\n    {\n      id: 4,\n      dayName: \"Jeudi\",\n      dayHour: [],\n    },\n    {\n      id: 5,\n      dayName: \"Vendredi\",\n      dayHour: [],\n    },\n    {\n      id: 6,\n      dayName: \"Samedi\",\n      dayHour: [],\n    },\n    {\n      id: 7,\n      dayName: \"Dimanche\",\n      dayHour: [],\n    },\n  ]);\n\n  // Données formulaire\n  const [formData, setFormData] = useState({\n    name: \"\",\n    province: \"\",\n    diocese: \"\",\n    address: \"\",\n    contact: \"\",\n    email: \"\",\n    history: \"\",\n    pictures: [],\n    location: {\n      type: \"Point\",\n      coordinates: [null, null],\n    },\n    messes: [],\n    confessions: [],\n  });\n\n  // Fichiers données\n  const [files, setFiles] = useState([]);\n  const [fileSet, setFileSet] = useState([]);\n\n  // Avant / Après validation\n  const [isOk, setIsOk] = useState(false);\n\n  // Données paroisse - édition\n  const [paroisseEdit, setParoisseEdit] = useState({});\n\n  // Mode édition\n  const [isEdit, setIsEdit] = useState(false);\n  const [arrFinal, setArrFinal] = useState([]);\n  const [arrConfFinal, setArrConfFinal] = useState([]);\n\n  // Values for Select\n  const [vals, setVals] = useState([]);\n\n  const fileSelectedHandler = (e) => {\n    const filesParsed = URL.createObjectURL(e.target.files[0]);\n    const filesSelected = e.target.files[0];\n\n    setFiles([...files, filesParsed]);\n    setFileSet([...fileSet, filesSelected]);\n    setFormData({ ...formData, pictures: [...fileSet, filesSelected] });\n  };\n\n  const removeBlock = (idx) => {\n    let arr = [...fileSet];\n    let newArr = [...files];\n    arr.splice(idx, 1);\n    newArr.splice(idx, 1);\n\n    setFileSet(arr);\n    setFiles(newArr);\n    setFormData({ ...formData, pictures: arr });\n  };\n\n  const renderFiles = () => {\n    return files.map((e, idx) => {\n      return (\n        <div className=\"picture-block\" key={idx}>\n          <img src={e} alt={idx} />\n          <div className=\"close-btn\" onClick={() => removeBlock(idx)}>\n            Close\n          </div>\n        </div>\n      );\n    });\n  };\n\n  const dispatch = useDispatch();\n  const paroisses = useSelector((state) => state.paroisses);\n\n  const defaultProps = {\n    center: {\n      lat: 5.30338066581707,\n      lng: -3.9515431999999993,\n    },\n    zoom: 15,\n  };\n\n  const apiKey = \"AIzaSyBwwRjHA3A4j64wjjtRgKfhviBkvz9psYE\";\n\n  const dayOptions = [\n    { id: 1, value: \"05:00\", label: \"05:00\" },\n    { id: 2, value: \"05:30\", label: \"05:30\" },\n    { id: 3, value: \"06:00\", label: \"06:00\" },\n    { id: 4, value: \"06:30\", label: \"06:30\" },\n    { id: 5, value: \"07:00\", label: \"07:00\" },\n    { id: 6, value: \"07:30\", label: \"07:30\" },\n    { id: 7, value: \"08:00\", label: \"08:00\" },\n    { id: 8, value: \"08:30\", label: \"08:30\" },\n    { id: 9, value: \"09:00\", label: \"09:00\" },\n    { id: 10, value: \"09:30\", label: \"09:30\" },\n    { id: 11, value: \"10:00\", label: \"10:00\" },\n    { id: 12, value: \"10:30\", label: \"10:30\" },\n    { id: 13, value: \"11:00\", label: \"11:00\" },\n    { id: 14, value: \"11:30\", label: \"11:30\" },\n    { id: 15, value: \"12:00\", label: \"12:00\" },\n    { id: 16, value: \"12:30\", label: \"12:30\" },\n    { id: 17, value: \"13:00\", label: \"13:00\" },\n    { id: 18, value: \"13:30\", label: \"13:30\" },\n    { id: 19, value: \"14:00\", label: \"14:00\" },\n    { id: 20, value: \"14:30\", label: \"14:30\" },\n    { id: 21, value: \"15:00\", label: \"15:00\" },\n    { id: 22, value: \"15:30\", label: \"15:30\" },\n    { id: 23, value: \"16:00\", label: \"16:00\" },\n    { id: 24, value: \"16:30\", label: \"16:30\" },\n    { id: 25, value: \"17:00\", label: \"17:00\" },\n    { id: 26, value: \"17:30\", label: \"17:30\" },\n    { id: 27, value: \"18:00\", label: \"18:00\" },\n    { id: 28, value: \"18:30\", label: \"18:30\" },\n    { id: 29, value: \"19:00\", label: \"19:00\" },\n    { id: 30, value: \"19:30\", label: \"19:30\" },\n    { id: 31, value: \"20:00\", label: \"20:00\" },\n    { id: 32, value: \"20:30\", label: \"20:30\" },\n    { id: 33, value: \"21:00\", label: \"21:00\" },\n    { id: 34, value: \"21:30\", label: \"21:30\" },\n    { id: 35, value: \"22:00\", label: \"22:00\" },\n    { id: 36, value: \"22:30\", label: \"22:30\" },\n    { id: 37, value: \"23:00\", label: \"23:00\" },\n    { id: 38, value: \"23:30\", label: \"23:30\" },\n  ];\n\n  useEffect(() => {\n    dispatch(getAllParoisse());\n  }, [dispatch]);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      ({ coords: { latitude, longitude } }) => {\n        setUserCoords({ lat: latitude, lng: longitude });\n        setCoordinates({ lat: latitude, lng: longitude });\n      }\n    );\n  }, []);\n\n  const setPosition = (e) => {\n    setCoordinates({\n      lat: e.center.lat,\n      lng: e.center.lng,\n    });\n    setUserCoords({\n      lat: e.center.lat,\n      lng: e.center.lng,\n    });\n  };\n\n  const mapStyles = [];\n\n  function handleSelectMesses(data, idx) {\n    let transit = [];\n    data.map((e) => {\n      transit.push(e.value);\n    });\n\n    if (idx === 1) {\n      days[0].dayHour = transit;\n    }\n\n    if (idx === 2) {\n      days[1].dayHour = transit;\n    }\n    if (idx === 3) {\n      days[2].dayHour = transit;\n    }\n    if (idx === 4) {\n      days[3].dayHour = transit;\n    }\n    if (idx === 5) {\n      days[4].dayHour = transit;\n    }\n    if (idx === 6) {\n      days[5].dayHour = transit;\n    }\n    if (idx === 7) {\n      days[6].dayHour = transit;\n    }\n    setFormData({\n      ...formData,\n      messes: days,\n    });\n  }\n\n  function handleSelectConfessions(data, idx) {\n    let transit = [];\n    data.map((e) => {\n      transit.push(e.value);\n    });\n\n    if (idx === 1) {\n      daysConf[0].dayHour = transit;\n    }\n\n    if (idx === 2) {\n      daysConf[1].dayHour = transit;\n    }\n    if (idx === 3) {\n      daysConf[2].dayHour = transit;\n    }\n    if (idx === 4) {\n      daysConf[3].dayHour = transit;\n    }\n    if (idx === 5) {\n      daysConf[4].dayHour = transit;\n    }\n    if (idx === 6) {\n      daysConf[5].dayHour = transit;\n    }\n    if (idx === 7) {\n      daysConf[6].dayHour = transit;\n    }\n    setFormData({\n      ...formData,\n      confessions: daysConf,\n    });\n  }\n\n  const submitForm = async (e) => {\n    setIsOk(true);\n    setFormData({\n      ...formData,\n      messes: days,\n      confessions: daysConf,\n    });\n    e.preventDefault();\n\n    if (formData.name) {\n      const data = new FormData();\n      data.append(\"name\", formData.name);\n      data.append(\"province\", formData.province);\n      data.append(\"diocese\", formData.diocese);\n      data.append(\"location[type]\", formData.location.type);\n      data.append(\"location[coordinates]\", formData.location.coordinates);\n\n      formData.pictures.forEach((file) => {\n        data.append(\"pictures[]\", file);\n      });\n      data.append(\"address\", formData.address);\n      data.append(\"contact\", formData.contact);\n      data.append(\"email\", formData.email);\n      data.append(\"history\", formData.history);\n      data.append(\"messes\", JSON.stringify(formData.messes));\n      data.append(\"confessions\", JSON.stringify(formData.confessions));\n\n      isEdit\n        ? await dispatch(updateParoisse(paroisseEdit._id, data))\n            .then(() => {\n              setIsOk(false);\n              dispatch(getAllParoisse());\n\n              cancelForm();\n              setToggleForm(!toggleForm);\n              return true;\n            })\n            .catch((error) => {})\n        : await dispatch(createParoisse(data))\n            .then(() => {\n              setIsOk(false);\n              dispatch(getAllParoisse());\n\n              cancelForm();\n              setToggleForm(!toggleForm);\n              return true;\n            })\n            .catch((error) => {});\n    } else {\n      alert(\"Veuillez entrer le nom de la paroisse !\");\n    }\n  };\n\n  const cancelForm = () => {\n    setIsOk(false);\n    setFormData({\n      ...formData,\n      name: \"\",\n      province: \"\",\n      diocese: \"\",\n      address: \"\",\n      contact: \"\",\n      email: \"\",\n      history: \"\",\n      pictures: [],\n      location: {\n        lat: null,\n        lng: null,\n      },\n      messes: [],\n      confessions: [],\n    });\n\n    setFiles([]);\n\n    setToggleForm(false);\n  };\n\n  const convertArray = (arr) => {\n    const result = [];\n    arr.forEach((el, idx) => {\n      const a = {\n        id: idx + 1,\n        value: el,\n        label: el,\n      };\n      result.push(a);\n    });\n    return result;\n  };\n\n  const editParoisse = (idx) => {\n    setParoisseEdit(paroisses[idx]);\n\n    setFormData({\n      name: paroisses[idx].name,\n      province: paroisses[idx].province,\n      diocese: paroisses[idx].diocese,\n      address: paroisses[idx].address,\n      contact: paroisses[idx].contact,\n      email: paroisses[idx].email,\n      history: paroisses[idx].history,\n      pictures: paroisses[idx].pictures,\n      location: {\n        lat: paroisses[idx].location?.coordinates[0],\n        lng: paroisses[idx].location?.coordinates[1],\n      },\n      messes: paroisses[idx].messes,\n      confessions: paroisses[idx].confessions,\n    });\n\n    setFiles(paroisses[idx].pictures);\n\n    setCoordinates({\n      lat: paroisses[idx].location?.coordinates[0],\n      lng: paroisses[idx].location?.coordinates[1],\n    });\n\n    setUserCoords({\n      lat: paroisses[idx].location?.coordinates[0],\n      lng: paroisses[idx].location?.coordinates[1],\n    });\n\n    if (!isEmpty(paroisses[idx].messes)) {\n      setDays(paroisses[idx].messes);\n    }\n\n    let arrIntermediate = [];\n    let arrConfIntermediate = [];\n\n    paroisses[idx]?.messes.forEach((messe) => {\n      const a = messe?.dayHour;\n      arrIntermediate.push(a);\n    });\n\n    paroisses[idx]?.confessions.forEach((confession) => {\n      const a = confession?.dayHour;\n      arrConfIntermediate.push(a);\n    });\n\n    setArrFinal([]);\n    setArrConfFinal([]);\n    setIsEdit(true);\n\n    const newArr = [];\n    const newArr2 = [];\n\n    arrIntermediate.forEach((e) => {\n      newArr.push(convertArray(e));\n    });\n\n    arrConfIntermediate.forEach((e) => {\n      newArr2.push(convertArray(e));\n    });\n\n    setArrFinal(newArr);\n    setArrConfFinal(newArr2);\n    setToggleForm(!toggleForm);\n  };\n\n  const renderArrFinal = (arr, i) => {\n    if (!isEmpty(arr)) {\n      switch (arr[i].length) {\n        case 1:\n          return [arr[i][0]];\n\n        case 2:\n          return [arr[i][0], arr[i][1]];\n\n        case 3:\n          return [arr[i][0], arr[i][1], arr[i][2]];\n\n        case 4:\n          return [arr[i][0], arr[i][1], arr[i][2], arr[i][3]];\n\n        case 5:\n          return [arr[i][0], arr[i][1], arr[i][2], arr[i][3], arr[i][4]];\n\n        default:\n          break;\n      }\n    }\n  };\n\n  const deleteParoisses = async (i) => {\n    const id = paroisses[i]._id;\n\n    var answer = window.confirm(\"Are you sure you want to delete this item?\");\n    if (answer) {\n      await dispatch(deleteParoisse(id))\n        .then(() => {\n          dispatch(getAllParoisse());\n        })\n        .catch(() => {});\n    }\n  };\n\n  return (\n    <>\n      {toggleForm && (\n        // Form elements\n        <div className=\"form-container\">\n          <div className=\"form-group-container\">\n            <div className=\"container-header\">\n              <h1>Fiche Paroisse</h1>\n\n              <div\n                className=\"form-closer\"\n                onClick={() => setToggleForm(!toggleForm)}\n              >\n                Fermer\n              </div>\n            </div>\n\n            <div className=\"form-elements-container\">\n              <form onSubmit={(e) => submitForm(e)}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input\n                    htmlFor=\"name\"\n                    placeholder=\"Nom\"\n                    value={formData.name}\n                    onChange={(e) =>\n                      setFormData({ ...formData, name: e.target.value })\n                    }\n                  />\n                </div>\n                <div className=\"form-group-group\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"province\">Province</label>\n                    <input\n                      htmlFor=\"province\"\n                      placeholder=\"Province\"\n                      value={formData.province}\n                      onChange={(e) =>\n                        setFormData({ ...formData, province: e.target.value })\n                      }\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"diocese\">Diocèse</label>\n                    <input\n                      htmlFor=\"diocese\"\n                      placeholder=\"Diocèse\"\n                      value={formData.diocese}\n                      onChange={(e) =>\n                        setFormData({ ...formData, diocese: e.target.value })\n                      }\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group-group\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"address\">Adresse</label>\n                    <input\n                      htmlFor=\"address\"\n                      placeholder=\"Adresse\"\n                      value={formData.address}\n                      onChange={(e) =>\n                        setFormData({ ...formData, address: e.target.value })\n                      }\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"contact\">Contact</label>\n                    <input\n                      htmlFor=\"contact\"\n                      placeholder=\"Contact\"\n                      value={formData.contact}\n                      onChange={(e) =>\n                        setFormData({ ...formData, contact: e.target.value })\n                      }\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      htmlFor=\"email\"\n                      placeholder=\"Email\"\n                      value={formData.email}\n                      onChange={(e) =>\n                        setFormData({ ...formData, email: e.target.value })\n                      }\n                    />{\" \"}\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"history\">Histoire</label>\n                  <textarea\n                    htmlFor=\"history\"\n                    placeholder=\"Histoire\"\n                    value={formData.history}\n                    onChange={(e) =>\n                      setFormData({ ...formData, history: e.target.value })\n                    }\n                  />\n                </div>\n                {/* Important! Always set the container height explicitly */}\n                <div className=\"location-container\">\n                  <h1>Localisation Géographique</h1>\n                  <div className=\"location-map-container\">\n                    <GoogleMapReact\n                      bootstrapURLKeys={{ key: apiKey }}\n                      defaultCenter={defaultProps.center}\n                      center={coordinates}\n                      defaultZoom={17}\n                      margin={[50, 50, 50, 50]}\n                      options={{\n                        disableDefaultUI: true,\n                        zoomControl: true,\n                        styles: mapStyles,\n                      }}\n                      onChange={(e) => {\n                        setPosition(e);\n                        setFormData({\n                          ...formData,\n                          location: {\n                            type: \"Point\",\n                            coordinates: [coordinates.lat, coordinates.lng],\n                          },\n                        });\n                      }}\n                    >\n                      <Marker lat={userCoords.lat} lng={userCoords.lng} />\n                    </GoogleMapReact>\n                  </div>\n                </div>\n\n                {/** Programmes */}\n                <div className=\"programmes\">\n                  <div className=\"programmes-title\">\n                    <h1>Programmes</h1>\n                  </div>\n\n                  <div className=\"programme\">\n                    <div className=\"programme-title\">\n                      <h3>Programme des messes</h3>\n                    </div>\n                    <div className=\"programme-content\">\n                      {days.map((day, idx) => (\n                        <div className=\"day-block\">\n                          <h3 className=\"day-title\">{day.dayName}</h3>\n                          <Select\n                            className=\"select-element\"\n                            options={dayOptions}\n                            closeMenuOnSelect={false}\n                            components={animatedComponents}\n                            isMulti\n                            onChange={(e) => handleSelectMesses(e, day.id)}\n                            defaultValue={\n                              isEdit && renderArrFinal(arrFinal, idx)\n                            }\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"programme\">\n                    <div className=\"programme-title\">\n                      <h3>Programme des Confessions</h3>\n                    </div>\n                    <div className=\"programme-content\">\n                      {days.map((day, idx) => (\n                        <div className=\"day-block\">\n                          <h3 className=\"day-title\">{day.dayName}</h3>\n                          <Select\n                            className=\"select-element\"\n                            options={dayOptions}\n                            closeMenuOnSelect={false}\n                            components={animatedComponents}\n                            isMulti\n                            onChange={(e) => handleSelectConfessions(e, day.id)}\n                            defaultValue={\n                              isEdit && renderArrFinal(arrConfFinal, idx)\n                            }\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n\n                {/** Pictures */}\n                <div className=\"pictures\">\n                  <div className=\"pictures-title\">\n                    <h3>Pictures</h3>\n                  </div>\n                  <div className=\"pictures-content\">\n                    <div className=\"pictures-blocks-container\">\n                      {!isEmpty(files) && <>{renderFiles()}</>}\n\n                      <div className=\"file-upload\">\n                        <input\n                          type=\"file\"\n                          name=\"file\"\n                          onChange={(e) => fileSelectedHandler(e)}\n                          accept=\".jpg, .jpeg, .png\"\n                        />\n                        <i className=\"fa fa-arrow-up\"></i>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                {/** Clergy */}\n\n                <div className=\"btn-group\">\n                  <input type=\"submit\" value=\"Save\" />\n                  {isOk === true && <i className=\"fa fa-spinner fa-spin\"></i>}\n\n                  <input\n                    type=\"reset\"\n                    value=\"Annuler\"\n                    onClick={() => cancelForm()}\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className=\"paroisses-board-container\">\n        <div className=\"header\">\n          <h1>Paroisses</h1>\n        </div>\n\n        <div className=\"paroisses-container\">\n          <div\n            className=\"paroisse-add-element\"\n            onClick={() => setToggleForm(!toggleForm)}\n          >\n            <img\n              src={process.env.PUBLIC_URL + \"/imgs/icons/add.png\"}\n              alt={\"add\"}\n            />\n          </div>\n          {!isEmpty(paroisses) &&\n            paroisses.map((element, i) => (\n              <div className=\"paroisse-element\" key={i}>\n                <div className=\"paroisse-infos\">\n                  <div className=\"paroisse-infos-image\">\n                    {element?.pictures[0] ? (\n                      <img\n                        src={process.env.PUBLIC_URL + element.pictures[0]}\n                        alt={element.name}\n                      />\n                    ) : (\n                      <img\n                        src={process.env.PUBLIC_URL + \"/imgs/icon.png\"}\n                        alt={element.name}\n                      />\n                    )}{\" \"}\n                  </div>\n                  <div className=\"paroisse-infos-name\">\n                    <h4>{element.name}</h4>\n                    <h6>\n                      {element.diocese} - {element.province}\n                    </h6>\n                  </div>\n                </div>\n                <div className=\"paroisse-element-footer\">\n                  <NavLink\n                    to={`/paroisse/${element._id}`}\n                    className=\"footer-view\"\n                    target=\"_blank\"\n                  >\n                    <img\n                      src={process.env.PUBLIC_URL + \"/imgs/icons/eye.png\"}\n                      alt={\"edit\"}\n                    />\n                  </NavLink>{\" \"}\n                  <div className=\"footer-edit\" onClick={() => editParoisse(i)}>\n                    <img\n                      src={process.env.PUBLIC_URL + \"/imgs/icons/edit.png\"}\n                      alt={\"edit\"}\n                    />\n                  </div>\n                  <div\n                    className=\"footer-delete\"\n                    onClick={() => deleteParoisses(i)}\n                  >\n                    <img\n                      src={process.env.PUBLIC_URL + \"/imgs/icons/trash.png\"}\n                      alt={\"delete\"}\n                    />\n                  </div>\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ParoissesBoard;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Login/LogContainer.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/HeadBar/HeadBar.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/Paroisse/ChooseButton.jsx",["754"],[],"import React, { useEffect, useState, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { chooseParoisse, unchooseParoisse } from \"../../actions/paroisse\";\nimport { UidContext } from \"../AppContext\";\n\nconst ChooseButton = ({ paroisse }) => {\n  const [isChoosen, setIsChoosen] = useState(false);\n  const [onLoading, setOnLoading] = useState(false);\n  const [isParoissed, setIsParoissed] = useState(false);\n  const uid = useContext(UidContext);\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user?.user);\n\n  const Pid = paroisse?._id;\n\n  const choose = async () => {\n    setOnLoading(true);\n    await dispatch(chooseParoisse(Pid, uid));\n    setIsChoosen(true);\n    setOnLoading(false);\n    window.location.reload();\n  };\n\n  const unChoose = async () => {\n    setOnLoading(true);\n    await dispatch(unchooseParoisse(Pid, uid));\n    setIsChoosen(false);\n    setOnLoading(false);\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    if (paroisse?.paroissiens.includes(uid)) {\n      setIsChoosen(true);\n      setIsParoissed(true);\n    }\n\n    if (user?._paroisse !== undefined && !paroisse.paroissiens.includes(uid)) {\n      setIsChoosen(true);\n      setIsParoissed(false);\n    }\n\n    if (user?._paroisse === \"\" || user?._paroisse === undefined) {\n      setIsChoosen(false);\n      setIsParoissed(false);\n    }\n  }, [paroisse]);\n\n  const otherParoisseChoosen = () => {\n    if (uid !== undefined && isChoosen === true && isParoissed === false) {\n      return (\n        <button\n          className=\"choose-paroisse-container\"\n          onClick={() => alert(\"Une paroisse est déjà selectionnée\")}\n        >\n          <p>Une autre paroisse a déja été choisie</p>{\" \"}\n          <img\n            src={process.env.PUBLIC_URL + \"/imgs/icons/love.png\"}\n            alt=\"heart\"\n          />\n          {onLoading === true && <i className=\"fa fa-spinner fa-spin\"></i>}\n        </button>\n      );\n    }\n  };\n\n  return (\n    <div>\n      {uid !== undefined && isChoosen === true && isParoissed === true && (\n        <button\n          className=\"choose-paroisse-container\"\n          onClick={() => unChoose()}\n        >\n          <p>Paroisse choisie</p>{\" \"}\n          <img\n            src={process.env.PUBLIC_URL + \"/imgs/icons/love.png\"}\n            alt=\"heart\"\n          />\n          {onLoading === true && <i className=\"fa fa-spinner fa-spin\"></i>}\n        </button>\n      )}\n\n      {otherParoisseChoosen()}\n      {uid !== undefined && isChoosen === false && (\n        <button className=\"choose-paroisse-container\" onClick={() => choose()}>\n          <p>Choisir comme ma paroisse</p>{\" \"}\n          <img\n            src={process.env.PUBLIC_URL + \"/imgs/icons/love.png\"}\n            alt=\"heart\"\n          />\n          {onLoading === true && <i className=\"fa fa-spinner fa-spin\"></i>}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default ChooseButton;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/actions/auth.js",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/Map/mapStyles.js",[],["755"],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/Map/Marker.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/Map/ParoisseMarker.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/Map/List/List.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/Login/Forms/SignInForm.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/Login/Forms/SignUpForm.jsx",["756"],[],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GoogleLogin } from \"@react-oauth/google\";\n\nimport { signup } from \"../../../actions/auth\";\nimport jwtDecode from \"jwt-decode\";\n\nconst SignUpForm = () => {\n  const [userData, setUserData] = useState({\n    name: \"\",\n    lastName: \"\",\n    contact: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const dispatch = useDispatch();\n  const { message } = useSelector((state) => state.message);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(signup(userData));\n  };\n\n  const googleSuccess = async (res) => {\n    const decoded = jwtDecode(res.credential);\n    const googleUser = {\n      email: decoded?.email,\n      password: decoded?.sub,\n      confirmPassword: decoded?.sub,\n      name: decoded?.given_name,\n      contact: userData.contact,\n      lastName: decoded?.family_name,\n    };\n\n    setUserData({\n      ...userData,\n      email: decoded?.email,\n      password: decoded?.sub,\n      contact: userData.contact,\n      name: decoded?.given,\n      lastName: decoded?.family_name,\n      confirmPassword: decoded?.sub,\n    });\n\n    const bool = false;\n    dispatch(signup(googleUser, bool));\n  };\n  const googleFailure = (error) => {\n  };\n\n  return (\n    <div className=\"sign-up-container\">\n      <div className=\"header-container\">\n        <h1>Bienvenue dans l'aventure</h1>\n        <p>\n          Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quidem quas\n          maiores nisi.\n        </p>\n      </div>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <div className=\"inputs-group\">\n          <label htmlFor=\"name\">Prénoms</label>\n          <br />\n          <input\n            type=\"text\"\n            required\n            name=\"name\"\n            className=\"input-form\"\n            value={userData.name}\n            onChange={(e) => setUserData({ ...userData, name: e.target.value })}\n          />\n        </div>\n        <div className=\"inputs-group\">\n          <label htmlFor=\"lastName\">Nom</label>\n          <br />\n          <input\n            type=\"text\"\n            required\n            name=\"lastName\"\n            className=\"input-form\"\n            value={userData.lastName}\n            onChange={(e) =>\n              setUserData({ ...userData, lastName: e.target.value })\n            }\n          />\n        </div>\n        <div className=\"inputs-group\">\n          <label htmlFor=\"contact\">Contact</label>\n          <br />\n          <input\n            type=\"text\"\n            required\n            name=\"contact\"\n            className=\"input-form\"\n            value={userData.contact}\n            onChange={(e) =>\n              setUserData({ ...userData, contact: e.target.value })\n            }\n          />\n        </div>\n        <div className=\"inputs-group\">\n          <label htmlFor=\"email\">Email</label>\n          <br />\n          <input\n            type=\"email\"\n            required\n            name=\"email\"\n            className=\"input-form\"\n            value={userData.email}\n            onChange={(e) =>\n              setUserData({ ...userData, email: e.target.value })\n            }\n          />\n        </div>\n        <div className=\"inputs-group\">\n          <label htmlFor=\"password\">Mot de Passe</label>\n          <br />\n          <input\n            type=\"password\"\n            required\n            minLength={6}\n            name=\"password\"\n            className=\"input-form\"\n            value={userData.password}\n            onChange={(e) =>\n              setUserData({ ...userData, password: e.target.value })\n            }\n          />\n        </div>\n        <div className=\"inputs-group\">\n          <label htmlFor=\"confirmPassword\">Confirmez le mot de passe</label>\n          <br />\n          <input\n            type=\"password\"\n            required\n            minLength={6}\n            name=\"confirmPassword\"\n            className=\"input-form\"\n            value={userData.confirmPassword}\n            onChange={(e) =>\n              setUserData({ ...userData, confirmPassword: e.target.value })\n            }\n          />\n        </div>\n        <div className=\"inputs-group\">\n          <input type=\"submit\" value=\"Inscription\" />\n        </div>\n        <GoogleLogin\n          onSuccess={googleSuccess}\n          onError={googleFailure}\n          size=\"large\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/components/MaParoisse/MaParoisse.jsx",["757","758"],[],"import React, { useEffect, useState, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getParoisse } from \"../../actions/paroisse\";\nimport { getActuByID } from \"../../actions/actus\";\nimport { isEmpty } from \"../utils/index\";\nimport { NavLink } from \"react-router-dom\";\nimport { UidContext } from \"../AppContext\";\n\nconst MaParoisse = ({ id }) => {\n  const [loadEvent, setLoadEvent] = useState(true);\n  const [isSwith, setIsSwith] = useState(false);\n  const uid = useContext(UidContext);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (loadEvent) {\n      dispatch(getParoisse(id));\n      dispatch(getActuByID(id));\n    }\n  }, [dispatch, id, loadEvent]);\n\n  const paroisse = useSelector((state) => state.paroisse);\n  const actus = useSelector((state) => state.actu);\n\n  const toggleProgram = (id) => {\n    id === 1 ? setIsSwith(false) : setIsSwith(true);\n  };\n\n  const putDashes = (hours) => {\n    const arrayLength = hours.length;\n    return arrayLength <= 2\n      ? hours[0] + \" - \" + hours[1]\n      : hours[0] + \" - \" + hours[1] + \" - \" + hours[2];\n  };\n\n  return (\n    <>\n      {!isEmpty(paroisse) && paroisse?.paroissiens?.includes(uid) && (\n        <div className=\"MaParoisse-container\">\n          <div className=\"MaParoisse-header\">\n            <NavLink to={`/paroisse/${paroisse._id}`}>\n              <h1>Ma Paroisse</h1>\n            </NavLink>\n\n            <NavLink to={`/paroisses`} className=\"MaParoisse-header-right\">\n              <h2>Paroisses</h2>\n              <img\n                src={process.env.PUBLIC_URL + \"/imgs/icons/arrow-right.png\"}\n                alt=\"arrow-right\"\n              />\n            </NavLink>\n          </div>\n\n          <div className=\"MaParoisse-infos-container\">\n            <div className=\"MaParoisse-infos-left\">\n              {paroisse?.pictures[0] ? (\n                <img\n                  src={process.env.PUBLIC_URL + paroisse.pictures[0]}\n                  alt={paroisse.name}\n                />\n              ) : (\n                <img\n                  src={process.env.PUBLIC_URL + \"/imgs/icon.png\"}\n                  alt={paroisse.name}\n                />\n              )}{\" \"}\n            </div>\n            <div className=\"MaParoisse-infos-right\">\n              <h1>{paroisse?.name}</h1>\n\n              <div className=\"MaParoisse-program\">\n                <div className=\"MaParoisse-program-title\">\n                  Programme Paroissial\n                </div>\n                <div className=\"MaParoisse-program-switch\">\n                  <div\n                    className={`switch ${!isSwith && \"active\"}`}\n                    onClick={() => toggleProgram(1)}\n                  >\n                    Messes\n                  </div>\n                  <div\n                    className={`switch ${isSwith && \"active\"}`}\n                    onClick={() => toggleProgram(2)}\n                  >\n                    Confessions\n                  </div>\n                </div>\n                {isSwith === false && (\n                  <div className=\"MaParoisse-program-messes\">\n                    {paroisse?.messes.map((messe, idx) => (\n                      <>\n                        <div key={idx} className=\"messe-box\">\n                          <h3>\n                            {messe.dayName} : {putDashes(messe?.dayHour)}\n                          </h3>\n                        </div>\n                      </>\n                    ))}\n                  </div>\n                )}\n\n                {isSwith === true && (\n                  <div className=\"MaParoisse-program-confess\">\n                    {paroisse?.confessions.lengtht > 1 &&\n                      paroisse?.confessions.map((confession, idx) => (\n                        <>\n                          <div key={idx} className=\"confess-box\">\n                            <h3>\n                              {confession.dayName} :{\" \"}\n                              {putDashes(confession?.dayHour)}\n                            </h3>\n                          </div>\n                        </>\n                      ))}\n                    {paroisse?.confessions.length === 1 &&\n                      paroisse?.confessions.map((confession, idx) => (\n                        <>\n                          <div key={idx} className=\"confess-box\">\n                            <h3>\n                              {confession.dayName} : {confession?.dayHour}\n                            </h3>\n                          </div>\n                        </>\n                      ))}\n                  </div>\n                )}\n              </div>\n\n              {!isEmpty(actus) && (\n                <div className=\"MaParoisse-actus\">\n                  <div className=\"MaParoisse-actus-title\">\n                    Vie de ma Paroisse\n                  </div>\n                  <div className=\"MaParoisse-actus-container\">\n                    {Array.isArray(actus?.data)\n                      ? actus?.data.map((actu, idx) => (\n                          <NavLink\n                            to={`/actu/${actu._id}`}\n                            className=\"actu-box\"\n                            key={idx}\n                          >\n                            <div className=\"box-img\">\n                              <img src={process.env.PUBLIC_URL + actu.poster} />\n                            </div>\n                            {actu.title}\n                          </NavLink>\n                        ))\n                      : null}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MaParoisse;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Actu.jsx",["759","760","761","762"],[],"import React, { useEffect, useState } from \"react\";\nimport { useParams, NavLink } from \"react-router-dom\";\nimport { getActu } from \"../actions/actus\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty } from \"../components/utils/index\";\n\nimport Loader from \"../components/Loader/Loader\";\n\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/fr\";\n\nimport Footer from \"../components/Footer/Footer\";\n\nconst Actu = () => {\n  const [loadEvent, setLoadEvent] = useState(true);\n  const [onLoading, setOnLoading] = useState(true);\n  let { id } = useParams();\n  const dispatch = useDispatch();\n\n  dayjs.locale(\"fr\");\n  const hourParser = (date) => {\n    return dayjs(date).format(\"HH\");\n  };\n\n  const minuteParser = (date) => {\n    return dayjs(date).format(\"mm\");\n  };\n\n  useEffect(() => {\n    if (loadEvent) {\n      dispatch(getActu(id));\n      setLoadEvent(false);\n    }\n\n    setTimeout(() => {\n      setOnLoading(false);\n    }, 1000);\n  }, [dispatch, id, loadEvent]);\n\n  const actu = useSelector((state) => state.actu.data);\n\n  return (\n    <>\n      {onLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"actu-container\">\n          <div className=\"actu-details-container\">\n            <img\n              src={process.env.PUBLIC_URL + actu?.poster}\n              alt=\"actu-poster\"\n              width=\"500px\"\n            />\n\n            <div className=\"actu-title\">\n              <p>{actu.title}</p>\n            </div>\n            <div className=\"actu-description\">\n              <p>{actu.description}</p>\n            </div>\n          </div>\n          <Footer dot=\".\" />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Actu;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/components/MaParoisse/scroll.js",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/DemandeMesses/DemandeMesses.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/VerseDay/VerseDay.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/demande.js",[],["763"],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/demandes.js",[],["764"],"/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Demandes.jsx",["765","766","767"],[],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getParoisse, getAllParoisse } from \"../actions/paroisse\";\nimport { addDemande } from \"../actions/demandes\";\nimport { isEmpty } from \"../components/utils/index\";\nimport { NavLink } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar/NavBar\";\n\nconst Demandes = () => {\n  const user = useSelector((state) => state.user.user);\n  useEffect(() => {\n    if (isEmpty(user)) {\n      window.location.href = \"/login\";\n    }\n  }, [user]);\n\n  const [paroisseChoosen, setParoisseChoosen] = useState(\"\");\n  const [idChoosen, setIdChoosen] = useState(null);\n  const [dayChoosen, setDayChoosen] = useState([]);\n  const [demandeDatas, setDemandeDatas] = useState({\n    name: \"\",\n    number: \"\",\n    textDemand: \"\",\n    dayMesse: \"\",\n    hourMesse: \"\",\n    _idParoisse: \"\",\n    paroisseName: \"\",\n  });\n\n  const [isValid, setIsvalid] = useState(false);\n\n  const dispatch = useDispatch();\n\n  let paroisse = useSelector((state) => state.paroisse);\n  const paroisses = useSelector((state) => state.paroisses);\n\n  useEffect(() => {\n    dispatch(getAllParoisse());\n\n    if (idChoosen) {\n      paroisse = {};\n      dispatch(getParoisse(idChoosen));\n      setIdChoosen(null);\n    }\n  }, [user, paroisse, idChoosen]);\n\n  const handleAllParoisseList = () => {\n    if (!isEmpty(paroisses)) {\n      return (\n        <select\n          onChange={(e) => chooseParoisse(e) || null}\n          value={demandeDatas?.paroisseName || \"\"}\n        >\n          <option value=\"\" disabled>\n            Choisir paroisse *\n          </option>\n          {paroisses.map((e) => (\n            <option key={e._id} data-key={e._id} value={e.name}>\n              {e.name}\n            </option>\n          ))}\n        </select>\n      );\n    }\n  };\n\n  const chooseParoisse = (event) => {\n    const selectedIndex = event.target.options.selectedIndex;\n    const idx = event.target.options[selectedIndex].getAttribute(\"data-key\");\n\n    setIdChoosen(idx);\n    setParoisseChoosen(idx);\n    setDayChoosen([]);\n    setDemandeDatas({\n      ...demandeDatas,\n      paroisseName: event.target.value,\n      _idParoisse: idx,\n      dayMesse: \"\",\n      hourMesse: \"\",\n    });\n  };\n\n  const chooseDay = (e) => {\n    const selectedIndex = e.target.options.selectedIndex;\n    const idx = e.target.options[selectedIndex].getAttribute(\"data-key\");\n\n    setDayChoosen(paroisse?.messes[idx].dayHour);\n\n    setDemandeDatas({ ...demandeDatas, dayMesse: e.target.value });\n  };\n\n  const chooseHour = (e) => {\n    setDemandeDatas({ ...demandeDatas, hourMesse: e.target.value });\n  };\n\n  const handleDemand = async (e) => {\n    e.preventDefault();\n    setIsvalid(true);\n    const finalDatas = {\n      name: demandeDatas.name,\n      number: demandeDatas.number,\n      textDemand: demandeDatas.textDemand,\n      dayMesse: demandeDatas.dayMesse,\n      dayHour: demandeDatas.hourMesse,\n      _idParoisse: demandeDatas._idParoisse,\n    };\n\n    await dispatch(addDemande(finalDatas));\n\n    setIsvalid(false);\n    setDemandeDatas({\n      name: \"\",\n      number: \"\",\n      textDemand: \"\",\n      dayMesse: \"\",\n      hourMesse: \"\",\n      _idParoisse: \"\",\n      paroisseName: \"\",\n    });\n  };\n\n  return (\n    <>\n      <NavBar value=\"Demande\" />\n      <div className=\"demandes-container\">\n        <div className=\"demandes-header\">\n          <div>\n            <h1>Demande</h1>\n            <h1>de messe</h1>\n            <h3>\n              Offrez une messe en action de grâce, pour vos proches, pour vos\n              defunts...\n            </h3>\n          </div>\n        </div>\n\n        <form className=\"demande-form\" onSubmit={(e) => handleDemand(e)}>\n          <div className=\"form-group\">\n            <label>Nom & Prénom(s) du demandeur</label>\n            <br />\n            <input\n              type=\"text\"\n              className=\"name\"\n              name=\"name\"\n              value={demandeDatas.name}\n              onChange={(e) =>\n                setDemandeDatas({ ...demandeDatas, name: e.target.value })\n              }\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Contact</label>\n            <br />\n            <input\n              type=\"text\"\n              className=\"name\"\n              name=\"number\"\n              value={demandeDatas.number}\n              onChange={(e) =>\n                setDemandeDatas({\n                  ...demandeDatas,\n                  number: e.target.value,\n                })\n              }\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Intention</label>\n            <br />\n            <textarea\n              placeholder=\"Un paroissien demande cette messe en action de grâces pour...\"\n              id=\"content\"\n              name=\"textDemand\"\n              value={demandeDatas.textDemand}\n              onChange={(e) =>\n                setDemandeDatas({\n                  ...demandeDatas,\n                  textDemand: e.target.value,\n                })\n              }\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Paroisse souhaitée</label>\n            <br />\n            {handleAllParoisseList()}\n          </div>\n\n          {!isEmpty(paroisse) &&\n          paroisseChoosen &&\n          paroisse?.messes.length > 0 ? (\n            <div className=\"form-group\">\n              <>\n                <label>Date souhaitée</label>\n                <br />\n                <select\n                  onChange={(e) => chooseDay(e) || null}\n                  value={demandeDatas.dayMesse || \"\"}\n                >\n                  <option value=\"\" disabled=\"disabled\">\n                    Choisir le jour\n                  </option>\n                  {paroisse?.messes.map((e, idx) => (\n                    <option key={idx} data-key={idx}>\n                      {e.dayName}\n                    </option>\n                  ))}\n                </select>\n              </>\n            </div>\n          ) : (\n            <>\n              {paroisseChoosen && (\n                <div className=\"empty-messes\">\n                  <h4>\n                    Désolé cette paroisse n'a pas de messe enregistrée sur notre\n                    plateforme\n                  </h4>\n                </div>\n              )}\n            </>\n          )}\n\n          {!isEmpty(paroisse) && dayChoosen.length > 0 ? (\n            <div className=\"form-group\">\n              <>\n                <label>Heure de messe souhaitée</label>\n                <br />\n                <select\n                  onChange={(e) => chooseHour(e) || null}\n                  value={demandeDatas.hourMesse || \"\"}\n                >\n                  <option value=\"\" disabled=\"disabled\">\n                    Choisir l'heure\n                  </option>\n                  {dayChoosen.map((e, idx) => (\n                    <option key={idx} data-key={idx}>\n                      {e}\n                    </option>\n                  ))}\n                </select>\n              </>\n            </div>\n          ) : (\n            <>\n              {paroisseChoosen && !isEmpty(dayChoosen) && (\n                <div className=\"empty-messes\">\n                  <h4>Désolé Il n'y a pas de messe ce jour !</h4>\n                </div>\n              )}\n            </>\n          )}\n          {!isEmpty(paroisse) &&\n            paroisseChoosen &&\n            dayChoosen.length > 0 &&\n            demandeDatas.hourMesse && (\n              <div className=\"montant\">\n                <h3>Coût de la demande :</h3>\n                <h1>3.300Fcfa</h1>\n              </div>\n            )}\n\n          <input type=\"submit\" value=\"Valider\" />\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Demandes;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/actions/demandes.js",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Provinces.jsx",["768"],[],"import React from \"react\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport { NavLink } from \"react-router-dom\";\nimport SearchBar from \"../components/Search/SearchBar\";\n\nconst Provinces = () => {\n  const location = {\n    pathname: \"/diocese\",\n    state: {\n      title: \"Abidjan\",\n    },\n  };\n  return (\n    <>\n      <NavBar value={\"Provinces\"} />\n      <SearchBar />\n      <div className=\"provinces-container\">\n        <div className=\"provinces-container-head\">\n          <div>\n            <h1>Diocèses</h1>\n            <h1>et Paroisses</h1>\n          </div>\n        </div>\n\n        <div className=\"provinces-grid\">\n          <div className=\"provinces-grid-element\">\n            <div className=\"province-image\">\n              <img\n                src={process.env.PUBLIC_URL + \"/imgs/provinces/abidjan.jpeg\"}\n                alt=\"Province écclésiastique d'Abidjan\"\n              />\n            </div>\n            <div className=\"province-details\">\n              <div className=\"province-name\">\n                <h1>PROVINCE ÉCCLÉSIASTIQUE D'ABIDJAN</h1>\n              </div>\n              <div className=\"province-dioceses\">\n                <NavLink to={`/diocese/Abidjan`}>\n                  <p>Diocèse d'Abidjan</p>\n                </NavLink>\n                <NavLink to={`/diocese/Agboville`}>\n                  <p>Diocèse d'Agboville</p>\n                </NavLink>\n                <NavLink to={`/diocese/Grand-Bassam`}>\n                  <p> Diocèse de Grand-Bassam</p>\n                </NavLink>\n                <NavLink to={`/diocese/Yopougon`}>\n                  <p>Diocèse de Yopougon</p>\n                </NavLink>\n              </div>\n            </div>\n          </div>\n          <div className=\"provinces-grid-element\">\n            <div className=\"province-image\">\n              <img\n                src={process.env.PUBLIC_URL + \"/imgs/provinces/bouake.jpeg\"}\n                alt=\"Province écclésiastique de Bouaké\"\n              />{\" \"}\n            </div>\n            <div className=\"province-details\">\n              <div className=\"province-name\">\n                <h1>PROVINCE ÉCCLÉSIASTIQUE DE BOUAKÉ</h1>\n              </div>\n              <div className=\"province-dioceses\">\n                <NavLink to={`/diocese/Bouaké`}>\n                  <p>Diocèse de Bouaké</p>\n                </NavLink>\n                <NavLink to={`/diocese/Abengourou`}>\n                  <p>Diocèse d'Abengourou</p>\n                </NavLink>\n                <NavLink to={`/diocese/Bondoukou`}>\n                  <p>Diocèse de Bondoukou</p>\n                </NavLink>\n                <NavLink to={`/diocese/Yamoussoukro`}>\n                  <p>Diocèse de Yamoussoukro</p>\n                </NavLink>\n              </div>\n            </div>\n          </div>\n          <div className=\"provinces-grid-element\">\n            <div className=\"province-image\">\n              <img\n                src={process.env.PUBLIC_URL + \"/imgs/provinces/korhogo.jpeg\"}\n                alt=\"Province écclésiastique de Korhogo\"\n              />{\" \"}\n            </div>\n            <div className=\"province-details\">\n              <div className=\"province-name\">\n                <h1>PROVINCE ÉCCLÉSIASTIQUE DE KORHOGO</h1>\n              </div>\n              <div className=\"province-dioceses\">\n                <NavLink to={`/diocese/Korhogo`}>\n                  <p>Diocèse de Korhogo</p>\n                </NavLink>\n                <NavLink to={`/diocese/Katiola`}>\n                  <p>Diocèse de Katiola</p>\n                </NavLink>\n                <NavLink to={`/diocese/Odienné`}>\n                  <p>Diocèse de Odienné</p>\n                </NavLink>\n              </div>\n            </div>\n          </div>\n          <div className=\"provinces-grid-element\">\n            <div className=\"province-image\">\n              <img\n                src={process.env.PUBLIC_URL + \"/imgs/provinces/gagnoa.jpeg\"}\n                alt=\"Province écclésiastique de Gagnoa\"\n              />{\" \"}\n            </div>\n            <div className=\"province-details\">\n              <div className=\"province-name\">\n                <h1>PROVINCE ÉCCLÉSIASTIQUE DE GAGNOA</h1>\n              </div>\n              <div className=\"province-dioceses\">\n                <NavLink to={`/diocese/Gagnoa`}>\n                  <p>Diocèse de Gagnoa</p>\n                </NavLink>\n                <NavLink to={`/diocese/Daloa`}>\n                  <p>Diocèse de Daloa</p>\n                </NavLink>\n                <NavLink to={`/diocese/Man`}>\n                  <p>Diocèse de Man</p>\n                </NavLink>\n                <NavLink to={`/diocese/San Pedro`}>\n                  <p>Diocèse de San Pedro</p>\n                </NavLink>\n              </div>\n            </div>{\" \"}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Provinces;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Diocese.jsx",["769"],[],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport SearchBar from \"../components/Search/SearchBar\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport { isEmpty } from \"../components/utils\";\n\nconst sortParoisses = (arr, name) => {\n  return (\n    !isEmpty(arr) &&\n    arr.filter((el) => el.diocese.toLowerCase().includes(name.toLowerCase()))\n  );\n};\n\nconst renderParoisses = (paroissesFounded) => {\n  return (\n    <div className=\"table-body\">\n      {!isEmpty(paroissesFounded) ? (\n        paroissesFounded.map((el) => {\n          return (\n            <NavLink\n              to={`/paroisse/${el._id}`}\n              key={el._id}\n              className=\"table-row\"\n            >\n              <div>{el.name}</div>\n              <div>{el?.address}</div>\n              <div>{el?.contact}</div>\n              <div>{el?.email}</div>\n            </NavLink>\n          );\n        })\n      ) : (\n        <div className=\"paroisse-no-found\">\n          Aucune paroisse enregistrée dans ce Diocèse pour le moment !\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst Diocese = (props) => {\n  const { name } = useParams();\n\n  const paroisses = useSelector((state) => state.paroisses);\n  const paroissesFounded = sortParoisses(paroisses, name);\n\n  const sendName = () => {\n    const voy = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"];\n    let bool = true;\n\n    for (let i = 0; i < voy.length; i++) {\n      if (name[0] === voy[i]) {\n        bool = true;\n        break;\n      } else {\n        bool = false;\n      }\n    }\n\n    return bool === true ? `Diocèse d'${name}` : `Diocèse de ${name}`;\n  };\n\n  const sendProvinceName = () => {\n    const voy = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"];\n    let bool = true;\n\n    for (let i = 0; i < voy.length; i++) {\n      if (paroissesFounded[0]?.province[0] === voy[i]) {\n        bool = true;\n        break;\n      } else {\n        bool = false;\n      }\n    }\n\n    return bool === true\n      ? `d'${paroissesFounded[0]?.province}`\n      : `de ${paroissesFounded[0]?.province}`;\n  };\n\n  return (\n    <>\n      <NavBar value={\"Paroisses\"} />\n      <SearchBar />\n      <div className=\"diocese-container\">\n        <div className=\"file-arianne\">\n          <NavLink to=\"/provinces\" className=\"file-ariane-element\">\n            <h1>Diocèses et Paroisses</h1>\n          </NavLink>\n          <NavLink to=\"/provinces\" className=\"file-ariane-element\">\n            <h1>Province écclésiastique {sendProvinceName()}</h1>\n          </NavLink>\n          <div className=\"file-ariane-element\">\n            <h1>{sendName()}</h1>\n          </div>\n        </div>\n\n        <div className=\"table-container\">\n          <div className=\"table-header\">\n            <div>Nom</div>\n            <div>Adresse Postale</div>\n            <div>Contact</div>\n            <div>Email</div>\n          </div>\n          {!isEmpty(paroisses) && renderParoisses(paroissesFounded)}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Diocese;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/premiumEvents.js",[],["770"],"/Users/jocode/Documents/GitHub/anouanze/client/src/reducers/othersEvent.js",[],["771"],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/Paroisse/PriestCard.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/Search/SearchBar.jsx",["772","773"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport { getAllParoisse } from \"../../actions/paroisse\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst SearchBar = () => {\n  const dispatch = useDispatch();\n  const [onType, setOnType] = useState(false);\n  const [text, setTest] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(getAllParoisse());\n  }, []);\n\n  useEffect(() => {\n    if (text === \"\") {\n      setOnType(false);\n    }\n  }, [text]);\n  const handleSearch = (e) => {\n    setOnType(true);\n    setTest(e);\n  };\n  return (\n    <div className=\"SearchBar-container\">\n      <div className=\"SearchBar\">\n        <input\n          type=\"text\"\n          placeholder=\"Chercher une paroisse\"\n          onChange={(e) => handleSearch(e.target.value)}\n          onClick={() => setOnType(true)}\n        />\n      </div>\n      {onType && <List textSearch={text} />}\n    </div>\n  );\n};\n\nexport default SearchBar;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Search/List.jsx",["774"],[],"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty } from \"../utils\";\nimport { NavLink } from \"react-router-dom\";\n\nconst renderParoisses = (arr) => {\n  return (\n    <div className=\"result-container\">\n      {!isEmpty(arr) ? (\n        arr.map((elem, index) => {\n          return (\n            <NavLink\n              to={`/paroisse/${elem._id}`}\n              key={elem._id}\n              value={elem._id}\n              className=\"result-element\"\n            >\n              <div className=\"list-img-c\">\n                {elem?.pictures[0] ? (\n                  <img\n                    src={process.env.PUBLIC_URL + elem.pictures[0]}\n                    alt={elem.name}\n                  />\n                ) : (\n                  <img\n                    src={process.env.PUBLIC_URL + \"/imgs/icon.png\"}\n                    alt={elem.name}\n                  />\n                )}\n              </div>\n              <p>{elem.name}</p>\n            </NavLink>\n          );\n        })\n      ) : (\n        <div className=\"result-element\">Aucun resultat</div>\n      )}\n    </div>\n  );\n};\n\n\nconst List = ({ textSearch }) => {\n  const paroisses = useSelector((state) => state.paroisses);\n  const paroissesNameSorted = paroisses.sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n  const newArr = paroissesNameSorted.filter(\n    (paroiss) =>\n      paroiss.name.toLowerCase().includes(textSearch.toLowerCase()) ||\n      paroiss.diocese.toLowerCase().includes(textSearch.toLowerCase()) ||\n      paroiss.province.toLowerCase().includes(textSearch.toLowerCase())\n  );\n\n  return <div className=\"search-list-container\">{renderParoisses(newArr)}</div>;\n};\n\nexport default List;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/components/Home/Bloc Dioceses/DiocesesBloc.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/Home/Bloc Events/EventsBloc.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/Home/Bloc Subscribe/SubscribeBloc.jsx",[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/pages/Actus.jsx",[],[],[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/ModDashboard/DemandesBoard.jsx",["775","776"],[],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty } from \"../utils/index\";\n\nimport { getDemandsByParoisse, updateDemande } from \"../../actions/demandes\";\n\nconst DemandesBoard = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.user);\n\n  useEffect(() => {\n    dispatch(getDemandsByParoisse(user._paroisse));\n  }, [dispatch]);\n\n  let demands = useSelector((state) => state.demandes.data);\n  !isEmpty(demands) && demands.filter((demand) => demand.isValid === false);\n\n  const checkDemand = async (id) => {\n    await dispatch(updateDemande(id)).then(() =>\n      dispatch(getDemandsByParoisse(user._paroisse))\n    );\n  };\n\n  return (\n    <div className=\"mod-demandes-container\">\n      <h1>Demandes de Messe</h1>\n\n      {!isEmpty(demands) ? (\n        <div className=\"list-demandes\">\n          {demands.map((item, index) => {\n            return (\n              <div className=\"list-demandes-item\">\n                <div className=\"list-demandes-left\">\n                  <h3>Demandeur : {item.name}</h3>\n                  <h2>Intention</h2>\n                  <h3>{item.textDemand}</h3>\n                </div>\n                <div className=\"list-demandes-right\">\n                  <input\n                    type=\"checkbox\"\n                    checked={item.isValid}\n                    onClick={() => checkDemand(item._id)}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <div>\n          <h2>Aucune demande en attente</h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DemandesBoard;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/components/ModDashboard/LeftBar.jsx",["777","778"],[],"import React, { useState, useContext } from \"react\";\nimport { ModContext } from \"../../pages/ModDashboard\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\n\nconst LeftBar = ({ userName }) => {\n  const [isActive, setIsActive] = useState(\"\");\n  const { toogleMenu } = useContext(ModContext);\n  const dispatch = useDispatch();\n\n  const toggleActive = (e) => {\n    const elements = document.querySelectorAll(\".left-bar-menu-element\");\n\n    toogleMenu(e.dataset.key);\n    elements.forEach((e) => {\n      e.classList.remove(\"active\");\n    });\n    e.classList.add(\"active\");\n  };\n\n  const handleLogout = async () => {\n    dispatch(logout());\n    localStorage.clear();\n    window.location = \"/\";\n  };\n\n  const handleHome = () => {\n    window.location = \"/\";\n  };\n  return (\n    <div className=\"left-bar-container\">\n      <div className=\"left-bar-header\">\n        <img\n          src={process.env.PUBLIC_URL + \"/imgs/icons/church.png\"}\n          alt={\"logo\"}\n          onClick={() => handleHome()}\n        />\n        <div>\n          <h4>{userName}</h4>\n          <h6>Administrateur</h6>\n        </div>\n      </div>\n\n      <div className=\"left-bar-menu-container\">\n        <div\n          className=\"left-bar-menu-element active\"\n          onClick={(e) => toggleActive(e.target)}\n          data-key=\"1\"\n        >\n          Actualités\n        </div>\n        <div\n          className=\"left-bar-menu-element\"\n          onClick={(e) => toggleActive(e.target)}\n          data-key=\"2\"\n        >\n          Ma Paroisse\n        </div>\n        <div\n          className=\"left-bar-menu-element\"\n          onClick={(e) => toggleActive(e.target)}\n          data-key=\"3\"\n        >\n          Demandes de messe\n        </div>\n      </div>\n\n      <div className=\"left-bar-footer\" onClick={() => handleLogout()}>\n        <img\n          src={process.env.PUBLIC_URL + \"/imgs/icons/logout.png\"}\n          alt={\"logo\"}\n        />\n\n        <p>Se Déconnecter</p>\n      </div>\n    </div>\n  );\n};\n\nexport default LeftBar;\n",[],"/Users/jocode/Documents/GitHub/anouanze/client/src/components/ModDashboard/ParoisseBoard.jsx",["779","780","781","782","783","784"],[],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getParoisse, updateParoisse } from \"../../actions/paroisse\";\nimport { isEmpty } from \"../utils/index\";\nimport { NavLink } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\n\nconst animatedComponents = makeAnimated();\n\nconst ParoisseBoard = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.user);\n  const paroisse = useSelector((state) => state.paroisse);\n\n  // Jours - Heures / Messes & Confessions\n  const [days, setDays] = useState([\n    {\n      id: 1,\n      dayName: \"Lundi\",\n      dayHour: [],\n    },\n    {\n      id: 2,\n      dayName: \"Mardi\",\n      dayHour: [],\n    },\n    {\n      id: 3,\n      dayName: \"Mercredi\",\n      dayHour: [],\n    },\n    {\n      id: 4,\n      dayName: \"Jeudi\",\n      dayHour: [],\n    },\n    {\n      id: 5,\n      dayName: \"Vendredi\",\n      dayHour: [],\n    },\n    {\n      id: 6,\n      dayName: \"Samedi\",\n      dayHour: [],\n    },\n    {\n      id: 7,\n      dayName: \"Dimanche\",\n      dayHour: [],\n    },\n  ]);\n  const [daysConf, setDaysConf] = useState([\n    {\n      id: 1,\n      dayName: \"Lundi\",\n      dayHour: [],\n    },\n    {\n      id: 2,\n      dayName: \"Mardi\",\n      dayHour: [],\n    },\n    {\n      id: 3,\n      dayName: \"Mercredi\",\n      dayHour: [],\n    },\n    {\n      id: 4,\n      dayName: \"Jeudi\",\n      dayHour: [],\n    },\n    {\n      id: 5,\n      dayName: \"Vendredi\",\n      dayHour: [],\n    },\n    {\n      id: 6,\n      dayName: \"Samedi\",\n      dayHour: [],\n    },\n    {\n      id: 7,\n      dayName: \"Dimanche\",\n      dayHour: [],\n    },\n  ]);\n\n  // Fichiers données\n  const [files, setFiles] = useState([]);\n  const [fileSet, setFileSet] = useState([]);\n\n  // Avant / Après validation\n  const [isOk, setIsOk] = useState(false);\n\n  // Données paroisse - édition\n  const [paroisseEdit, setParoisseEdit] = useState({});\n\n  // Mode édition\n  const [isEdit, setIsEdit] = useState(true);\n  const [arrFinal, setArrFinal] = useState([]);\n  const [arrConfFinal, setArrConfFinal] = useState([]);\n\n  // Données formulaire\n  const [formData, setFormData] = useState({\n    name: \"\",\n    province: \"\",\n    diocese: \"\",\n    address: \"\",\n    contact: \"\",\n    email: \"\",\n    history: \"\",\n    pictures: [],\n    location: {\n      type: \"Point\",\n      coordinates: [null, null],\n    },\n    messes: [],\n    confessions: [],\n  });\n\n  const fileSelectedHandler = (e) => {\n    const filesParsed = URL.createObjectURL(e.target.files[0]);\n    const filesSelected = e.target.files[0];\n\n    setFiles([...files, filesParsed]);\n    setFileSet([...fileSet, filesSelected]);\n    setFormData({ ...formData, pictures: [...fileSet, filesSelected] });\n  };\n\n  const removeBlock = (idx) => {\n    let arr = [...fileSet];\n    let newArr = [...files];\n    arr.splice(idx, 1);\n    newArr.splice(idx, 1);\n\n    setFileSet(arr);\n    setFiles(newArr);\n    setFormData({ ...formData, pictures: arr });\n  };\n\n  const renderFiles = () => {\n    return files.map((e, idx) => {\n      return (\n        <div className=\"picture-block\" key={idx}>\n          <img src={e} alt={idx} />\n          <div className=\"close-btn\" onClick={() => removeBlock(idx)}>\n            Close\n          </div>\n        </div>\n      );\n    });\n  };\n\n  const dayOptions = [\n    { id: 1, value: \"05:00\", label: \"05:00\" },\n    { id: 2, value: \"05:30\", label: \"05:30\" },\n    { id: 3, value: \"06:00\", label: \"06:00\" },\n    { id: 4, value: \"06:30\", label: \"06:30\" },\n    { id: 5, value: \"07:00\", label: \"07:00\" },\n    { id: 6, value: \"07:30\", label: \"07:30\" },\n    { id: 7, value: \"08:00\", label: \"08:00\" },\n    { id: 8, value: \"08:30\", label: \"08:30\" },\n    { id: 9, value: \"09:00\", label: \"09:00\" },\n    { id: 10, value: \"09:30\", label: \"09:30\" },\n    { id: 11, value: \"10:00\", label: \"10:00\" },\n    { id: 12, value: \"10:30\", label: \"10:30\" },\n    { id: 13, value: \"11:00\", label: \"11:00\" },\n    { id: 14, value: \"11:30\", label: \"11:30\" },\n    { id: 15, value: \"12:00\", label: \"12:00\" },\n    { id: 16, value: \"12:30\", label: \"12:30\" },\n    { id: 17, value: \"13:00\", label: \"13:00\" },\n    { id: 18, value: \"13:30\", label: \"13:30\" },\n    { id: 19, value: \"14:00\", label: \"14:00\" },\n    { id: 20, value: \"14:30\", label: \"14:30\" },\n    { id: 21, value: \"15:00\", label: \"15:00\" },\n    { id: 22, value: \"15:30\", label: \"15:30\" },\n    { id: 23, value: \"16:00\", label: \"16:00\" },\n    { id: 24, value: \"16:30\", label: \"16:30\" },\n    { id: 25, value: \"17:00\", label: \"17:00\" },\n    { id: 26, value: \"17:30\", label: \"17:30\" },\n    { id: 27, value: \"18:00\", label: \"18:00\" },\n    { id: 28, value: \"18:30\", label: \"18:30\" },\n    { id: 29, value: \"19:00\", label: \"19:00\" },\n    { id: 30, value: \"19:30\", label: \"19:30\" },\n    { id: 31, value: \"20:00\", label: \"20:00\" },\n    { id: 32, value: \"20:30\", label: \"20:30\" },\n    { id: 33, value: \"21:00\", label: \"21:00\" },\n    { id: 34, value: \"21:30\", label: \"21:30\" },\n    { id: 35, value: \"22:00\", label: \"22:00\" },\n    { id: 36, value: \"22:30\", label: \"22:30\" },\n    { id: 37, value: \"23:00\", label: \"23:00\" },\n    { id: 38, value: \"23:30\", label: \"23:30\" },\n  ];\n\n  function handleSelectMesses(data, idx) {\n    let transit = [];\n    data.map((e) => {\n      transit.push(e.value);\n    });\n\n    if (idx === 1) {\n      days[0].dayHour = transit;\n    }\n\n    if (idx === 2) {\n      days[1].dayHour = transit;\n    }\n    if (idx === 3) {\n      days[2].dayHour = transit;\n    }\n    if (idx === 4) {\n      days[3].dayHour = transit;\n    }\n    if (idx === 5) {\n      days[4].dayHour = transit;\n    }\n    if (idx === 6) {\n      days[5].dayHour = transit;\n    }\n    if (idx === 7) {\n      days[6].dayHour = transit;\n    }\n    setFormData({\n      ...formData,\n      messes: days,\n    });\n  }\n\n  function handleSelectConfessions(data, idx) {\n    let transit = [];\n    data.map((e) => {\n      transit.push(e.value);\n    });\n\n    if (idx === 1) {\n      daysConf[0].dayHour = transit;\n    }\n\n    if (idx === 2) {\n      daysConf[1].dayHour = transit;\n    }\n    if (idx === 3) {\n      daysConf[2].dayHour = transit;\n    }\n    if (idx === 4) {\n      daysConf[3].dayHour = transit;\n    }\n    if (idx === 5) {\n      daysConf[4].dayHour = transit;\n    }\n    if (idx === 6) {\n      daysConf[5].dayHour = transit;\n    }\n    if (idx === 7) {\n      daysConf[6].dayHour = transit;\n    }\n    setFormData({\n      ...formData,\n      confessions: daysConf,\n    });\n  }\n\n  const convertArray = (arr) => {\n    const result = [];\n    arr.forEach((el, idx) => {\n      const a = {\n        id: idx + 1,\n        value: el,\n        label: el,\n      };\n      result.push(a);\n    });\n    return result;\n  };\n\n  const editParoisse = async () => {\n    await dispatch(getParoisse(user._paroisse)).then(() => {\n      setFormData({\n        name: paroisse.name,\n        province: paroisse.province,\n        diocese: paroisse.diocese,\n        address: paroisse.address,\n        contact: paroisse.contact,\n        email: paroisse.email,\n        history: paroisse.history,\n        pictures: paroisse.pictures,\n        location: {\n          lat: paroisse.location?.coordinates[0],\n          lng: paroisse.location?.coordinates[1],\n        },\n        messes: paroisse.messes,\n        confessions: paroisse.confessions,\n      });\n\n      setFiles(paroisse.pictures);\n\n      if (!isEmpty(paroisse.messes)) {\n        setDays(paroisse.messes);\n\n        let arrIntermediate = [];\n        let arrConfIntermediate = [];\n\n        paroisse?.messes.forEach((messe) => {\n          const a = messe?.dayHour;\n          arrIntermediate.push(a);\n        });\n\n        paroisse?.confessions.forEach((confession) => {\n          const a = confession?.dayHour;\n          arrConfIntermediate.push(a);\n        });\n\n        setArrFinal([]);\n        setArrConfFinal([]);\n        setIsEdit(true);\n\n        let newArr = [];\n        let newArr2 = [];\n\n        arrIntermediate.forEach((e) => {\n          newArr.push(convertArray(e));\n        });\n\n        arrConfIntermediate.forEach((e) => {\n          newArr2.push(convertArray(e));\n        });\n\n        setArrFinal(newArr);\n        console.log(newArr);\n        setArrConfFinal(newArr2);\n      }\n    });\n  };\n\n  useEffect(() => {\n    editParoisse();\n  }, []);\n\n\n  const renderArrFinal = (arr, i) => {\n    if (!isEmpty(arr)) {\n      switch (arr[i].length) {\n        case 1:\n          return [arr[i][0]];\n\n        case 2:\n          return [arr[i][0], arr[i][1]];\n\n        case 3:\n          return [arr[i][0], arr[i][1], arr[i][2]];\n\n        case 4:\n          return [arr[i][0], arr[i][1], arr[i][2], arr[i][3]];\n\n        case 5:\n          return [arr[i][0], arr[i][1], arr[i][2], arr[i][3], arr[i][4]];\n\n        default:\n          break;\n      }\n    }\n  };\n\n  const submitForm = async (e) => {\n    setIsOk(true);\n    setFormData({\n      ...formData,\n      messes: days,\n      confessions: daysConf,\n    });\n    e.preventDefault();\n\n    if (formData.name) {\n      const data = new FormData();\n      data.append(\"name\", formData.name);\n      data.append(\"province\", formData.province);\n      data.append(\"diocese\", formData.diocese);\n      data.append(\"location[type]\", formData.location.type);\n      data.append(\"location[coordinates]\", formData.location.coordinates);\n\n      formData.pictures.forEach((file) => {\n        data.append(\"pictures[]\", file);\n      });\n      data.append(\"address\", formData.address);\n      data.append(\"contact\", formData.contact);\n      data.append(\"email\", formData.email);\n      data.append(\"history\", formData.history);\n      data.append(\"messes\", JSON.stringify(formData.messes));\n      data.append(\"confessions\", JSON.stringify(formData.confessions));\n\n      await dispatch(updateParoisse(paroisseEdit._id, data))\n        .then(() => {\n          setIsOk(false);\n          dispatch(getParoisse(user._paroisse));\n\n          cancelForm();\n          return true;\n        })\n        .catch((error) => {});\n    } else {\n      alert(\"Veuillez entrer le nom de la paroisse !\");\n    }\n  };\n\n  const cancelForm = () => {\n    setIsOk(false);\n    setFormData({\n      ...formData,\n      name: \"\",\n      province: \"\",\n      diocese: \"\",\n      address: \"\",\n      contact: \"\",\n      email: \"\",\n      history: \"\",\n      pictures: [],\n      location: {\n        lat: null,\n        lng: null,\n      },\n      messes: [],\n      confessions: [],\n    });\n\n    setFiles([]);\n  };\n\n  return (\n    <div className=\"mod-paroisse-container\">\n      <h1>Ma Paroisse</h1>\n\n      <div className=\"mod-paroisse-form\">\n        <form onSubmit={(e) => submitForm(e)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Nom</label>\n            <input\n              htmlFor=\"name\"\n              placeholder=\"Nom\"\n              value={formData.name}\n              onChange={(e) =>\n                setFormData({ ...formData, name: e.target.value })\n              }\n            />\n          </div>\n          <div className=\"form-group-group\">\n            <div className=\"form-group\">\n              <label htmlFor=\"province\">Province</label>\n              <input\n                htmlFor=\"province\"\n                placeholder=\"Province\"\n                value={formData.province}\n                onChange={(e) =>\n                  setFormData({ ...formData, province: e.target.value })\n                }\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"diocese\">Diocèse</label>\n              <input\n                htmlFor=\"diocese\"\n                placeholder=\"Diocèse\"\n                value={formData.diocese}\n                onChange={(e) =>\n                  setFormData({ ...formData, diocese: e.target.value })\n                }\n              />\n            </div>\n          </div>\n          <div className=\"form-group-group\">\n            <div className=\"form-group\">\n              <label htmlFor=\"address\">Adresse</label>\n              <input\n                htmlFor=\"address\"\n                placeholder=\"Adresse\"\n                value={formData.address}\n                onChange={(e) =>\n                  setFormData({ ...formData, address: e.target.value })\n                }\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"contact\">Contact</label>\n              <input\n                htmlFor=\"contact\"\n                placeholder=\"Contact\"\n                value={formData.contact}\n                onChange={(e) =>\n                  setFormData({ ...formData, contact: e.target.value })\n                }\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                htmlFor=\"email\"\n                placeholder=\"Email\"\n                value={formData.email}\n                onChange={(e) =>\n                  setFormData({ ...formData, email: e.target.value })\n                }\n              />{\" \"}\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"history\">Histoire</label>\n            <textarea\n              htmlFor=\"history\"\n              placeholder=\"Histoire\"\n              value={formData.history}\n              onChange={(e) =>\n                setFormData({ ...formData, history: e.target.value })\n              }\n            />\n          </div>\n\n          {/** Programmes */}\n          <div className=\"programmes\">\n            <div className=\"programmes-title\">\n              <h1>Programmes</h1>\n            </div>\n\n            <div className=\"programme\">\n              <div className=\"programme-title\">\n                <h3>Programme des messes</h3>\n              </div>\n              <div className=\"programme-content\">\n                {days.map((day, idx) => (\n                  <div className=\"day-block\">\n                    <h3 className=\"day-title\">{day.dayName}</h3>\n                    <Select\n                      className=\"select-element\"\n                      options={dayOptions}\n                      closeMenuOnSelect={false}\n                      components={animatedComponents}\n                      isMulti\n                      onChange={(e) => handleSelectMesses(e, day.id)}\n                      defaultValue={isEdit && renderArrFinal(arrFinal, idx)}\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"programme\">\n              <div className=\"programme-title\">\n                <h3>Programme des Confessions</h3>\n              </div>\n              <div className=\"programme-content\">\n                {days.map((day, idx) => (\n                  <div className=\"day-block\">\n                    <h3 className=\"day-title\">{day.dayName}</h3>\n                    <Select\n                      className=\"select-element\"\n                      options={dayOptions}\n                      closeMenuOnSelect={false}\n                      components={animatedComponents}\n                      isMulti\n                      onChange={(e) => handleSelectConfessions(e, day.id)}\n                      defaultValue={isEdit && renderArrFinal(arrConfFinal, idx)}\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/** Pictures */}\n          <div className=\"pictures\">\n            <div className=\"pictures-title\">\n              <h3>Pictures</h3>\n            </div>\n            <div className=\"pictures-content\">\n              <div className=\"pictures-blocks-container\">\n                {!isEmpty(files) && <>{renderFiles()}</>}\n\n                <div className=\"file-upload\">\n                  <input\n                    type=\"file\"\n                    name=\"file\"\n                    onChange={(e) => fileSelectedHandler(e)}\n                    accept=\".jpg, .jpeg, .png\"\n                  />\n                  <i className=\"fa fa-arrow-up\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/** Clergy */}\n\n          <div className=\"btn-group\">\n            <input type=\"submit\" value=\"Save\" />\n            {isOk === true && <i className=\"fa fa-spinner fa-spin\"></i>}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ParoisseBoard;\n","/Users/jocode/Documents/GitHub/anouanze/client/src/components/ModDashboard/Actus.jsx",["785","786","787"],[],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getActuByID } from \"../../actions/actus\";\nimport { isEmpty } from \"../utils/index\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { createActu, updateActu, deleteActu } from \"../../actions/actus\";\n\nconst Actus = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.user);\n  const actus = useSelector((state) => state.actus?.data);\n\n  !isEmpty(actus) &&\n    actus.sort((a, b) => {\n      return b.createdAt.localeCompare(a.createdAt);\n    });\n\n  useEffect(() => {\n    dispatch(getActuByID(user._paroisse));\n  }, [dispatch]);\n\n  // Données Formulaire\n  const [formData, setFormData] = useState({\n    poster: \"\",\n    title: \"\",\n    description: \"\",\n    address: \"\",\n  });\n\n  // Afficher / Cacher le formulaire\n  const [toggleForm, setToggleForm] = useState(false);\n\n  // Fichiers données\n  const [files, setFiles] = useState([]);\n  const [fileSet, setFileSet] = useState([]);\n\n  const [isOk, setIsOk] = useState(false);\n\n  const [isSetForm, setIsSetForm] = useState(false);\n\n  // Mode édition\n  const [isEdit, setIsEdit] = useState(false);\n  const [actuEdit, setActuEdit] = useState({});\n\n  const editActu = (idx) => {\n    setIsEdit(true);\n    const actuFound = actus.filter((e) => e._id === idx)[0];\n    setActuEdit(actuFound);\n    setToggleForm(true);\n\n    setFormData({\n      poster: actuFound.poster,\n      title: actuFound.title,\n      description: actuFound.description,\n      address: actuFound.address,\n    });\n    files.length = 0;\n    files.push(actuFound.poster);\n  };\n\n  const deleteActuAction = async (idx) => {\n    const actuFound = actus.filter((e) => e._id === idx)[0];\n    const id = actuFound._id;\n\n    var answer = window.confirm(\"Are you sure you want to delete this item?\");\n    if (answer) {\n      await dispatch(deleteActu(id))\n        .then(() => {\n          dispatch(getActuByID(user._paroisse));\n        })\n        .catch(() => {});\n    }\n  };\n\n  const submitForm = async (e) => {\n    setIsOk(true);\n    e.preventDefault();\n\n    const data = new FormData();\n    data.append(\"title\", formData.title);\n    data.append(\"description\", formData.description);\n    data.append(\"address\", formData.address);\n    data.append(\"poster\", formData.poster);\n    data.append(\"_paroisseId\", user._paroisse);\n\n    isEdit\n      ? await dispatch(updateActu(actuEdit._id, data))\n          .then(() => {\n            setIsOk(false);\n            dispatch(getActuByID(user._paroisse));\n\n            cancelForm();\n            setToggleForm(!toggleForm);\n            return true;\n          })\n          .catch((error) => {})\n      : await dispatch(createActu(data))\n          .then(() => {\n            setIsOk(false);\n            dispatch(getActuByID(user._paroisse));\n\n            cancelForm();\n            setToggleForm(!toggleForm);\n            return true;\n          })\n          .catch((error) => {});\n  };\n\n  const fileSelectedHandler = (e) => {\n    const filesParsed = URL.createObjectURL(e.target.files[0]);\n    const filesSelected = e.target.files[0];\n\n    setFiles([...files, filesParsed]);\n    setFileSet([...fileSet, filesSelected]);\n    setFormData({ ...formData, poster: filesSelected });\n  };\n\n  const removeBlock = (idx) => {\n    let arr = [...fileSet];\n    let newArr = [...files];\n    arr.splice(idx, 1);\n    newArr.splice(idx, 1);\n\n    setFileSet(arr);\n    setFiles(newArr);\n    setFormData({ ...formData, poster: arr });\n  };\n\n  const renderFiles = () => {\n    return files.map((e, idx) => {\n      return (\n        <div className=\"picture-block\" key={idx}>\n          <img src={e} alt={idx} />\n          <div className=\"close-btn\" onClick={() => removeBlock(idx)}>\n            Supprimer\n          </div>\n        </div>\n      );\n    });\n  };\n\n  const cancelForm = () => {\n    setFormData({\n      poster: \"\",\n      title: \"\",\n      description: \"\",\n      address: \"\",\n    });\n    setFiles([]);\n    setToggleForm(false);\n  };\n\n  return (\n    <>\n      {toggleForm && (\n        // Form elements\n        <div className=\"form-container\">\n          <div className=\"form-group-container\">\n            <div className=\"container-header\">\n              <h1>Fiche Actualité</h1>\n\n              <div\n                className=\"form-closer\"\n                onClick={() => setToggleForm(!toggleForm)}\n              >\n                Fermer\n              </div>\n            </div>\n\n            <div className=\"form-elements-container\">\n              <form onSubmit={(e) => submitForm(e)}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"title\">Titre</label>\n                  <input\n                    htmlFor=\"title\"\n                    placeholder=\"Titre\"\n                    value={formData.title}\n                    onChange={(e) =>\n                      setFormData({ ...formData, title: e.target.value })\n                    }\n                  />\n                </div>\n                <div className=\"form-group-group\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"address\">Lieu</label>\n                    <input\n                      htmlFor=\"address\"\n                      placeholder=\"Lieu\"\n                      value={formData.address}\n                      onChange={(e) =>\n                        setFormData({ ...formData, address: e.target.value })\n                      }\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"description\">Description</label>\n                  <textarea\n                    htmlFor=\"description\"\n                    placeholder=\"Description\"\n                    value={formData.description}\n                    onChange={(e) =>\n                      setFormData({ ...formData, description: e.target.value })\n                    }\n                  />\n                </div>\n\n                {/** Picture */}\n                <div className=\"pictures\">\n                  <div className=\"pictures-title\">\n                    <h3>Image</h3>\n                  </div>\n                  <div className=\"pictures-content\">\n                    <div className=\"pictures-blocks-container\">\n                      {!isEmpty(files) && <>{renderFiles()}</>}\n\n                      {files.length < 1 && (\n                        <div className=\"file-upload\">\n                          <input\n                            type=\"file\"\n                            name=\"file\"\n                            onChange={(e) => fileSelectedHandler(e)}\n                            accept=\".jpg, .jpeg, .png\"\n                          />\n                          <i className=\"fa fa-arrow-up\"></i>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"btn-group\">\n                  <input type=\"submit\" value=\"Save\" />\n                  {isOk === true && <i className=\"fa fa-spinner fa-spin\"></i>}\n\n                  <input\n                    type=\"reset\"\n                    value=\"Annuler\"\n                    onClick={() => cancelForm()}\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className=\"actus-board-container\">\n        <div className=\"header\">\n          <h1>Actualités</h1>\n        </div>\n\n        <div className=\"actus-container\">\n          <div className=\"premium-actus\">\n            <div\n              className=\"event-add-element\"\n              onClick={() => {\n                setToggleForm(!toggleForm);\n              }}\n            >\n              <img\n                src={process.env.PUBLIC_URL + \"/imgs/icons/add.png\"}\n                alt={\"add\"}\n              />\n            </div>\n            {!isEmpty(actus) &&\n              actus.map((element, i) => (\n                <div className=\"event-element\" key={i}>\n                  <div className=\"event-infos\">\n                    <div className=\"event-infos-image\">\n                      {element?.poster ? (\n                        <img\n                          src={process.env.PUBLIC_URL + element.poster}\n                          alt={element.name}\n                        />\n                      ) : (\n                        <img\n                          src={process.env.PUBLIC_URL + \"/imgs/icon.png\"}\n                          alt={element.name}\n                        />\n                      )}{\" \"}\n                    </div>\n                    <div className=\"event-infos-name\">\n                      <h4>{element.title}</h4>\n                      <h6>{element.organizer}</h6>\n                      <h6>{element.address}</h6>\n                    </div>\n                  </div>\n                  <div className=\"event-element-footer\">\n                    <NavLink\n                      to={`/actu/${element._id}`}\n                      className=\"footer-view\"\n                      target=\"_blank\"\n                    >\n                      <img\n                        src={process.env.PUBLIC_URL + \"/imgs/icons/eye.png\"}\n                        alt={\"eye\"}\n                      />\n                    </NavLink>{\" \"}\n                    <div\n                      className=\"footer-edit\"\n                      onClick={() => editActu(element._id)}\n                    >\n                      <img\n                        src={process.env.PUBLIC_URL + \"/imgs/icons/edit.png\"}\n                        alt={\"edit\"}\n                      />\n                    </div>\n                    <div\n                      className=\"footer-delete\"\n                      onClick={() => deleteActuAction(element._id)}\n                    >\n                      <img\n                        src={process.env.PUBLIC_URL + \"/imgs/icons/trash.png\"}\n                        alt={\"delete\"}\n                      />\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Actus;\n",{"ruleId":"788","severity":1,"message":"789","line":24,"column":6,"nodeType":"790","endLine":24,"endColumn":14,"suggestions":"791"},{"ruleId":"792","severity":1,"message":"793","line":5,"column":1,"nodeType":"794","endLine":18,"endColumn":2,"suppressions":"795"},{"ruleId":"792","severity":1,"message":"793","line":5,"column":1,"nodeType":"794","endLine":12,"endColumn":2,"suppressions":"796"},{"ruleId":"792","severity":1,"message":"793","line":6,"column":1,"nodeType":"794","endLine":28,"endColumn":2,"suppressions":"797"},{"ruleId":"792","severity":1,"message":"793","line":5,"column":1,"nodeType":"794","endLine":13,"endColumn":2,"suppressions":"798"},{"ruleId":"792","severity":1,"message":"793","line":5,"column":1,"nodeType":"794","endLine":13,"endColumn":2,"suppressions":"799"},{"ruleId":"792","severity":1,"message":"793","line":6,"column":1,"nodeType":"794","endLine":28,"endColumn":2,"suppressions":"800"},{"ruleId":"792","severity":1,"message":"793","line":10,"column":1,"nodeType":"794","endLine":30,"endColumn":2,"suppressions":"801"},{"ruleId":"792","severity":1,"message":"793","line":5,"column":1,"nodeType":"794","endLine":13,"endColumn":2,"suppressions":"802"},{"ruleId":"792","severity":1,"message":"793","line":6,"column":1,"nodeType":"794","endLine":14,"endColumn":2,"suppressions":"803"},{"ruleId":"792","severity":1,"message":"793","line":15,"column":1,"nodeType":"794","endLine":97,"endColumn":2,"suppressions":"804"},{"ruleId":"792","severity":1,"message":"793","line":6,"column":1,"nodeType":"794","endLine":14,"endColumn":2,"suppressions":"805"},{"ruleId":"792","severity":1,"message":"793","line":6,"column":1,"nodeType":"794","endLine":14,"endColumn":2,"suppressions":"806"},{"ruleId":"807","severity":1,"message":"808","line":12,"column":3,"nodeType":"809","messageId":"810","endLine":12,"endColumn":20},{"ruleId":"807","severity":1,"message":"811","line":61,"column":13,"nodeType":"809","messageId":"810","endLine":61,"endColumn":17},{"ruleId":"807","severity":1,"message":"811","line":68,"column":13,"nodeType":"809","messageId":"810","endLine":68,"endColumn":17},{"ruleId":"788","severity":1,"message":"812","line":26,"column":6,"nodeType":"790","endLine":26,"endColumn":8,"suggestions":"813"},{"ruleId":"807","severity":1,"message":"814","line":27,"column":10,"nodeType":"809","messageId":"810","endLine":27,"endColumn":24},{"ruleId":"807","severity":1,"message":"815","line":83,"column":9,"nodeType":"809","messageId":"810","endLine":83,"endColumn":29},{"ruleId":"788","severity":1,"message":"816","line":51,"column":14,"nodeType":"817","endLine":51,"endColumn":53,"suppressions":"818"},{"ruleId":"792","severity":1,"message":"819","line":2,"column":1,"nodeType":"794","endLine":86,"endColumn":3,"suppressions":"820"},{"ruleId":"807","severity":1,"message":"821","line":16,"column":11,"nodeType":"809","messageId":"810","endLine":16,"endColumn":18},{"ruleId":"807","severity":1,"message":"822","line":7,"column":3,"nodeType":"809","messageId":"810","endLine":7,"endColumn":14},{"ruleId":"807","severity":1,"message":"823","line":1,"column":8,"nodeType":"809","messageId":"810","endLine":1,"endColumn":13},{"ruleId":"807","severity":1,"message":"824","line":3,"column":10,"nodeType":"809","messageId":"810","endLine":3,"endColumn":21},{"ruleId":"825","severity":1,"message":"826","line":28,"column":21,"nodeType":"817","messageId":"827","endLine":28,"endColumn":23},{"ruleId":"825","severity":1,"message":"826","line":29,"column":21,"nodeType":"817","messageId":"827","endLine":29,"endColumn":23},{"ruleId":"825","severity":1,"message":"826","line":30,"column":21,"nodeType":"817","messageId":"827","endLine":30,"endColumn":23},{"ruleId":"807","severity":1,"message":"828","line":7,"column":10,"nodeType":"809","messageId":"810","endLine":7,"endColumn":18},{"ruleId":"807","severity":1,"message":"829","line":7,"column":20,"nodeType":"809","messageId":"810","endLine":7,"endColumn":31},{"ruleId":"788","severity":1,"message":"789","line":22,"column":6,"nodeType":"790","endLine":22,"endColumn":14,"suggestions":"830"},{"ruleId":"807","severity":1,"message":"823","line":1,"column":8,"nodeType":"809","messageId":"810","endLine":1,"endColumn":13},{"ruleId":"792","severity":1,"message":"793","line":5,"column":1,"nodeType":"794","endLine":18,"endColumn":2,"suppressions":"831"},{"ruleId":"792","severity":1,"message":"793","line":6,"column":1,"nodeType":"794","endLine":28,"endColumn":2,"suppressions":"832"},{"ruleId":"792","severity":1,"message":"793","line":5,"column":1,"nodeType":"794","endLine":13,"endColumn":2,"suppressions":"833"},{"ruleId":"792","severity":1,"message":"793","line":5,"column":1,"nodeType":"794","endLine":13,"endColumn":2,"suppressions":"834"},{"ruleId":"792","severity":1,"message":"793","line":10,"column":1,"nodeType":"794","endLine":30,"endColumn":2,"suppressions":"835"},{"ruleId":"792","severity":1,"message":"793","line":5,"column":1,"nodeType":"794","endLine":13,"endColumn":2,"suppressions":"836"},{"ruleId":"792","severity":1,"message":"793","line":6,"column":1,"nodeType":"794","endLine":28,"endColumn":2,"suppressions":"837"},{"ruleId":"792","severity":1,"message":"793","line":15,"column":1,"nodeType":"794","endLine":97,"endColumn":2,"suppressions":"838"},{"ruleId":"792","severity":1,"message":"793","line":6,"column":1,"nodeType":"794","endLine":14,"endColumn":2,"suppressions":"839"},{"ruleId":"792","severity":1,"message":"793","line":6,"column":1,"nodeType":"794","endLine":14,"endColumn":2,"suppressions":"840"},{"ruleId":"792","severity":1,"message":"793","line":6,"column":1,"nodeType":"794","endLine":14,"endColumn":2,"suppressions":"841"},{"ruleId":"792","severity":1,"message":"793","line":5,"column":1,"nodeType":"794","endLine":12,"endColumn":2,"suppressions":"842"},{"ruleId":"807","severity":1,"message":"843","line":1,"column":17,"nodeType":"809","messageId":"810","endLine":1,"endColumn":25},{"ruleId":"807","severity":1,"message":"844","line":8,"column":8,"nodeType":"809","messageId":"810","endLine":8,"endColumn":18},{"ruleId":"807","severity":1,"message":"845","line":9,"column":8,"nodeType":"809","messageId":"810","endLine":9,"endColumn":20},{"ruleId":"807","severity":1,"message":"846","line":15,"column":10,"nodeType":"809","messageId":"810","endLine":15,"endColumn":16},{"ruleId":"807","severity":1,"message":"847","line":15,"column":18,"nodeType":"809","messageId":"810","endLine":15,"endColumn":29},{"ruleId":"807","severity":1,"message":"848","line":16,"column":10,"nodeType":"809","messageId":"810","endLine":16,"endColumn":20},{"ruleId":"807","severity":1,"message":"849","line":16,"column":22,"nodeType":"809","messageId":"810","endLine":16,"endColumn":32},{"ruleId":"807","severity":1,"message":"850","line":27,"column":10,"nodeType":"809","messageId":"810","endLine":27,"endColumn":18},{"ruleId":"807","severity":1,"message":"851","line":27,"column":20,"nodeType":"809","messageId":"810","endLine":27,"endColumn":31},{"ruleId":"807","severity":1,"message":"824","line":3,"column":10,"nodeType":"809","messageId":"810","endLine":3,"endColumn":21},{"ruleId":"825","severity":1,"message":"826","line":28,"column":21,"nodeType":"817","messageId":"827","endLine":28,"endColumn":23},{"ruleId":"825","severity":1,"message":"826","line":29,"column":21,"nodeType":"817","messageId":"827","endLine":29,"endColumn":23},{"ruleId":"825","severity":1,"message":"826","line":30,"column":21,"nodeType":"817","messageId":"827","endLine":30,"endColumn":23},{"ruleId":"807","severity":1,"message":"852","line":4,"column":10,"nodeType":"809","messageId":"810","endLine":4,"endColumn":17},{"ruleId":"807","severity":1,"message":"853","line":7,"column":8,"nodeType":"809","messageId":"810","endLine":7,"endColumn":14},{"ruleId":"807","severity":1,"message":"854","line":26,"column":9,"nodeType":"809","messageId":"810","endLine":26,"endColumn":15},{"ruleId":"807","severity":1,"message":"855","line":37,"column":9,"nodeType":"809","messageId":"810","endLine":37,"endColumn":21},{"ruleId":"856","severity":1,"message":"857","line":82,"column":23,"nodeType":"858","messageId":"859","endLine":86,"endColumn":24,"fix":"860"},{"ruleId":"788","severity":1,"message":"861","line":39,"column":6,"nodeType":"790","endLine":39,"endColumn":27,"suggestions":"862"},{"ruleId":"863","severity":1,"message":"864","line":13,"column":5,"nodeType":"865","messageId":"866","endLine":15,"endColumn":6},{"ruleId":"807","severity":1,"message":"867","line":1,"column":32,"nodeType":"809","messageId":"810","endLine":1,"endColumn":41},{"ruleId":"807","severity":1,"message":"824","line":3,"column":10,"nodeType":"809","messageId":"810","endLine":3,"endColumn":21},{"ruleId":"825","severity":1,"message":"826","line":28,"column":21,"nodeType":"817","messageId":"827","endLine":28,"endColumn":23},{"ruleId":"825","severity":1,"message":"826","line":29,"column":21,"nodeType":"817","messageId":"827","endLine":29,"endColumn":23},{"ruleId":"825","severity":1,"message":"826","line":30,"column":21,"nodeType":"817","messageId":"827","endLine":30,"endColumn":23},{"ruleId":"807","severity":1,"message":"868","line":6,"column":3,"nodeType":"809","messageId":"810","endLine":6,"endColumn":17},{"ruleId":"807","severity":1,"message":"822","line":7,"column":3,"nodeType":"809","messageId":"810","endLine":7,"endColumn":14},{"ruleId":"807","severity":1,"message":"811","line":59,"column":13,"nodeType":"809","messageId":"810","endLine":59,"endColumn":17},{"ruleId":"807","severity":1,"message":"811","line":66,"column":13,"nodeType":"809","messageId":"810","endLine":66,"endColumn":17},{"ruleId":"807","severity":1,"message":"867","line":1,"column":27,"nodeType":"809","messageId":"810","endLine":1,"endColumn":36},{"ruleId":"788","severity":1,"message":"816","line":42,"column":14,"nodeType":"817","endLine":42,"endColumn":53,"suppressions":"869"},{"ruleId":"788","severity":1,"message":"789","line":28,"column":6,"nodeType":"790","endLine":28,"endColumn":8,"suggestions":"870"},{"ruleId":"807","severity":1,"message":"828","line":7,"column":10,"nodeType":"809","messageId":"810","endLine":7,"endColumn":18},{"ruleId":"807","severity":1,"message":"829","line":7,"column":20,"nodeType":"809","messageId":"810","endLine":7,"endColumn":31},{"ruleId":"807","severity":1,"message":"871","line":44,"column":22,"nodeType":"809","messageId":"810","endLine":44,"endColumn":35},{"ruleId":"872","severity":1,"message":"873","line":191,"column":7,"nodeType":"874","messageId":"875","endLine":197,"endColumn":8},{"ruleId":"872","severity":1,"message":"873","line":207,"column":7,"nodeType":"874","messageId":"875","endLine":225,"endColumn":8},{"ruleId":"788","severity":1,"message":"876","line":251,"column":6,"nodeType":"790","endLine":251,"endColumn":16,"suggestions":"877"},{"ruleId":"878","severity":1,"message":"879","line":326,"column":9,"nodeType":"880","messageId":"881","endLine":326,"endColumn":15},{"ruleId":"807","severity":1,"message":"882","line":68,"column":20,"nodeType":"809","messageId":"810","endLine":68,"endColumn":31},{"ruleId":"807","severity":1,"message":"883","line":140,"column":10,"nodeType":"809","messageId":"810","endLine":140,"endColumn":14},{"ruleId":"807","severity":1,"message":"884","line":140,"column":16,"nodeType":"809","messageId":"810","endLine":140,"endColumn":23},{"ruleId":"885","severity":1,"message":"886","line":257,"column":18,"nodeType":"887","messageId":"888","endLine":257,"endColumn":20},{"ruleId":"885","severity":1,"message":"886","line":291,"column":18,"nodeType":"887","messageId":"888","endLine":291,"endColumn":20},{"ruleId":"788","severity":1,"message":"889","line":47,"column":6,"nodeType":"790","endLine":47,"endColumn":16,"suggestions":"890"},{"ruleId":"792","severity":1,"message":"819","line":2,"column":1,"nodeType":"794","endLine":86,"endColumn":3,"suppressions":"891"},{"ruleId":"807","severity":1,"message":"821","line":19,"column":11,"nodeType":"809","messageId":"810","endLine":19,"endColumn":18},{"ruleId":"807","severity":1,"message":"892","line":10,"column":21,"nodeType":"809","messageId":"810","endLine":10,"endColumn":33},{"ruleId":"893","severity":1,"message":"894","line":145,"column":31,"nodeType":"858","endLine":145,"endColumn":81},{"ruleId":"807","severity":1,"message":"852","line":2,"column":21,"nodeType":"809","messageId":"810","endLine":2,"endColumn":28},{"ruleId":"807","severity":1,"message":"895","line":5,"column":10,"nodeType":"809","messageId":"810","endLine":5,"endColumn":17},{"ruleId":"807","severity":1,"message":"896","line":21,"column":9,"nodeType":"809","messageId":"810","endLine":21,"endColumn":19},{"ruleId":"807","severity":1,"message":"855","line":25,"column":9,"nodeType":"809","messageId":"810","endLine":25,"endColumn":21},{"ruleId":"792","severity":1,"message":"793","line":6,"column":1,"nodeType":"794","endLine":25,"endColumn":2,"suppressions":"897"},{"ruleId":"792","severity":1,"message":"793","line":5,"column":1,"nodeType":"794","endLine":13,"endColumn":2,"suppressions":"898"},{"ruleId":"807","severity":1,"message":"852","line":8,"column":10,"nodeType":"809","messageId":"810","endLine":8,"endColumn":17},{"ruleId":"807","severity":1,"message":"899","line":32,"column":10,"nodeType":"809","messageId":"810","endLine":32,"endColumn":17},{"ruleId":"788","severity":1,"message":"900","line":43,"column":18,"nodeType":"901","endLine":43,"endColumn":20},{"ruleId":"807","severity":1,"message":"902","line":7,"column":9,"nodeType":"809","messageId":"810","endLine":7,"endColumn":17},{"ruleId":"807","severity":1,"message":"867","line":2,"column":10,"nodeType":"809","messageId":"810","endLine":2,"endColumn":19},{"ruleId":"792","severity":1,"message":"793","line":5,"column":1,"nodeType":"794","endLine":13,"endColumn":2,"suppressions":"903"},{"ruleId":"792","severity":1,"message":"793","line":5,"column":1,"nodeType":"794","endLine":13,"endColumn":2,"suppressions":"904"},{"ruleId":"807","severity":1,"message":"905","line":5,"column":23,"nodeType":"809","messageId":"810","endLine":5,"endColumn":34},{"ruleId":"788","severity":1,"message":"789","line":14,"column":6,"nodeType":"790","endLine":14,"endColumn":8,"suggestions":"906"},{"ruleId":"807","severity":1,"message":"867","line":1,"column":17,"nodeType":"809","messageId":"810","endLine":1,"endColumn":26},{"ruleId":"807","severity":1,"message":"843","line":1,"column":17,"nodeType":"809","messageId":"810","endLine":1,"endColumn":25},{"ruleId":"788","severity":1,"message":"907","line":13,"column":6,"nodeType":"790","endLine":13,"endColumn":16,"suggestions":"908"},{"ruleId":"807","severity":1,"message":"828","line":7,"column":10,"nodeType":"809","messageId":"810","endLine":7,"endColumn":18},{"ruleId":"807","severity":1,"message":"829","line":7,"column":20,"nodeType":"809","messageId":"810","endLine":7,"endColumn":31},{"ruleId":"807","severity":1,"message":"852","line":6,"column":10,"nodeType":"809","messageId":"810","endLine":6,"endColumn":17},{"ruleId":"807","severity":1,"message":"882","line":57,"column":20,"nodeType":"809","messageId":"810","endLine":57,"endColumn":31},{"ruleId":"807","severity":1,"message":"909","line":103,"column":24,"nodeType":"809","messageId":"810","endLine":103,"endColumn":39},{"ruleId":"885","severity":1,"message":"886","line":204,"column":18,"nodeType":"887","messageId":"888","endLine":204,"endColumn":20},{"ruleId":"885","severity":1,"message":"886","line":238,"column":18,"nodeType":"887","messageId":"888","endLine":238,"endColumn":20},{"ruleId":"788","severity":1,"message":"910","line":344,"column":6,"nodeType":"790","endLine":344,"endColumn":8,"suggestions":"911"},{"ruleId":"788","severity":1,"message":"907","line":21,"column":6,"nodeType":"790","endLine":21,"endColumn":16,"suggestions":"912"},{"ruleId":"807","severity":1,"message":"913","line":40,"column":10,"nodeType":"809","messageId":"810","endLine":40,"endColumn":19},{"ruleId":"807","severity":1,"message":"914","line":40,"column":21,"nodeType":"809","messageId":"810","endLine":40,"endColumn":33},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["915"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["916"],["917"],["918"],["919"],["920"],["921"],["922"],["923"],["924"],["925"],["926"],["927"],"no-unused-vars","'REMOVE_CONFESSION' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user?.result'. Either include it or remove the dependency array.",["928"],"'paroisseCoords' is assigned a value but never used.","'handleParoisseCoords' is assigned a value but never used.","Assignments to the 'coords' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression",["929"],"Assign array to a variable before exporting as module default",["930"],"'message' is assigned a value but never used.","'CREATE_ACTU' is defined but never used.","'React' is defined but never used.","'useDispatch' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'isActive' is assigned a value but never used.","'setIsActive' is assigned a value but never used.",["931"],["932"],["933"],["934"],["935"],["936"],["937"],["938"],["939"],["940"],["941"],["942"],["943"],"'useState' is defined but never used.","'MaParoisse' is defined but never used.","'ChooseButton' is defined but never used.","'Swiper' is defined but never used.","'SwiperSlide' is defined but never used.","'Navigation' is defined but never used.","'Pagination' is defined but never used.","'priestID' is assigned a value but never used.","'setPriestID' is assigned a value but never used.","'NavLink' is defined but never used.","'Footer' is defined but never used.","'newArr' is assigned a value but never used.","'minuteParser' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"944","text":"945"},"React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["946"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useEffect' is defined but never used.","'GET_ACTU_BY_ID' is defined but never used.",["947"],["948"],"'setCountHours' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'isSetForm'. Either include it or remove the dependency array.",["949"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'setDaysConf' is assigned a value but never used.","'vals' is assigned a value but never used.","'setVals' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'uid' and 'user?._paroisse'. Either include them or remove the dependency array.",["950"],["951"],"'setLoadEvent' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'isEmpty' is defined but never used.","'hourParser' is assigned a value but never used.",["952"],["953"],"'isValid' is assigned a value but never used.","Assignments to the 'paroisse' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","'location' is assigned a value but never used.",["954"],["955"],"'useSelector' is defined but never used.",["956"],"React Hook useEffect has a missing dependency: 'user._paroisse'. Either include it or remove the dependency array.",["957"],"'setParoisseEdit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'editParoisse'. Either include it or remove the dependency array.",["958"],["959"],"'isSetForm' is assigned a value but never used.","'setIsSetForm' is assigned a value but never used.",{"desc":"960","fix":"961"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"desc":"964","fix":"965"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"desc":"960","fix":"966"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},[2385,2385]," rel=\"noreferrer\"",{"desc":"967","fix":"968"},{"kind":"962","justification":"963"},{"desc":"969","fix":"970"},{"desc":"971","fix":"972"},{"desc":"973","fix":"974"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"kind":"962","justification":"963"},{"desc":"969","fix":"975"},{"desc":"976","fix":"977"},{"desc":"978","fix":"979"},{"desc":"976","fix":"980"},"Update the dependencies array to be: [dispatch, userId]",{"range":"981","text":"982"},"directive","","Update the dependencies array to be: [user?.result]",{"range":"983","text":"984"},{"range":"985","text":"982"},"Update the dependencies array to be: [count, dispatch, isLoading]",{"range":"986","text":"987"},"Update the dependencies array to be: [dispatch]",{"range":"988","text":"989"},"Update the dependencies array to be: [formData, isSetForm]",{"range":"990","text":"991"},"Update the dependencies array to be: [paroisse, uid, user?._paroisse]",{"range":"992","text":"993"},{"range":"994","text":"989"},"Update the dependencies array to be: [dispatch, user._paroisse]",{"range":"995","text":"996"},"Update the dependencies array to be: [editParoisse]",{"range":"997","text":"998"},{"range":"999","text":"996"},[710,718],"[dispatch, userId]",[628,630],"[user?.result]",[652,660],[1235,1256],"[count, dispatch, isLoading]",[732,734],"[dispatch]",[6407,6417],"[formData, isSetForm]",[1385,1395],"[paroisse, uid, user?._paroisse]",[418,420],[428,438],"[dispatch, user._paroisse]",[8274,8276],"[editParoisse]",[671,681]]