{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from './context';\nimport TreeChildren from './treeChildren';\nimport TreeContainerUl from './styled/treeContainerUl';\nimport getNode from './helpers/getNode';\nimport useKeyNavigation from './hooks/useKeyNavigation';\nimport useTreeNodesAsPlainList from './hooks/useTreeNodesAsPlainList';\nexport default function Tree(props) {\n  var data = props.data,\n      onNodeExpand = props.onNodeExpand,\n      onNodeCheck = props.onNodeCheck,\n      onNodeSelect = props.onNodeSelect,\n      selectedNode = props.selectedNode,\n      className = props.className,\n      style = props.style,\n      id = props.id,\n      ariaLabel = props.ariaLabel,\n      ariaLabelledBy = props.ariaLabelledBy;\n  var visibleNodes = useTreeNodesAsPlainList(data);\n\n  var _useKeyNavigation = useKeyNavigation({\n    visibleNodes: visibleNodes,\n    selectedNode: selectedNode,\n    onNodeSelect: onNodeSelect,\n    onNodeExpand: onNodeExpand\n  }),\n      autoFocus = _useKeyNavigation.autoFocus,\n      focusedNode = _useKeyNavigation.focusedNode,\n      setFocusedNode = _useKeyNavigation.setFocusedNode,\n      clearFocusedNode = _useKeyNavigation.clearFocusedNode,\n      keyDownHandler = _useKeyNavigation.keyDownHandler;\n\n  var treeData = Array.isArray(data) ? data : [];\n  return React.createElement(Provider, {\n    value: {\n      autoFocus: autoFocus,\n      focusedNode: focusedNode,\n      onPrivateFocusNode: setFocusedNode,\n      onPrivateBlurNode: clearFocusedNode,\n      onPrivateKeyDown: keyDownHandler\n    }\n  }, React.createElement(TreeContainerUl, {\n    className: className,\n    style: style,\n    id: id,\n    role: \"tree\",\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-label\": ariaLabel\n  }, React.createElement(TreeChildren, {\n    data: treeData,\n    onNodeExpand: onNodeExpand,\n    onNodeCheck: onNodeCheck,\n    nodePath: [],\n    selectedNode: selectedNode,\n    onNodeSelect: onNodeSelect\n  })));\n}\nTree.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.node,\n    icon: PropTypes.node,\n    isExpanded: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    isChecked: PropTypes.oneOf([true, false, 'indeterminate']),\n    children: PropTypes.array\n  })),\n  onNodeExpand: PropTypes.func,\n  onNodeCheck: PropTypes.func,\n  onNodeSelect: PropTypes.func,\n  selectedNode: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  id: PropTypes.string,\n  ariaLabelledBy: PropTypes.string,\n  ariaLabel: PropTypes.string\n};\nTree.defaultProps = {\n  data: [],\n  onNodeExpand: function onNodeExpand() {},\n  onNodeCheck: function onNodeCheck() {},\n  onNodeSelect: function onNodeSelect() {},\n  selectedNode: undefined,\n  className: undefined,\n  style: undefined,\n  id: undefined,\n  ariaLabelledBy: undefined,\n  ariaLabel: undefined\n};\nTree.getNode = getNode;","map":{"version":3,"names":["React","PropTypes","Provider","TreeChildren","TreeContainerUl","getNode","useKeyNavigation","useTreeNodesAsPlainList","Tree","props","data","onNodeExpand","onNodeCheck","onNodeSelect","selectedNode","className","style","id","ariaLabel","ariaLabelledBy","visibleNodes","_useKeyNavigation","autoFocus","focusedNode","setFocusedNode","clearFocusedNode","keyDownHandler","treeData","Array","isArray","createElement","value","onPrivateFocusNode","onPrivateBlurNode","onPrivateKeyDown","role","nodePath","propTypes","arrayOf","shape","label","node","icon","isExpanded","bool","isLoading","isChecked","oneOf","children","array","func","string","object","defaultProps","undefined"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/Tree/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from './context';\nimport TreeChildren from './treeChildren';\nimport TreeContainerUl from './styled/treeContainerUl';\nimport getNode from './helpers/getNode';\nimport useKeyNavigation from './hooks/useKeyNavigation';\nimport useTreeNodesAsPlainList from './hooks/useTreeNodesAsPlainList';\nexport default function Tree(props) {\n  var data = props.data,\n      onNodeExpand = props.onNodeExpand,\n      onNodeCheck = props.onNodeCheck,\n      onNodeSelect = props.onNodeSelect,\n      selectedNode = props.selectedNode,\n      className = props.className,\n      style = props.style,\n      id = props.id,\n      ariaLabel = props.ariaLabel,\n      ariaLabelledBy = props.ariaLabelledBy;\n  var visibleNodes = useTreeNodesAsPlainList(data);\n\n  var _useKeyNavigation = useKeyNavigation({\n    visibleNodes: visibleNodes,\n    selectedNode: selectedNode,\n    onNodeSelect: onNodeSelect,\n    onNodeExpand: onNodeExpand\n  }),\n      autoFocus = _useKeyNavigation.autoFocus,\n      focusedNode = _useKeyNavigation.focusedNode,\n      setFocusedNode = _useKeyNavigation.setFocusedNode,\n      clearFocusedNode = _useKeyNavigation.clearFocusedNode,\n      keyDownHandler = _useKeyNavigation.keyDownHandler;\n\n  var treeData = Array.isArray(data) ? data : [];\n  return React.createElement(Provider, {\n    value: {\n      autoFocus: autoFocus,\n      focusedNode: focusedNode,\n      onPrivateFocusNode: setFocusedNode,\n      onPrivateBlurNode: clearFocusedNode,\n      onPrivateKeyDown: keyDownHandler\n    }\n  }, React.createElement(TreeContainerUl, {\n    className: className,\n    style: style,\n    id: id,\n    role: \"tree\",\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-label\": ariaLabel\n  }, React.createElement(TreeChildren, {\n    data: treeData,\n    onNodeExpand: onNodeExpand,\n    onNodeCheck: onNodeCheck,\n    nodePath: [],\n    selectedNode: selectedNode,\n    onNodeSelect: onNodeSelect\n  })));\n}\nTree.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.node,\n    icon: PropTypes.node,\n    isExpanded: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    isChecked: PropTypes.oneOf([true, false, 'indeterminate']),\n    children: PropTypes.array\n  })),\n  onNodeExpand: PropTypes.func,\n  onNodeCheck: PropTypes.func,\n  onNodeSelect: PropTypes.func,\n  selectedNode: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  id: PropTypes.string,\n  ariaLabelledBy: PropTypes.string,\n  ariaLabel: PropTypes.string\n};\nTree.defaultProps = {\n  data: [],\n  onNodeExpand: function onNodeExpand() {},\n  onNodeCheck: function onNodeCheck() {},\n  onNodeSelect: function onNodeSelect() {},\n  selectedNode: undefined,\n  className: undefined,\n  style: undefined,\n  id: undefined,\n  ariaLabelledBy: undefined,\n  ariaLabel: undefined\n};\nTree.getNode = getNode;"],"mappings":"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"},"metadata":{},"sourceType":"module"}