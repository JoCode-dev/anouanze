{"ast":null,"code":"import _toArray from \"@babel/runtime/helpers/toArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from './context';\nimport RenderIf from '../RenderIf';\nimport { LEFT_KEY, RIGHT_KEY } from '../../libs/constants';\nimport { getChildTabNodes, insertChildOrderly, getTabIndexFromName, getChildrenTotalWidth, getChildrenTotalWidthUpToClickedTab, isNotSameChildren, getUpdatedTabsetChildren, getRightButtonDisabledState, getLeftButtonDisabledState } from './utils';\nimport RightThinChevron from './rightThinChevron';\nimport LeftThinChevron from './leftThinChevron';\nimport ResizeSensor from '../../libs/ResizeSensor';\nimport debounce from '../../libs/debounce';\nimport StyledContainer from './styled/container';\nimport StyledObserver from './styled/observer';\nimport StyledTabset from './styled/tabset';\nimport StyledInnerContainer from './styled/innerContainer';\nimport StyledButtonGroup from './styled/buttonGroup';\nimport StyledButtonIcon from './styled/buttonIcon';\nvar RIGHT_SIDE = 1;\nvar LEFT_SIDE = -1;\n\nvar Tabset = function (_Component) {\n  _inherits(Tabset, _Component);\n\n  var _super = _createSuper(Tabset);\n\n  function Tabset(props) {\n    var _this$keyHandlerMap;\n\n    var _this;\n\n    _classCallCheck(this, Tabset);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      tabsetChildren: [],\n      areButtonsVisible: false\n    };\n    _this.isFirstTime = true;\n    _this.tabsetRef = React.createRef();\n    _this.resizeTarget = React.createRef();\n    _this.registerTab = _this.registerTab.bind(_assertThisInitialized(_this));\n    _this.unRegisterTab = _this.unRegisterTab.bind(_assertThisInitialized(_this));\n    _this.updateTab = _this.updateTab.bind(_assertThisInitialized(_this));\n    _this.handleKeyPressed = _this.handleKeyPressed.bind(_assertThisInitialized(_this));\n    _this.handleLeftButtonClick = _this.handleLeftButtonClick.bind(_assertThisInitialized(_this));\n    _this.handleRightButtonClick = _this.handleRightButtonClick.bind(_assertThisInitialized(_this));\n    _this.updateButtonsVisibility = _this.updateButtonsVisibility.bind(_assertThisInitialized(_this));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_this));\n    _this.keyHandlerMap = (_this$keyHandlerMap = {}, _defineProperty(_this$keyHandlerMap, RIGHT_KEY, function () {\n      return _this.selectTab(RIGHT_SIDE);\n    }), _defineProperty(_this$keyHandlerMap, LEFT_KEY, function () {\n      return _this.selectTab(LEFT_SIDE);\n    }), _this$keyHandlerMap);\n    return _this;\n  }\n\n  _createClass(Tabset, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.widthObserver = new ResizeSensor(this.resizeTarget.current, debounce(this.updateButtonsVisibility, 100));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProp) {\n      var children = this.props.children;\n      var tabsetChildren = this.state.tabsetChildren;\n      var isFirstTime = this.isFirstTime;\n      var areAllChildrenRegistered = children.length === tabsetChildren.length;\n\n      if (isNotSameChildren(children, prevProp.children)) {\n        this.updateButtonsVisibility();\n      }\n\n      if (areAllChildrenRegistered && isFirstTime) {\n        this.updateButtonsVisibility();\n        this.isFirstTime = false;\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.widthObserver.detach(this.resizeTarget.current);\n    }\n  }, {\n    key: \"setAsSelectedTab\",\n    value: function setAsSelectedTab(tabIndex) {\n      var tabsetChildren = this.state.tabsetChildren;\n      tabsetChildren[tabIndex].ref.click();\n      tabsetChildren[tabIndex].ref.focus();\n    }\n  }, {\n    key: \"updateButtonsVisibility\",\n    value: function updateButtonsVisibility() {\n      var _this$state = this.state,\n          tabsetChildren = _this$state.tabsetChildren,\n          areButtonsVisible = _this$state.areButtonsVisible,\n          variant = _this$state.variant;\n      var tabset = this.tabsetRef.current;\n      var resizeWidth = this.resizeTarget.current.offsetWidth;\n      var scrollWidth = tabset.scrollWidth,\n          scrollLeft = tabset.scrollLeft,\n          tabsetWidth = tabset.offsetWidth;\n      var childrenTotalWidth = getChildrenTotalWidth(tabsetChildren);\n      var buttonWidth = areButtonsVisible ? 94 : 0;\n      var padding = resizeWidth - tabsetWidth - buttonWidth;\n      var delta = variant === 'line' ? 0 : 1;\n      var showButtons = childrenTotalWidth > resizeWidth - padding + delta;\n      this.screenWidth = window.innerWidth;\n      this.scrollLeft = scrollLeft;\n      this.maxScroll = scrollWidth - tabsetWidth;\n      this.tabsetWidth = tabsetWidth;\n      this.setState({\n        areButtonsVisible: showButtons\n      });\n    }\n  }, {\n    key: \"handleKeyPressed\",\n    value: function handleKeyPressed(event) {\n      if (this.keyHandlerMap[event.keyCode]) {\n        return this.keyHandlerMap[event.keyCode]();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"selectTab\",\n    value: function selectTab(side) {\n      var activeTabName = this.props.activeTabName;\n      var tabsetChildren = this.state.tabsetChildren;\n      var activeTabIndex = getTabIndexFromName(tabsetChildren, activeTabName);\n\n      if (activeTabIndex === tabsetChildren.length - 1 && side === RIGHT_SIDE) {\n        this.setAsSelectedTab(0);\n      } else if (activeTabIndex === 0 && side === LEFT_SIDE) {\n        this.setAsSelectedTab(tabsetChildren.length - 1);\n      } else {\n        this.setAsSelectedTab(activeTabIndex + side);\n      }\n    }\n  }, {\n    key: \"isLeftButtonDisabled\",\n    value: function isLeftButtonDisabled() {\n      var activeTabName = this.props.activeTabName;\n      var tabsetChildren = this.state.tabsetChildren;\n      var screenWidth = this.screenWidth,\n          scrollLeft = this.scrollLeft;\n      return getLeftButtonDisabledState({\n        activeTabName: activeTabName,\n        tabsetChildren: tabsetChildren,\n        screenWidth: screenWidth,\n        scrollLeft: scrollLeft\n      });\n    }\n  }, {\n    key: \"isRightButtonDisabled\",\n    value: function isRightButtonDisabled() {\n      var activeTabName = this.props.activeTabName;\n      var tabsetChildren = this.state.tabsetChildren;\n      var screenWidth = this.screenWidth,\n          scrollLeft = this.scrollLeft,\n          maxScroll = this.maxScroll;\n      return getRightButtonDisabledState({\n        activeTabName: activeTabName,\n        tabsetChildren: tabsetChildren,\n        screenWidth: screenWidth,\n        scrollLeft: scrollLeft,\n        maxScroll: maxScroll\n      });\n    }\n  }, {\n    key: \"handleRightButtonClick\",\n    value: function handleRightButtonClick() {\n      var screenWidth = this.screenWidth,\n          tabsetWidth = this.tabsetWidth,\n          scrollLeft = this.scrollLeft;\n\n      if (screenWidth > 600) {\n        return this.tabsetRef.current.scrollTo(scrollLeft + tabsetWidth, 0);\n      }\n\n      return this.selectTab(RIGHT_SIDE);\n    }\n  }, {\n    key: \"handleLeftButtonClick\",\n    value: function handleLeftButtonClick() {\n      var screenWidth = this.screenWidth,\n          tabsetWidth = this.tabsetWidth,\n          scrollLeft = this.scrollLeft;\n\n      if (screenWidth > 600) {\n        return this.tabsetRef.current.scrollTo(scrollLeft - tabsetWidth, 0);\n      }\n\n      return this.selectTab(LEFT_SIDE);\n    }\n  }, {\n    key: \"updateTab\",\n    value: function updateTab(tab, nameToUpdate) {\n      var tabsetChildren = this.state.tabsetChildren;\n      var newTabsetChildren = getUpdatedTabsetChildren(tabsetChildren, tab, nameToUpdate);\n      this.setState({\n        tabsetChildren: newTabsetChildren\n      });\n    }\n  }, {\n    key: \"registerTab\",\n    value: function registerTab(tab) {\n      var tabsetChildren = this.state.tabsetChildren;\n\n      var _getChildTabNodes = getChildTabNodes(this.tabsetRef.current),\n          _getChildTabNodes2 = _toArray(_getChildTabNodes),\n          nodes = _getChildTabNodes2.slice(0);\n\n      var newChildrenRefs = insertChildOrderly(tabsetChildren, tab, nodes);\n      this.setState({\n        tabsetChildren: newChildrenRefs\n      });\n    }\n  }, {\n    key: \"unRegisterTab\",\n    value: function unRegisterTab(tabName) {\n      var tabsetChildren = this.state.tabsetChildren;\n      var newTabsetChildren = tabsetChildren.filter(function (tab) {\n        return tab.name !== tabName;\n      });\n      this.setState({\n        tabsetChildren: newTabsetChildren\n      });\n    }\n  }, {\n    key: \"scrollToSelectedTab\",\n    value: function scrollToSelectedTab(name) {\n      var tabsetChildren = this.state.tabsetChildren;\n      var tabset = this.tabsetRef.current;\n      var scrollLeft = tabset.scrollLeft,\n          tabsetWidth = tabset.offsetWidth;\n      var tabIndex = getTabIndexFromName(tabsetChildren, name);\n      var isFirstTab = tabIndex === 0;\n\n      if (isFirstTab) {\n        this.tabsetRef.current.scrollTo(0, 0);\n      } else {\n        var totalWidthUpToCurrentTab = getChildrenTotalWidthUpToClickedTab(tabsetChildren, tabIndex + 1);\n        var totalWidthUpToPrevTab = getChildrenTotalWidthUpToClickedTab(tabsetChildren, tabIndex);\n        var tabsetWidthUpToCurrentTab = tabsetWidth + scrollLeft;\n        var isCurrentTabOutOfViewOnRightSide = totalWidthUpToCurrentTab > tabsetWidthUpToCurrentTab - 20;\n        var isCurrentTabOutOfViewOnLeftSide = scrollLeft > totalWidthUpToPrevTab;\n\n        if (isCurrentTabOutOfViewOnLeftSide) {\n          this.tabsetRef.current.scrollTo(totalWidthUpToPrevTab, 0);\n        }\n\n        if (isCurrentTabOutOfViewOnRightSide) {\n          var moveScroll = totalWidthUpToCurrentTab - tabsetWidthUpToCurrentTab + 20;\n          this.tabsetRef.current.scrollTo(scrollLeft + moveScroll, 0);\n        }\n      }\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(event, name) {\n      var onSelect = this.props.onSelect;\n      this.scrollToSelectedTab(name);\n      onSelect(event, name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          activeTabName = _this$props.activeTabName,\n          fullWidth = _this$props.fullWidth,\n          variant = _this$props.variant,\n          children = _this$props.children,\n          style = _this$props.style,\n          className = _this$props.className,\n          id = _this$props.id;\n      var areButtonsVisible = this.state.areButtonsVisible;\n      var screenWidth = this.screenWidth;\n      var showButtons = areButtonsVisible || screenWidth < 600;\n      var context = {\n        activeTabName: activeTabName,\n        onSelect: this.handleSelect,\n        privateRegisterTab: this.registerTab,\n        privateUnRegisterTab: this.unRegisterTab,\n        privateUpdateTab: this.updateTab,\n        fullWidth: fullWidth,\n        variant: variant\n      };\n      return React.createElement(StyledContainer, {\n        variant: variant,\n        className: className,\n        style: style,\n        id: id\n      }, React.createElement(StyledObserver, {\n        ref: this.resizeTarget\n      }), React.createElement(StyledTabset, {\n        variant: variant\n      }, React.createElement(StyledInnerContainer, {\n        fullWidth: fullWidth,\n        role: \"tablist\",\n        onKeyDown: this.handleKeyPressed,\n        onScroll: this.updateButtonsVisibility,\n        ref: this.tabsetRef\n      }, React.createElement(Provider, {\n        value: context\n      }, children)), React.createElement(RenderIf, {\n        isTrue: showButtons\n      }, React.createElement(StyledButtonGroup, null, React.createElement(StyledButtonIcon, {\n        icon: React.createElement(LeftThinChevron, null),\n        disabled: this.isLeftButtonDisabled(),\n        onClick: this.handleLeftButtonClick,\n        assistiveText: \"previus tab button\",\n        variant: \"border-filled\"\n      }), React.createElement(StyledButtonIcon, {\n        icon: React.createElement(RightThinChevron, null),\n        disabled: this.isRightButtonDisabled(),\n        onClick: this.handleRightButtonClick,\n        assistiveText: \"next tab button\",\n        variant: \"border-filled\"\n      })))));\n    }\n  }]);\n\n  return Tabset;\n}(Component);\n\nexport { Tabset as default };\nTabset.propTypes = {\n  activeTabName: PropTypes.string,\n  onSelect: PropTypes.func,\n  fullWidth: PropTypes.bool,\n  variant: PropTypes.oneOf(['card', 'line']),\n  id: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  children: PropTypes.node\n};\nTabset.defaultProps = {\n  activeTabName: undefined,\n  onSelect: function onSelect() {},\n  fullWidth: false,\n  variant: 'card',\n  className: undefined,\n  style: undefined,\n  children: null,\n  id: undefined\n};","map":{"version":3,"names":["_toArray","_defineProperty","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","React","Component","PropTypes","Provider","RenderIf","LEFT_KEY","RIGHT_KEY","getChildTabNodes","insertChildOrderly","getTabIndexFromName","getChildrenTotalWidth","getChildrenTotalWidthUpToClickedTab","isNotSameChildren","getUpdatedTabsetChildren","getRightButtonDisabledState","getLeftButtonDisabledState","RightThinChevron","LeftThinChevron","ResizeSensor","debounce","StyledContainer","StyledObserver","StyledTabset","StyledInnerContainer","StyledButtonGroup","StyledButtonIcon","RIGHT_SIDE","LEFT_SIDE","Tabset","_Component","_super","props","_this$keyHandlerMap","_this","state","tabsetChildren","areButtonsVisible","isFirstTime","tabsetRef","createRef","resizeTarget","registerTab","bind","unRegisterTab","updateTab","handleKeyPressed","handleLeftButtonClick","handleRightButtonClick","updateButtonsVisibility","handleSelect","keyHandlerMap","selectTab","key","value","componentDidMount","widthObserver","current","componentDidUpdate","prevProp","children","areAllChildrenRegistered","length","componentWillUnmount","detach","setAsSelectedTab","tabIndex","ref","click","focus","_this$state","variant","tabset","resizeWidth","offsetWidth","scrollWidth","scrollLeft","tabsetWidth","childrenTotalWidth","buttonWidth","padding","delta","showButtons","screenWidth","window","innerWidth","maxScroll","setState","event","keyCode","side","activeTabName","activeTabIndex","isLeftButtonDisabled","isRightButtonDisabled","scrollTo","tab","nameToUpdate","newTabsetChildren","_getChildTabNodes","_getChildTabNodes2","nodes","slice","newChildrenRefs","tabName","filter","name","scrollToSelectedTab","isFirstTab","totalWidthUpToCurrentTab","totalWidthUpToPrevTab","tabsetWidthUpToCurrentTab","isCurrentTabOutOfViewOnRightSide","isCurrentTabOutOfViewOnLeftSide","moveScroll","onSelect","render","_this$props","fullWidth","style","className","id","context","privateRegisterTab","privateUnRegisterTab","privateUpdateTab","createElement","role","onKeyDown","onScroll","isTrue","icon","disabled","onClick","assistiveText","default","propTypes","string","func","bool","oneOf","object","node","defaultProps","undefined"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/Tabset/index.js"],"sourcesContent":["import _toArray from \"@babel/runtime/helpers/toArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from './context';\nimport RenderIf from '../RenderIf';\nimport { LEFT_KEY, RIGHT_KEY } from '../../libs/constants';\nimport { getChildTabNodes, insertChildOrderly, getTabIndexFromName, getChildrenTotalWidth, getChildrenTotalWidthUpToClickedTab, isNotSameChildren, getUpdatedTabsetChildren, getRightButtonDisabledState, getLeftButtonDisabledState } from './utils';\nimport RightThinChevron from './rightThinChevron';\nimport LeftThinChevron from './leftThinChevron';\nimport ResizeSensor from '../../libs/ResizeSensor';\nimport debounce from '../../libs/debounce';\nimport StyledContainer from './styled/container';\nimport StyledObserver from './styled/observer';\nimport StyledTabset from './styled/tabset';\nimport StyledInnerContainer from './styled/innerContainer';\nimport StyledButtonGroup from './styled/buttonGroup';\nimport StyledButtonIcon from './styled/buttonIcon';\nvar RIGHT_SIDE = 1;\nvar LEFT_SIDE = -1;\n\nvar Tabset = function (_Component) {\n  _inherits(Tabset, _Component);\n\n  var _super = _createSuper(Tabset);\n\n  function Tabset(props) {\n    var _this$keyHandlerMap;\n\n    var _this;\n\n    _classCallCheck(this, Tabset);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      tabsetChildren: [],\n      areButtonsVisible: false\n    };\n    _this.isFirstTime = true;\n    _this.tabsetRef = React.createRef();\n    _this.resizeTarget = React.createRef();\n    _this.registerTab = _this.registerTab.bind(_assertThisInitialized(_this));\n    _this.unRegisterTab = _this.unRegisterTab.bind(_assertThisInitialized(_this));\n    _this.updateTab = _this.updateTab.bind(_assertThisInitialized(_this));\n    _this.handleKeyPressed = _this.handleKeyPressed.bind(_assertThisInitialized(_this));\n    _this.handleLeftButtonClick = _this.handleLeftButtonClick.bind(_assertThisInitialized(_this));\n    _this.handleRightButtonClick = _this.handleRightButtonClick.bind(_assertThisInitialized(_this));\n    _this.updateButtonsVisibility = _this.updateButtonsVisibility.bind(_assertThisInitialized(_this));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_this));\n    _this.keyHandlerMap = (_this$keyHandlerMap = {}, _defineProperty(_this$keyHandlerMap, RIGHT_KEY, function () {\n      return _this.selectTab(RIGHT_SIDE);\n    }), _defineProperty(_this$keyHandlerMap, LEFT_KEY, function () {\n      return _this.selectTab(LEFT_SIDE);\n    }), _this$keyHandlerMap);\n    return _this;\n  }\n\n  _createClass(Tabset, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.widthObserver = new ResizeSensor(this.resizeTarget.current, debounce(this.updateButtonsVisibility, 100));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProp) {\n      var children = this.props.children;\n      var tabsetChildren = this.state.tabsetChildren;\n      var isFirstTime = this.isFirstTime;\n      var areAllChildrenRegistered = children.length === tabsetChildren.length;\n\n      if (isNotSameChildren(children, prevProp.children)) {\n        this.updateButtonsVisibility();\n      }\n\n      if (areAllChildrenRegistered && isFirstTime) {\n        this.updateButtonsVisibility();\n        this.isFirstTime = false;\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.widthObserver.detach(this.resizeTarget.current);\n    }\n  }, {\n    key: \"setAsSelectedTab\",\n    value: function setAsSelectedTab(tabIndex) {\n      var tabsetChildren = this.state.tabsetChildren;\n      tabsetChildren[tabIndex].ref.click();\n      tabsetChildren[tabIndex].ref.focus();\n    }\n  }, {\n    key: \"updateButtonsVisibility\",\n    value: function updateButtonsVisibility() {\n      var _this$state = this.state,\n          tabsetChildren = _this$state.tabsetChildren,\n          areButtonsVisible = _this$state.areButtonsVisible,\n          variant = _this$state.variant;\n      var tabset = this.tabsetRef.current;\n      var resizeWidth = this.resizeTarget.current.offsetWidth;\n      var scrollWidth = tabset.scrollWidth,\n          scrollLeft = tabset.scrollLeft,\n          tabsetWidth = tabset.offsetWidth;\n      var childrenTotalWidth = getChildrenTotalWidth(tabsetChildren);\n      var buttonWidth = areButtonsVisible ? 94 : 0;\n      var padding = resizeWidth - tabsetWidth - buttonWidth;\n      var delta = variant === 'line' ? 0 : 1;\n      var showButtons = childrenTotalWidth > resizeWidth - padding + delta;\n      this.screenWidth = window.innerWidth;\n      this.scrollLeft = scrollLeft;\n      this.maxScroll = scrollWidth - tabsetWidth;\n      this.tabsetWidth = tabsetWidth;\n      this.setState({\n        areButtonsVisible: showButtons\n      });\n    }\n  }, {\n    key: \"handleKeyPressed\",\n    value: function handleKeyPressed(event) {\n      if (this.keyHandlerMap[event.keyCode]) {\n        return this.keyHandlerMap[event.keyCode]();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"selectTab\",\n    value: function selectTab(side) {\n      var activeTabName = this.props.activeTabName;\n      var tabsetChildren = this.state.tabsetChildren;\n      var activeTabIndex = getTabIndexFromName(tabsetChildren, activeTabName);\n\n      if (activeTabIndex === tabsetChildren.length - 1 && side === RIGHT_SIDE) {\n        this.setAsSelectedTab(0);\n      } else if (activeTabIndex === 0 && side === LEFT_SIDE) {\n        this.setAsSelectedTab(tabsetChildren.length - 1);\n      } else {\n        this.setAsSelectedTab(activeTabIndex + side);\n      }\n    }\n  }, {\n    key: \"isLeftButtonDisabled\",\n    value: function isLeftButtonDisabled() {\n      var activeTabName = this.props.activeTabName;\n      var tabsetChildren = this.state.tabsetChildren;\n      var screenWidth = this.screenWidth,\n          scrollLeft = this.scrollLeft;\n      return getLeftButtonDisabledState({\n        activeTabName: activeTabName,\n        tabsetChildren: tabsetChildren,\n        screenWidth: screenWidth,\n        scrollLeft: scrollLeft\n      });\n    }\n  }, {\n    key: \"isRightButtonDisabled\",\n    value: function isRightButtonDisabled() {\n      var activeTabName = this.props.activeTabName;\n      var tabsetChildren = this.state.tabsetChildren;\n      var screenWidth = this.screenWidth,\n          scrollLeft = this.scrollLeft,\n          maxScroll = this.maxScroll;\n      return getRightButtonDisabledState({\n        activeTabName: activeTabName,\n        tabsetChildren: tabsetChildren,\n        screenWidth: screenWidth,\n        scrollLeft: scrollLeft,\n        maxScroll: maxScroll\n      });\n    }\n  }, {\n    key: \"handleRightButtonClick\",\n    value: function handleRightButtonClick() {\n      var screenWidth = this.screenWidth,\n          tabsetWidth = this.tabsetWidth,\n          scrollLeft = this.scrollLeft;\n\n      if (screenWidth > 600) {\n        return this.tabsetRef.current.scrollTo(scrollLeft + tabsetWidth, 0);\n      }\n\n      return this.selectTab(RIGHT_SIDE);\n    }\n  }, {\n    key: \"handleLeftButtonClick\",\n    value: function handleLeftButtonClick() {\n      var screenWidth = this.screenWidth,\n          tabsetWidth = this.tabsetWidth,\n          scrollLeft = this.scrollLeft;\n\n      if (screenWidth > 600) {\n        return this.tabsetRef.current.scrollTo(scrollLeft - tabsetWidth, 0);\n      }\n\n      return this.selectTab(LEFT_SIDE);\n    }\n  }, {\n    key: \"updateTab\",\n    value: function updateTab(tab, nameToUpdate) {\n      var tabsetChildren = this.state.tabsetChildren;\n      var newTabsetChildren = getUpdatedTabsetChildren(tabsetChildren, tab, nameToUpdate);\n      this.setState({\n        tabsetChildren: newTabsetChildren\n      });\n    }\n  }, {\n    key: \"registerTab\",\n    value: function registerTab(tab) {\n      var tabsetChildren = this.state.tabsetChildren;\n\n      var _getChildTabNodes = getChildTabNodes(this.tabsetRef.current),\n          _getChildTabNodes2 = _toArray(_getChildTabNodes),\n          nodes = _getChildTabNodes2.slice(0);\n\n      var newChildrenRefs = insertChildOrderly(tabsetChildren, tab, nodes);\n      this.setState({\n        tabsetChildren: newChildrenRefs\n      });\n    }\n  }, {\n    key: \"unRegisterTab\",\n    value: function unRegisterTab(tabName) {\n      var tabsetChildren = this.state.tabsetChildren;\n      var newTabsetChildren = tabsetChildren.filter(function (tab) {\n        return tab.name !== tabName;\n      });\n      this.setState({\n        tabsetChildren: newTabsetChildren\n      });\n    }\n  }, {\n    key: \"scrollToSelectedTab\",\n    value: function scrollToSelectedTab(name) {\n      var tabsetChildren = this.state.tabsetChildren;\n      var tabset = this.tabsetRef.current;\n      var scrollLeft = tabset.scrollLeft,\n          tabsetWidth = tabset.offsetWidth;\n      var tabIndex = getTabIndexFromName(tabsetChildren, name);\n      var isFirstTab = tabIndex === 0;\n\n      if (isFirstTab) {\n        this.tabsetRef.current.scrollTo(0, 0);\n      } else {\n        var totalWidthUpToCurrentTab = getChildrenTotalWidthUpToClickedTab(tabsetChildren, tabIndex + 1);\n        var totalWidthUpToPrevTab = getChildrenTotalWidthUpToClickedTab(tabsetChildren, tabIndex);\n        var tabsetWidthUpToCurrentTab = tabsetWidth + scrollLeft;\n        var isCurrentTabOutOfViewOnRightSide = totalWidthUpToCurrentTab > tabsetWidthUpToCurrentTab - 20;\n        var isCurrentTabOutOfViewOnLeftSide = scrollLeft > totalWidthUpToPrevTab;\n\n        if (isCurrentTabOutOfViewOnLeftSide) {\n          this.tabsetRef.current.scrollTo(totalWidthUpToPrevTab, 0);\n        }\n\n        if (isCurrentTabOutOfViewOnRightSide) {\n          var moveScroll = totalWidthUpToCurrentTab - tabsetWidthUpToCurrentTab + 20;\n          this.tabsetRef.current.scrollTo(scrollLeft + moveScroll, 0);\n        }\n      }\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(event, name) {\n      var onSelect = this.props.onSelect;\n      this.scrollToSelectedTab(name);\n      onSelect(event, name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          activeTabName = _this$props.activeTabName,\n          fullWidth = _this$props.fullWidth,\n          variant = _this$props.variant,\n          children = _this$props.children,\n          style = _this$props.style,\n          className = _this$props.className,\n          id = _this$props.id;\n      var areButtonsVisible = this.state.areButtonsVisible;\n      var screenWidth = this.screenWidth;\n      var showButtons = areButtonsVisible || screenWidth < 600;\n      var context = {\n        activeTabName: activeTabName,\n        onSelect: this.handleSelect,\n        privateRegisterTab: this.registerTab,\n        privateUnRegisterTab: this.unRegisterTab,\n        privateUpdateTab: this.updateTab,\n        fullWidth: fullWidth,\n        variant: variant\n      };\n      return React.createElement(StyledContainer, {\n        variant: variant,\n        className: className,\n        style: style,\n        id: id\n      }, React.createElement(StyledObserver, {\n        ref: this.resizeTarget\n      }), React.createElement(StyledTabset, {\n        variant: variant\n      }, React.createElement(StyledInnerContainer, {\n        fullWidth: fullWidth,\n        role: \"tablist\",\n        onKeyDown: this.handleKeyPressed,\n        onScroll: this.updateButtonsVisibility,\n        ref: this.tabsetRef\n      }, React.createElement(Provider, {\n        value: context\n      }, children)), React.createElement(RenderIf, {\n        isTrue: showButtons\n      }, React.createElement(StyledButtonGroup, null, React.createElement(StyledButtonIcon, {\n        icon: React.createElement(LeftThinChevron, null),\n        disabled: this.isLeftButtonDisabled(),\n        onClick: this.handleLeftButtonClick,\n        assistiveText: \"previus tab button\",\n        variant: \"border-filled\"\n      }), React.createElement(StyledButtonIcon, {\n        icon: React.createElement(RightThinChevron, null),\n        disabled: this.isRightButtonDisabled(),\n        onClick: this.handleRightButtonClick,\n        assistiveText: \"next tab button\",\n        variant: \"border-filled\"\n      })))));\n    }\n  }]);\n\n  return Tabset;\n}(Component);\n\nexport { Tabset as default };\nTabset.propTypes = {\n  activeTabName: PropTypes.string,\n  onSelect: PropTypes.func,\n  fullWidth: PropTypes.bool,\n  variant: PropTypes.oneOf(['card', 'line']),\n  id: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  children: PropTypes.node\n};\nTabset.defaultProps = {\n  activeTabName: undefined,\n  onSelect: function onSelect() {},\n  fullWidth: false,\n  variant: 'card',\n  className: undefined,\n  style: undefined,\n  children: null,\n  id: undefined\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}