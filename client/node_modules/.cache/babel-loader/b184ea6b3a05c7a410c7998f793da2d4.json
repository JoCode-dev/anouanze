{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport ImportRecordsFlow from '..';\n\nfunction getDateValue(value) {\n  var date = new Date(value);\n  var isValidDate = !isNaN(date.getTime());\n  return isValidDate ? date : '';\n}\n\nfunction getTypeValue(value, dataType) {\n  switch (dataType.name) {\n    case 'String':\n      return value;\n\n    case 'Number':\n      return !isNaN(Number(value)) ? Number(value) : '';\n\n    case 'Boolean':\n      return !!value;\n\n    case 'Date':\n      return getDateValue(value);\n\n    default:\n      return value || '';\n  }\n}\n\nfunction getNormalizedFieldValue(value, attributeDef) {\n  if (typeof attributeDef === 'function') {\n    return getTypeValue(value, attributeDef);\n  }\n\n  if (typeof attributeDef.type === 'function') {\n    return getTypeValue(value, attributeDef.type);\n  }\n\n  return value || '';\n}\n\nexport default function getDataToImport(params) {\n  var actionTypeMap = {\n    'add-records': ImportRecordsFlow.ADD_RECORDS,\n    'merge-records': ImportRecordsFlow.MERGE_RECORDS\n  };\n  var data = params.data,\n      fieldsMap = params.fieldsMap,\n      schema = params.schema,\n      actionOption = params.actionOption,\n      matchField = params.matchField;\n  return {\n    collection: schema.collection,\n    actionType: actionTypeMap[actionOption],\n    mergeByKey: matchField === 'default' ? '' : matchField,\n    data: data.map(function (item) {\n      return _objectSpread({}, Object.keys(fieldsMap).reduce(function (acc, field) {\n        var keys = fieldsMap[field].split(',');\n        var schemaField = schema.attributes[field];\n        var value = keys.reduce(function (accumulator, key) {\n          return \"\".concat(accumulator, \" \").concat(item[key] || '').trim();\n        }, '') || schemaField.defaultTo;\n        return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, field, getNormalizedFieldValue(value, schemaField)));\n      }, {}));\n    })\n  };\n}","map":{"version":3,"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","ImportRecordsFlow","getDateValue","value","date","Date","isValidDate","isNaN","getTime","getTypeValue","dataType","name","Number","getNormalizedFieldValue","attributeDef","type","getDataToImport","params","actionTypeMap","ADD_RECORDS","MERGE_RECORDS","data","fieldsMap","schema","actionOption","matchField","collection","actionType","mergeByKey","map","item","reduce","acc","field","split","schemaField","attributes","accumulator","concat","trim","defaultTo"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/ImportRecordsFlow/helpers/getDataToImport.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport ImportRecordsFlow from '..';\n\nfunction getDateValue(value) {\n  var date = new Date(value);\n  var isValidDate = !isNaN(date.getTime());\n  return isValidDate ? date : '';\n}\n\nfunction getTypeValue(value, dataType) {\n  switch (dataType.name) {\n    case 'String':\n      return value;\n\n    case 'Number':\n      return !isNaN(Number(value)) ? Number(value) : '';\n\n    case 'Boolean':\n      return !!value;\n\n    case 'Date':\n      return getDateValue(value);\n\n    default:\n      return value || '';\n  }\n}\n\nfunction getNormalizedFieldValue(value, attributeDef) {\n  if (typeof attributeDef === 'function') {\n    return getTypeValue(value, attributeDef);\n  }\n\n  if (typeof attributeDef.type === 'function') {\n    return getTypeValue(value, attributeDef.type);\n  }\n\n  return value || '';\n}\n\nexport default function getDataToImport(params) {\n  var actionTypeMap = {\n    'add-records': ImportRecordsFlow.ADD_RECORDS,\n    'merge-records': ImportRecordsFlow.MERGE_RECORDS\n  };\n  var data = params.data,\n      fieldsMap = params.fieldsMap,\n      schema = params.schema,\n      actionOption = params.actionOption,\n      matchField = params.matchField;\n  return {\n    collection: schema.collection,\n    actionType: actionTypeMap[actionOption],\n    mergeByKey: matchField === 'default' ? '' : matchField,\n    data: data.map(function (item) {\n      return _objectSpread({}, Object.keys(fieldsMap).reduce(function (acc, field) {\n        var keys = fieldsMap[field].split(',');\n        var schemaField = schema.attributes[field];\n        var value = keys.reduce(function (accumulator, key) {\n          return \"\".concat(accumulator, \" \").concat(item[key] || '').trim();\n        }, '') || schemaField.defaultTo;\n        return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, field, getNormalizedFieldValue(value, schemaField)));\n      }, {}));\n    })\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}