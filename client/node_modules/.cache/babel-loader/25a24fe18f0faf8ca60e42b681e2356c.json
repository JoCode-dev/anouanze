{"ast":null,"code":"import getFieldValue from './getFieldValue';\nvar rowIndex = 0;\nexport default function computeUniqueRowKey(rowData, keyField) {\n  var value = getFieldValue(rowData, keyField);\n\n  if (value && typeof value === 'string') {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    return \"row-\".concat(value);\n  }\n\n  if (rowIndex === 0) {\n    console.error('The \"keyField\" passed is not valid.');\n  }\n\n  rowIndex += 1;\n  return \"row-\".concat(rowIndex);\n}","map":{"version":3,"names":["getFieldValue","rowIndex","computeUniqueRowKey","rowData","keyField","value","concat","console","error"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/Table/helpers/rows/computeUniqueRowKey.js"],"sourcesContent":["import getFieldValue from './getFieldValue';\nvar rowIndex = 0;\nexport default function computeUniqueRowKey(rowData, keyField) {\n  var value = getFieldValue(rowData, keyField);\n\n  if (value && typeof value === 'string') {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    return \"row-\".concat(value);\n  }\n\n  if (rowIndex === 0) {\n    console.error('The \"keyField\" passed is not valid.');\n  }\n\n  rowIndex += 1;\n  return \"row-\".concat(rowIndex);\n}"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,IAAIC,QAAQ,GAAG,CAAf;AACA,eAAe,SAASC,mBAAT,CAA6BC,OAA7B,EAAsCC,QAAtC,EAAgD;EAC7D,IAAIC,KAAK,GAAGL,aAAa,CAACG,OAAD,EAAUC,QAAV,CAAzB;;EAEA,IAAIC,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;IACtC,OAAOA,KAAP;EACD;;EAED,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC7B,OAAO,OAAOC,MAAP,CAAcD,KAAd,CAAP;EACD;;EAED,IAAIJ,QAAQ,KAAK,CAAjB,EAAoB;IAClBM,OAAO,CAACC,KAAR,CAAc,qCAAd;EACD;;EAEDP,QAAQ,IAAI,CAAZ;EACA,OAAO,OAAOK,MAAP,CAAcL,QAAd,CAAP;AACD"},"metadata":{},"sourceType":"module"}