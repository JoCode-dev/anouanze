{"ast":null,"code":"import { useCallback } from 'react';\nimport { addMonths, isDateBelowLimit, isDateBeyondLimit, getFirstDayMonth, getCalendarBounds } from '../../helpers';\nexport default function useMoveFocusedMonthFunction(focusedDate, minDate, maxDate) {\n  return useCallback(function (increment) {\n    var _getCalendarBounds = getCalendarBounds(minDate, maxDate),\n        minCalendarDate = _getCalendarBounds.minCalendarDate,\n        maxCalendarDate = _getCalendarBounds.maxCalendarDate;\n\n    var nextFocusedDate = addMonths(focusedDate, increment);\n    if (isDateBelowLimit(nextFocusedDate, minCalendarDate)) return {\n      day: minCalendarDate,\n      month: getFirstDayMonth(minCalendarDate)\n    };\n    if (isDateBeyondLimit(nextFocusedDate, maxCalendarDate)) return {\n      day: maxCalendarDate,\n      month: getFirstDayMonth(maxCalendarDate)\n    };\n    return {\n      day: nextFocusedDate,\n      month: getFirstDayMonth(nextFocusedDate)\n    };\n  }, [focusedDate, minDate, maxDate]);\n}","map":{"version":3,"names":["useCallback","addMonths","isDateBelowLimit","isDateBeyondLimit","getFirstDayMonth","getCalendarBounds","useMoveFocusedMonthFunction","focusedDate","minDate","maxDate","increment","_getCalendarBounds","minCalendarDate","maxCalendarDate","nextFocusedDate","day","month"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/Calendar/doubleCalendar/hooks/useMoveFocusedMonth.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { addMonths, isDateBelowLimit, isDateBeyondLimit, getFirstDayMonth, getCalendarBounds } from '../../helpers';\nexport default function useMoveFocusedMonthFunction(focusedDate, minDate, maxDate) {\n  return useCallback(function (increment) {\n    var _getCalendarBounds = getCalendarBounds(minDate, maxDate),\n        minCalendarDate = _getCalendarBounds.minCalendarDate,\n        maxCalendarDate = _getCalendarBounds.maxCalendarDate;\n\n    var nextFocusedDate = addMonths(focusedDate, increment);\n    if (isDateBelowLimit(nextFocusedDate, minCalendarDate)) return {\n      day: minCalendarDate,\n      month: getFirstDayMonth(minCalendarDate)\n    };\n    if (isDateBeyondLimit(nextFocusedDate, maxCalendarDate)) return {\n      day: maxCalendarDate,\n      month: getFirstDayMonth(maxCalendarDate)\n    };\n    return {\n      day: nextFocusedDate,\n      month: getFirstDayMonth(nextFocusedDate)\n    };\n  }, [focusedDate, minDate, maxDate]);\n}"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,SAAT,EAAoBC,gBAApB,EAAsCC,iBAAtC,EAAyDC,gBAAzD,EAA2EC,iBAA3E,QAAoG,eAApG;AACA,eAAe,SAASC,2BAAT,CAAqCC,WAArC,EAAkDC,OAAlD,EAA2DC,OAA3D,EAAoE;EACjF,OAAOT,WAAW,CAAC,UAAUU,SAAV,EAAqB;IACtC,IAAIC,kBAAkB,GAAGN,iBAAiB,CAACG,OAAD,EAAUC,OAAV,CAA1C;IAAA,IACIG,eAAe,GAAGD,kBAAkB,CAACC,eADzC;IAAA,IAEIC,eAAe,GAAGF,kBAAkB,CAACE,eAFzC;;IAIA,IAAIC,eAAe,GAAGb,SAAS,CAACM,WAAD,EAAcG,SAAd,CAA/B;IACA,IAAIR,gBAAgB,CAACY,eAAD,EAAkBF,eAAlB,CAApB,EAAwD,OAAO;MAC7DG,GAAG,EAAEH,eADwD;MAE7DI,KAAK,EAAEZ,gBAAgB,CAACQ,eAAD;IAFsC,CAAP;IAIxD,IAAIT,iBAAiB,CAACW,eAAD,EAAkBD,eAAlB,CAArB,EAAyD,OAAO;MAC9DE,GAAG,EAAEF,eADyD;MAE9DG,KAAK,EAAEZ,gBAAgB,CAACS,eAAD;IAFuC,CAAP;IAIzD,OAAO;MACLE,GAAG,EAAED,eADA;MAELE,KAAK,EAAEZ,gBAAgB,CAACU,eAAD;IAFlB,CAAP;EAID,CAlBiB,EAkBf,CAACP,WAAD,EAAcC,OAAd,EAAuBC,OAAvB,CAlBe,CAAlB;AAmBD"},"metadata":{},"sourceType":"module"}