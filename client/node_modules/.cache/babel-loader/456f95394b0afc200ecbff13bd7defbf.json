{"ast":null,"code":"import React from 'react';\nexport default function getFormattedValue(value, highlightMatch, icon) {\n  if (!value) return null;\n\n  if (value && typeof value === 'string') {\n    return {\n      label: value,\n      icon: icon\n    };\n  }\n\n  var prediction = value.predictionInfo ? value.predictionInfo : value;\n  var formattedLabel;\n\n  if (highlightMatch) {\n    formattedLabel = prediction.structured_formatting.main_text_matched_substrings.reduceRight(function (prev, currentMatch, index) {\n      var matchedTerm = prev.head.slice(currentMatch.offset, currentMatch.offset + currentMatch.length);\n      var initialPart = prev.head.slice(0, currentMatch.offset);\n      var finalPart = prev.head.slice(currentMatch.offset + currentMatch.length);\n\n      if (index > 0) {\n        return {\n          head: initialPart,\n          tail: React.createElement(React.Fragment, null, React.createElement(\"b\", null, matchedTerm), finalPart, prev.tail)\n        };\n      }\n\n      return React.createElement(\"span\", null, initialPart, React.createElement(\"b\", null, matchedTerm), finalPart, prev.tail);\n    }, {\n      head: prediction.structured_formatting.main_text,\n      fullText: prediction.structured_formatting.main_text,\n      tail: ''\n    });\n  } else {\n    formattedLabel = prediction.description;\n  }\n\n  return {\n    id: prediction.place_id,\n    label: formattedLabel,\n    description: prediction.structured_formatting.secondary_text,\n    icon: icon\n  };\n}","map":{"version":3,"names":["React","getFormattedValue","value","highlightMatch","icon","label","prediction","predictionInfo","formattedLabel","structured_formatting","main_text_matched_substrings","reduceRight","prev","currentMatch","index","matchedTerm","head","slice","offset","length","initialPart","finalPart","tail","createElement","Fragment","main_text","fullText","description","id","place_id","secondary_text"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/GoogleAddressLookup/helpers/getFormattedValue.js"],"sourcesContent":["import React from 'react';\nexport default function getFormattedValue(value, highlightMatch, icon) {\n  if (!value) return null;\n\n  if (value && typeof value === 'string') {\n    return {\n      label: value,\n      icon: icon\n    };\n  }\n\n  var prediction = value.predictionInfo ? value.predictionInfo : value;\n  var formattedLabel;\n\n  if (highlightMatch) {\n    formattedLabel = prediction.structured_formatting.main_text_matched_substrings.reduceRight(function (prev, currentMatch, index) {\n      var matchedTerm = prev.head.slice(currentMatch.offset, currentMatch.offset + currentMatch.length);\n      var initialPart = prev.head.slice(0, currentMatch.offset);\n      var finalPart = prev.head.slice(currentMatch.offset + currentMatch.length);\n\n      if (index > 0) {\n        return {\n          head: initialPart,\n          tail: React.createElement(React.Fragment, null, React.createElement(\"b\", null, matchedTerm), finalPart, prev.tail)\n        };\n      }\n\n      return React.createElement(\"span\", null, initialPart, React.createElement(\"b\", null, matchedTerm), finalPart, prev.tail);\n    }, {\n      head: prediction.structured_formatting.main_text,\n      fullText: prediction.structured_formatting.main_text,\n      tail: ''\n    });\n  } else {\n    formattedLabel = prediction.description;\n  }\n\n  return {\n    id: prediction.place_id,\n    label: formattedLabel,\n    description: prediction.structured_formatting.secondary_text,\n    icon: icon\n  };\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkCC,cAAlC,EAAkDC,IAAlD,EAAwD;EACrE,IAAI,CAACF,KAAL,EAAY,OAAO,IAAP;;EAEZ,IAAIA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;IACtC,OAAO;MACLG,KAAK,EAAEH,KADF;MAELE,IAAI,EAAEA;IAFD,CAAP;EAID;;EAED,IAAIE,UAAU,GAAGJ,KAAK,CAACK,cAAN,GAAuBL,KAAK,CAACK,cAA7B,GAA8CL,KAA/D;EACA,IAAIM,cAAJ;;EAEA,IAAIL,cAAJ,EAAoB;IAClBK,cAAc,GAAGF,UAAU,CAACG,qBAAX,CAAiCC,4BAAjC,CAA8DC,WAA9D,CAA0E,UAAUC,IAAV,EAAgBC,YAAhB,EAA8BC,KAA9B,EAAqC;MAC9H,IAAIC,WAAW,GAAGH,IAAI,CAACI,IAAL,CAAUC,KAAV,CAAgBJ,YAAY,CAACK,MAA7B,EAAqCL,YAAY,CAACK,MAAb,GAAsBL,YAAY,CAACM,MAAxE,CAAlB;MACA,IAAIC,WAAW,GAAGR,IAAI,CAACI,IAAL,CAAUC,KAAV,CAAgB,CAAhB,EAAmBJ,YAAY,CAACK,MAAhC,CAAlB;MACA,IAAIG,SAAS,GAAGT,IAAI,CAACI,IAAL,CAAUC,KAAV,CAAgBJ,YAAY,CAACK,MAAb,GAAsBL,YAAY,CAACM,MAAnD,CAAhB;;MAEA,IAAIL,KAAK,GAAG,CAAZ,EAAe;QACb,OAAO;UACLE,IAAI,EAAEI,WADD;UAELE,IAAI,EAAEtB,KAAK,CAACuB,aAAN,CAAoBvB,KAAK,CAACwB,QAA1B,EAAoC,IAApC,EAA0CxB,KAAK,CAACuB,aAAN,CAAoB,GAApB,EAAyB,IAAzB,EAA+BR,WAA/B,CAA1C,EAAuFM,SAAvF,EAAkGT,IAAI,CAACU,IAAvG;QAFD,CAAP;MAID;;MAED,OAAOtB,KAAK,CAACuB,aAAN,CAAoB,MAApB,EAA4B,IAA5B,EAAkCH,WAAlC,EAA+CpB,KAAK,CAACuB,aAAN,CAAoB,GAApB,EAAyB,IAAzB,EAA+BR,WAA/B,CAA/C,EAA4FM,SAA5F,EAAuGT,IAAI,CAACU,IAA5G,CAAP;IACD,CAbgB,EAad;MACDN,IAAI,EAAEV,UAAU,CAACG,qBAAX,CAAiCgB,SADtC;MAEDC,QAAQ,EAAEpB,UAAU,CAACG,qBAAX,CAAiCgB,SAF1C;MAGDH,IAAI,EAAE;IAHL,CAbc,CAAjB;EAkBD,CAnBD,MAmBO;IACLd,cAAc,GAAGF,UAAU,CAACqB,WAA5B;EACD;;EAED,OAAO;IACLC,EAAE,EAAEtB,UAAU,CAACuB,QADV;IAELxB,KAAK,EAAEG,cAFF;IAGLmB,WAAW,EAAErB,UAAU,CAACG,qBAAX,CAAiCqB,cAHzC;IAIL1B,IAAI,EAAEA;EAJD,CAAP;AAMD"},"metadata":{},"sourceType":"module"}