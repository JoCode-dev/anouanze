{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nexport default function getSchemaFieldOptions(schemaFields) {\n  var defaultOption = {\n    label: 'Select the Field do you want match',\n    value: 'default',\n    disabled: true\n  };\n  var hasFields = Array.isArray(schemaFields) && schemaFields.length;\n\n  if (hasFields) {\n    var options = schemaFields.map(function (attr) {\n      return {\n        label: attr,\n        value: attr\n      };\n    });\n    return [defaultOption].concat(_toConsumableArray(options));\n  }\n\n  return [defaultOption];\n}","map":{"version":3,"names":["_toConsumableArray","getSchemaFieldOptions","schemaFields","defaultOption","label","value","disabled","hasFields","Array","isArray","length","options","map","attr","concat"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/ImportRecordsFlow/helpers/getSchemaFieldOptions.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nexport default function getSchemaFieldOptions(schemaFields) {\n  var defaultOption = {\n    label: 'Select the Field do you want match',\n    value: 'default',\n    disabled: true\n  };\n  var hasFields = Array.isArray(schemaFields) && schemaFields.length;\n\n  if (hasFields) {\n    var options = schemaFields.map(function (attr) {\n      return {\n        label: attr,\n        value: attr\n      };\n    });\n    return [defaultOption].concat(_toConsumableArray(options));\n  }\n\n  return [defaultOption];\n}"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,0CAA/B;AACA,eAAe,SAASC,qBAAT,CAA+BC,YAA/B,EAA6C;EAC1D,IAAIC,aAAa,GAAG;IAClBC,KAAK,EAAE,oCADW;IAElBC,KAAK,EAAE,SAFW;IAGlBC,QAAQ,EAAE;EAHQ,CAApB;EAKA,IAAIC,SAAS,GAAGC,KAAK,CAACC,OAAN,CAAcP,YAAd,KAA+BA,YAAY,CAACQ,MAA5D;;EAEA,IAAIH,SAAJ,EAAe;IACb,IAAII,OAAO,GAAGT,YAAY,CAACU,GAAb,CAAiB,UAAUC,IAAV,EAAgB;MAC7C,OAAO;QACLT,KAAK,EAAES,IADF;QAELR,KAAK,EAAEQ;MAFF,CAAP;IAID,CALa,CAAd;IAMA,OAAO,CAACV,aAAD,EAAgBW,MAAhB,CAAuBd,kBAAkB,CAACW,OAAD,CAAzC,CAAP;EACD;;EAED,OAAO,CAACR,aAAD,CAAP;AACD"},"metadata":{},"sourceType":"module"}