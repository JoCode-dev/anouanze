{"ast":null,"code":"import { useMemo } from 'react';\nimport { normalizeDate, normalizeRange, isEmptyRange } from '../helpers';\nexport default function useRangeFromValue(value, selectionType) {\n  return useMemo(function () {\n    if (selectionType === 'single') return undefined;\n\n    if (value && Array.isArray(value)) {\n      if (isEmptyRange(value)) return [];\n      return normalizeRange(value);\n    }\n\n    return value ? [normalizeDate(value)] : [];\n  }, [value, selectionType]);\n}","map":{"version":3,"names":["useMemo","normalizeDate","normalizeRange","isEmptyRange","useRangeFromValue","value","selectionType","undefined","Array","isArray"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/Calendar/hooks/useRangeFromValue.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { normalizeDate, normalizeRange, isEmptyRange } from '../helpers';\nexport default function useRangeFromValue(value, selectionType) {\n  return useMemo(function () {\n    if (selectionType === 'single') return undefined;\n\n    if (value && Array.isArray(value)) {\n      if (isEmptyRange(value)) return [];\n      return normalizeRange(value);\n    }\n\n    return value ? [normalizeDate(value)] : [];\n  }, [value, selectionType]);\n}"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,YAAxC,QAA4D,YAA5D;AACA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkCC,aAAlC,EAAiD;EAC9D,OAAON,OAAO,CAAC,YAAY;IACzB,IAAIM,aAAa,KAAK,QAAtB,EAAgC,OAAOC,SAAP;;IAEhC,IAAIF,KAAK,IAAIG,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAAb,EAAmC;MACjC,IAAIF,YAAY,CAACE,KAAD,CAAhB,EAAyB,OAAO,EAAP;MACzB,OAAOH,cAAc,CAACG,KAAD,CAArB;IACD;;IAED,OAAOA,KAAK,GAAG,CAACJ,aAAa,CAACI,KAAD,CAAd,CAAH,GAA4B,EAAxC;EACD,CATa,EASX,CAACA,KAAD,EAAQC,aAAR,CATW,CAAd;AAUD"},"metadata":{},"sourceType":"module"}