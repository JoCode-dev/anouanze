{"ast":null,"code":"export default function extractDate(date) {\n  if (date) {\n    try {\n      var options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      };\n      var value = typeof date === 'string' ? new Date(date) : date;\n      return new Intl.DateTimeFormat('en-US', options).format(value);\n    } catch (error) {\n      console.error(error);\n      return '';\n    }\n  }\n\n  return '';\n}","map":{"version":3,"names":["extractDate","date","options","year","month","day","value","Date","Intl","DateTimeFormat","format","error","console"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/DateTimePicker/helpers/extractDate.js"],"sourcesContent":["export default function extractDate(date) {\n  if (date) {\n    try {\n      var options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      };\n      var value = typeof date === 'string' ? new Date(date) : date;\n      return new Intl.DateTimeFormat('en-US', options).format(value);\n    } catch (error) {\n      console.error(error);\n      return '';\n    }\n  }\n\n  return '';\n}"],"mappings":"AAAA,eAAe,SAASA,WAAT,CAAqBC,IAArB,EAA2B;EACxC,IAAIA,IAAJ,EAAU;IACR,IAAI;MACF,IAAIC,OAAO,GAAG;QACZC,IAAI,EAAE,SADM;QAEZC,KAAK,EAAE,SAFK;QAGZC,GAAG,EAAE;MAHO,CAAd;MAKA,IAAIC,KAAK,GAAG,OAAOL,IAAP,KAAgB,QAAhB,GAA2B,IAAIM,IAAJ,CAASN,IAAT,CAA3B,GAA4CA,IAAxD;MACA,OAAO,IAAIO,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiCP,OAAjC,EAA0CQ,MAA1C,CAAiDJ,KAAjD,CAAP;IACD,CARD,CAQE,OAAOK,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACA,OAAO,EAAP;IACD;EACF;;EAED,OAAO,EAAP;AACD"},"metadata":{},"sourceType":"module"}