{"ast":null,"code":"function is12HourTimeAlready(value) {\n  var values = value.split(' ');\n  return values[0].length === 5 && (values[1] === 'AM' || values[1] === 'PM');\n}\n\nfunction get12Hour(hour) {\n  var hourNumber = Number(hour);\n\n  if (hourNumber === 0) {\n    return '12';\n  }\n\n  if (hourNumber > 12 && hourNumber < 24) {\n    if (hourNumber < 22) {\n      return \"0\".concat(String(hourNumber - 12));\n    }\n\n    return String(hourNumber - 12);\n  }\n\n  return hour;\n}\n\nfunction getAmPmValue(hour) {\n  var hourNumber = Number(hour);\n\n  if (hourNumber > 11) {\n    return 'PM';\n  }\n\n  return 'AM';\n}\n\nexport default function get12HourTime(value) {\n  if (value && typeof value === 'string') {\n    if (is12HourTimeAlready(value)) {\n      return value;\n    }\n\n    var values = value.split(':');\n    var hour = values[0];\n    var minutes = values[1];\n    var hasValuesRightLength = hour.length === 2 && minutes.length === 2;\n\n    if (hasValuesRightLength) {\n      var hour12 = get12Hour(hour);\n      var ampm = getAmPmValue(hour);\n      return \"\".concat(hour12, \":\").concat(minutes, \" \").concat(ampm);\n    }\n\n    return undefined;\n  }\n\n  return undefined;\n}","map":{"version":3,"names":["is12HourTimeAlready","value","values","split","length","get12Hour","hour","hourNumber","Number","concat","String","getAmPmValue","get12HourTime","minutes","hasValuesRightLength","hour12","ampm","undefined"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/TimePicker/helpers/get12HourTime.js"],"sourcesContent":["function is12HourTimeAlready(value) {\n  var values = value.split(' ');\n  return values[0].length === 5 && (values[1] === 'AM' || values[1] === 'PM');\n}\n\nfunction get12Hour(hour) {\n  var hourNumber = Number(hour);\n\n  if (hourNumber === 0) {\n    return '12';\n  }\n\n  if (hourNumber > 12 && hourNumber < 24) {\n    if (hourNumber < 22) {\n      return \"0\".concat(String(hourNumber - 12));\n    }\n\n    return String(hourNumber - 12);\n  }\n\n  return hour;\n}\n\nfunction getAmPmValue(hour) {\n  var hourNumber = Number(hour);\n\n  if (hourNumber > 11) {\n    return 'PM';\n  }\n\n  return 'AM';\n}\n\nexport default function get12HourTime(value) {\n  if (value && typeof value === 'string') {\n    if (is12HourTimeAlready(value)) {\n      return value;\n    }\n\n    var values = value.split(':');\n    var hour = values[0];\n    var minutes = values[1];\n    var hasValuesRightLength = hour.length === 2 && minutes.length === 2;\n\n    if (hasValuesRightLength) {\n      var hour12 = get12Hour(hour);\n      var ampm = getAmPmValue(hour);\n      return \"\".concat(hour12, \":\").concat(minutes, \" \").concat(ampm);\n    }\n\n    return undefined;\n  }\n\n  return undefined;\n}"],"mappings":"AAAA,SAASA,mBAAT,CAA6BC,KAA7B,EAAoC;EAClC,IAAIC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAb;EACA,OAAOD,MAAM,CAAC,CAAD,CAAN,CAAUE,MAAV,KAAqB,CAArB,KAA2BF,MAAM,CAAC,CAAD,CAAN,KAAc,IAAd,IAAsBA,MAAM,CAAC,CAAD,CAAN,KAAc,IAA/D,CAAP;AACD;;AAED,SAASG,SAAT,CAAmBC,IAAnB,EAAyB;EACvB,IAAIC,UAAU,GAAGC,MAAM,CAACF,IAAD,CAAvB;;EAEA,IAAIC,UAAU,KAAK,CAAnB,EAAsB;IACpB,OAAO,IAAP;EACD;;EAED,IAAIA,UAAU,GAAG,EAAb,IAAmBA,UAAU,GAAG,EAApC,EAAwC;IACtC,IAAIA,UAAU,GAAG,EAAjB,EAAqB;MACnB,OAAO,IAAIE,MAAJ,CAAWC,MAAM,CAACH,UAAU,GAAG,EAAd,CAAjB,CAAP;IACD;;IAED,OAAOG,MAAM,CAACH,UAAU,GAAG,EAAd,CAAb;EACD;;EAED,OAAOD,IAAP;AACD;;AAED,SAASK,YAAT,CAAsBL,IAAtB,EAA4B;EAC1B,IAAIC,UAAU,GAAGC,MAAM,CAACF,IAAD,CAAvB;;EAEA,IAAIC,UAAU,GAAG,EAAjB,EAAqB;IACnB,OAAO,IAAP;EACD;;EAED,OAAO,IAAP;AACD;;AAED,eAAe,SAASK,aAAT,CAAuBX,KAAvB,EAA8B;EAC3C,IAAIA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;IACtC,IAAID,mBAAmB,CAACC,KAAD,CAAvB,EAAgC;MAC9B,OAAOA,KAAP;IACD;;IAED,IAAIC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAb;IACA,IAAIG,IAAI,GAAGJ,MAAM,CAAC,CAAD,CAAjB;IACA,IAAIW,OAAO,GAAGX,MAAM,CAAC,CAAD,CAApB;IACA,IAAIY,oBAAoB,GAAGR,IAAI,CAACF,MAAL,KAAgB,CAAhB,IAAqBS,OAAO,CAACT,MAAR,KAAmB,CAAnE;;IAEA,IAAIU,oBAAJ,EAA0B;MACxB,IAAIC,MAAM,GAAGV,SAAS,CAACC,IAAD,CAAtB;MACA,IAAIU,IAAI,GAAGL,YAAY,CAACL,IAAD,CAAvB;MACA,OAAO,GAAGG,MAAH,CAAUM,MAAV,EAAkB,GAAlB,EAAuBN,MAAvB,CAA8BI,OAA9B,EAAuC,GAAvC,EAA4CJ,MAA5C,CAAmDO,IAAnD,CAAP;IACD;;IAED,OAAOC,SAAP;EACD;;EAED,OAAOA,SAAP;AACD"},"metadata":{},"sourceType":"module"}