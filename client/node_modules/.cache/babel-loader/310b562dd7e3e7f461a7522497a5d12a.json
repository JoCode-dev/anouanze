{"ast":null,"code":"function get24Hour(hour, ampm) {\n  var hourNumber = Number(hour);\n\n  if (ampm === 'AM') {\n    if (hourNumber === 12) {\n      return '00';\n    }\n\n    return hour;\n  }\n\n  if (ampm === 'PM') {\n    if (hourNumber === 12) {\n      return '12';\n    }\n\n    return String(hourNumber + 12);\n  }\n\n  return hour;\n}\n\nexport default function get24HourTime(_ref) {\n  var hour = _ref.hour,\n      minutes = _ref.minutes,\n      ampm = _ref.ampm;\n  var hour24 = get24Hour(hour, ampm);\n  return \"\".concat(hour24, \":\").concat(minutes);\n}","map":{"version":3,"names":["get24Hour","hour","ampm","hourNumber","Number","String","get24HourTime","_ref","minutes","hour24","concat"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/TimePicker/helpers/get24HourTime.js"],"sourcesContent":["function get24Hour(hour, ampm) {\n  var hourNumber = Number(hour);\n\n  if (ampm === 'AM') {\n    if (hourNumber === 12) {\n      return '00';\n    }\n\n    return hour;\n  }\n\n  if (ampm === 'PM') {\n    if (hourNumber === 12) {\n      return '12';\n    }\n\n    return String(hourNumber + 12);\n  }\n\n  return hour;\n}\n\nexport default function get24HourTime(_ref) {\n  var hour = _ref.hour,\n      minutes = _ref.minutes,\n      ampm = _ref.ampm;\n  var hour24 = get24Hour(hour, ampm);\n  return \"\".concat(hour24, \":\").concat(minutes);\n}"],"mappings":"AAAA,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+B;EAC7B,IAAIC,UAAU,GAAGC,MAAM,CAACH,IAAD,CAAvB;;EAEA,IAAIC,IAAI,KAAK,IAAb,EAAmB;IACjB,IAAIC,UAAU,KAAK,EAAnB,EAAuB;MACrB,OAAO,IAAP;IACD;;IAED,OAAOF,IAAP;EACD;;EAED,IAAIC,IAAI,KAAK,IAAb,EAAmB;IACjB,IAAIC,UAAU,KAAK,EAAnB,EAAuB;MACrB,OAAO,IAAP;IACD;;IAED,OAAOE,MAAM,CAACF,UAAU,GAAG,EAAd,CAAb;EACD;;EAED,OAAOF,IAAP;AACD;;AAED,eAAe,SAASK,aAAT,CAAuBC,IAAvB,EAA6B;EAC1C,IAAIN,IAAI,GAAGM,IAAI,CAACN,IAAhB;EAAA,IACIO,OAAO,GAAGD,IAAI,CAACC,OADnB;EAAA,IAEIN,IAAI,GAAGK,IAAI,CAACL,IAFhB;EAGA,IAAIO,MAAM,GAAGT,SAAS,CAACC,IAAD,EAAOC,IAAP,CAAtB;EACA,OAAO,GAAGQ,MAAH,CAAUD,MAAV,EAAkB,GAAlB,EAAuBC,MAAvB,CAA8BF,OAA9B,CAAP;AACD"},"metadata":{},"sourceType":"module"}