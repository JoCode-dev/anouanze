{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useMemo } from 'react';\nimport filterCountries from '../helpers/filterCountries';\nexport default function useFilterCountries(countries, country) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var countriesFiltered = useMemo(function () {\n    return filterCountries(query, countries, country);\n  }, [countries, country, query]);\n  return [query, countriesFiltered, setQuery];\n}","map":{"version":3,"names":["_slicedToArray","useState","useMemo","filterCountries","useFilterCountries","countries","country","_useState","_useState2","query","setQuery","countriesFiltered"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/PhoneInput/countriesDropdown/hooks/useFilterCountries.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useMemo } from 'react';\nimport filterCountries from '../helpers/filterCountries';\nexport default function useFilterCountries(countries, country) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var countriesFiltered = useMemo(function () {\n    return filterCountries(query, countries, country);\n  }, [countries, country, query]);\n  return [query, countriesFiltered, setQuery];\n}"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sCAA3B;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,eAAe,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCC,OAAvC,EAAgD;EAC7D,IAAIC,SAAS,GAAGN,QAAQ,CAAC,EAAD,CAAxB;EAAA,IACIO,UAAU,GAAGR,cAAc,CAACO,SAAD,EAAY,CAAZ,CAD/B;EAAA,IAEIE,KAAK,GAAGD,UAAU,CAAC,CAAD,CAFtB;EAAA,IAGIE,QAAQ,GAAGF,UAAU,CAAC,CAAD,CAHzB;;EAKA,IAAIG,iBAAiB,GAAGT,OAAO,CAAC,YAAY;IAC1C,OAAOC,eAAe,CAACM,KAAD,EAAQJ,SAAR,EAAmBC,OAAnB,CAAtB;EACD,CAF8B,EAE5B,CAACD,SAAD,EAAYC,OAAZ,EAAqBG,KAArB,CAF4B,CAA/B;EAGA,OAAO,CAACA,KAAD,EAAQE,iBAAR,EAA2BD,QAA3B,CAAP;AACD"},"metadata":{},"sourceType":"module"}