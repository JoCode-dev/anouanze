{"ast":null,"code":"export default function isNotSameColumns(prevColumns, currentColumns) {\n  if (prevColumns.length !== currentColumns.length) {\n    return true;\n  }\n\n  return prevColumns.some(function (column, index) {\n    var _currentColumns$index = currentColumns[index],\n        field = _currentColumns$index.field,\n        type = _currentColumns$index.type,\n        header = _currentColumns$index.header,\n        component = _currentColumns$index.component,\n        defaultWidth = _currentColumns$index.defaultWidth,\n        width = _currentColumns$index.width,\n        sortable = _currentColumns$index.sortable,\n        children = _currentColumns$index.children;\n    return column.field !== field || column.type !== type || column.header !== header || column.defaultWidth !== defaultWidth || column.component !== component || column.sortable !== sortable || column.width !== width || column.children !== children;\n  });\n}","map":{"version":3,"names":["isNotSameColumns","prevColumns","currentColumns","length","some","column","index","_currentColumns$index","field","type","header","component","defaultWidth","width","sortable","children"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/Table/helpers/columns/isNotSameColumns.js"],"sourcesContent":["export default function isNotSameColumns(prevColumns, currentColumns) {\n  if (prevColumns.length !== currentColumns.length) {\n    return true;\n  }\n\n  return prevColumns.some(function (column, index) {\n    var _currentColumns$index = currentColumns[index],\n        field = _currentColumns$index.field,\n        type = _currentColumns$index.type,\n        header = _currentColumns$index.header,\n        component = _currentColumns$index.component,\n        defaultWidth = _currentColumns$index.defaultWidth,\n        width = _currentColumns$index.width,\n        sortable = _currentColumns$index.sortable,\n        children = _currentColumns$index.children;\n    return column.field !== field || column.type !== type || column.header !== header || column.defaultWidth !== defaultWidth || column.component !== component || column.sortable !== sortable || column.width !== width || column.children !== children;\n  });\n}"],"mappings":"AAAA,eAAe,SAASA,gBAAT,CAA0BC,WAA1B,EAAuCC,cAAvC,EAAuD;EACpE,IAAID,WAAW,CAACE,MAAZ,KAAuBD,cAAc,CAACC,MAA1C,EAAkD;IAChD,OAAO,IAAP;EACD;;EAED,OAAOF,WAAW,CAACG,IAAZ,CAAiB,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;IAC/C,IAAIC,qBAAqB,GAAGL,cAAc,CAACI,KAAD,CAA1C;IAAA,IACIE,KAAK,GAAGD,qBAAqB,CAACC,KADlC;IAAA,IAEIC,IAAI,GAAGF,qBAAqB,CAACE,IAFjC;IAAA,IAGIC,MAAM,GAAGH,qBAAqB,CAACG,MAHnC;IAAA,IAIIC,SAAS,GAAGJ,qBAAqB,CAACI,SAJtC;IAAA,IAKIC,YAAY,GAAGL,qBAAqB,CAACK,YALzC;IAAA,IAMIC,KAAK,GAAGN,qBAAqB,CAACM,KANlC;IAAA,IAOIC,QAAQ,GAAGP,qBAAqB,CAACO,QAPrC;IAAA,IAQIC,QAAQ,GAAGR,qBAAqB,CAACQ,QARrC;IASA,OAAOV,MAAM,CAACG,KAAP,KAAiBA,KAAjB,IAA0BH,MAAM,CAACI,IAAP,KAAgBA,IAA1C,IAAkDJ,MAAM,CAACK,MAAP,KAAkBA,MAApE,IAA8EL,MAAM,CAACO,YAAP,KAAwBA,YAAtG,IAAsHP,MAAM,CAACM,SAAP,KAAqBA,SAA3I,IAAwJN,MAAM,CAACS,QAAP,KAAoBA,QAA5K,IAAwLT,MAAM,CAACQ,KAAP,KAAiBA,KAAzM,IAAkNR,MAAM,CAACU,QAAP,KAAoBA,QAA7O;EACD,CAXM,CAAP;AAYD"},"metadata":{},"sourceType":"module"}