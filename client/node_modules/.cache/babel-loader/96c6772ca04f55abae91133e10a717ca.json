{"ast":null,"code":"var singleNumberWidth = 8;\nexport default function getEnumerableWidth(numberValue, variant) {\n  var enumerableColumnOffset = variant === 'listview' ? 10 : 40;\n\n  if (numberValue) {\n    var valuePlusOne = Number(numberValue) + 1;\n    var enumerableStringWidth = singleNumberWidth * valuePlusOne.toString().length;\n    return enumerableStringWidth + enumerableColumnOffset;\n  }\n\n  return enumerableColumnOffset + singleNumberWidth;\n}","map":{"version":3,"names":["singleNumberWidth","getEnumerableWidth","numberValue","variant","enumerableColumnOffset","valuePlusOne","Number","enumerableStringWidth","toString","length"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/Table/helpers/columns/getEnumerableWidth.js"],"sourcesContent":["var singleNumberWidth = 8;\nexport default function getEnumerableWidth(numberValue, variant) {\n  var enumerableColumnOffset = variant === 'listview' ? 10 : 40;\n\n  if (numberValue) {\n    var valuePlusOne = Number(numberValue) + 1;\n    var enumerableStringWidth = singleNumberWidth * valuePlusOne.toString().length;\n    return enumerableStringWidth + enumerableColumnOffset;\n  }\n\n  return enumerableColumnOffset + singleNumberWidth;\n}"],"mappings":"AAAA,IAAIA,iBAAiB,GAAG,CAAxB;AACA,eAAe,SAASC,kBAAT,CAA4BC,WAA5B,EAAyCC,OAAzC,EAAkD;EAC/D,IAAIC,sBAAsB,GAAGD,OAAO,KAAK,UAAZ,GAAyB,EAAzB,GAA8B,EAA3D;;EAEA,IAAID,WAAJ,EAAiB;IACf,IAAIG,YAAY,GAAGC,MAAM,CAACJ,WAAD,CAAN,GAAsB,CAAzC;IACA,IAAIK,qBAAqB,GAAGP,iBAAiB,GAAGK,YAAY,CAACG,QAAb,GAAwBC,MAAxE;IACA,OAAOF,qBAAqB,GAAGH,sBAA/B;EACD;;EAED,OAAOA,sBAAsB,GAAGJ,iBAAhC;AACD"},"metadata":{},"sourceType":"module"}