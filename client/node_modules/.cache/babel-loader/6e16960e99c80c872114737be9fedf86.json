{"ast":null,"code":"import { useMemo } from 'react';\nimport isValidColor from '../../../styles/helpers/color/isValidColor';\nexport var defaultColors = ['#e3aaec', '#c3dbf7', '#9fd6ff', '#9de7da', '#9ef0bf', '#fef199', '#fdd499', '#d174e0', '#86baf3', '#5ebbff', '#42d8be', '#3be282', '#ffe654', '#ffb758', '#bd35bd', '#5779c1', '#4A90E2', '#06aea9', '#3dba4c', '#f5bc24', '#f99222', '#570e8c', '#021970', '#0b2399', '#0d7477', '#0a6b50', '#b67e12', '#b75d0c'];\nexport default function useNormalizeColors(props) {\n  var colors = props.defaultColors,\n      variant = props.variant;\n  return useMemo(function () {\n    var validColors = Array.isArray(colors) ? colors.filter(function (color) {\n      return isValidColor(color);\n    }) : [];\n\n    if (variant === 'colors-fixed') {\n      if (!validColors.length > 0) {\n        console.warn('If the props variant is colors-fixed, the defaultColors prop must contain at least one valid color');\n        return defaultColors;\n      }\n    }\n\n    return validColors;\n  }, [colors, variant]);\n}","map":{"version":3,"names":["useMemo","isValidColor","defaultColors","useNormalizeColors","props","colors","variant","validColors","Array","isArray","filter","color","length","console","warn"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/ColorPicker/hooks/useNormalizeColors.js"],"sourcesContent":["import { useMemo } from 'react';\nimport isValidColor from '../../../styles/helpers/color/isValidColor';\nexport var defaultColors = ['#e3aaec', '#c3dbf7', '#9fd6ff', '#9de7da', '#9ef0bf', '#fef199', '#fdd499', '#d174e0', '#86baf3', '#5ebbff', '#42d8be', '#3be282', '#ffe654', '#ffb758', '#bd35bd', '#5779c1', '#4A90E2', '#06aea9', '#3dba4c', '#f5bc24', '#f99222', '#570e8c', '#021970', '#0b2399', '#0d7477', '#0a6b50', '#b67e12', '#b75d0c'];\nexport default function useNormalizeColors(props) {\n  var colors = props.defaultColors,\n      variant = props.variant;\n  return useMemo(function () {\n    var validColors = Array.isArray(colors) ? colors.filter(function (color) {\n      return isValidColor(color);\n    }) : [];\n\n    if (variant === 'colors-fixed') {\n      if (!validColors.length > 0) {\n        console.warn('If the props variant is colors-fixed, the defaultColors prop must contain at least one valid color');\n        return defaultColors;\n      }\n    }\n\n    return validColors;\n  }, [colors, variant]);\n}"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAO,IAAIC,aAAa,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,EAA+G,SAA/G,EAA0H,SAA1H,EAAqI,SAArI,EAAgJ,SAAhJ,EAA2J,SAA3J,EAAsK,SAAtK,EAAiL,SAAjL,EAA4L,SAA5L,EAAuM,SAAvM,EAAkN,SAAlN,EAA6N,SAA7N,EAAwO,SAAxO,EAAmP,SAAnP,EAA8P,SAA9P,EAAyQ,SAAzQ,EAAoR,SAApR,EAA+R,SAA/R,EAA0S,SAA1S,CAApB;AACP,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;EAChD,IAAIC,MAAM,GAAGD,KAAK,CAACF,aAAnB;EAAA,IACII,OAAO,GAAGF,KAAK,CAACE,OADpB;EAEA,OAAON,OAAO,CAAC,YAAY;IACzB,IAAIO,WAAW,GAAGC,KAAK,CAACC,OAAN,CAAcJ,MAAd,IAAwBA,MAAM,CAACK,MAAP,CAAc,UAAUC,KAAV,EAAiB;MACvE,OAAOV,YAAY,CAACU,KAAD,CAAnB;IACD,CAFyC,CAAxB,GAEb,EAFL;;IAIA,IAAIL,OAAO,KAAK,cAAhB,EAAgC;MAC9B,IAAI,CAACC,WAAW,CAACK,MAAb,GAAsB,CAA1B,EAA6B;QAC3BC,OAAO,CAACC,IAAR,CAAa,oGAAb;QACA,OAAOZ,aAAP;MACD;IACF;;IAED,OAAOK,WAAP;EACD,CAba,EAaX,CAACF,MAAD,EAASC,OAAT,CAbW,CAAd;AAcD"},"metadata":{},"sourceType":"module"}