{"ast":null,"code":"import { useMemo } from 'react';\nimport allCountries from '../countries';\nimport customWarning from '../customWarning';\nexport default function useCountries(countries) {\n  return useMemo(function () {\n    if (countries.length === 0) {\n      return allCountries;\n    }\n\n    var filteredCountries = allCountries.filter(function (country) {\n      return countries.includes(country.isoCode);\n    });\n\n    if (filteredCountries.length === 0) {\n      customWarning();\n      return allCountries;\n    }\n\n    return filteredCountries;\n  }, [countries]);\n}","map":{"version":3,"names":["useMemo","allCountries","customWarning","useCountries","countries","length","filteredCountries","filter","country","includes","isoCode"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/PhoneInput/hooks/useCountries.js"],"sourcesContent":["import { useMemo } from 'react';\nimport allCountries from '../countries';\nimport customWarning from '../customWarning';\nexport default function useCountries(countries) {\n  return useMemo(function () {\n    if (countries.length === 0) {\n      return allCountries;\n    }\n\n    var filteredCountries = allCountries.filter(function (country) {\n      return countries.includes(country.isoCode);\n    });\n\n    if (filteredCountries.length === 0) {\n      customWarning();\n      return allCountries;\n    }\n\n    return filteredCountries;\n  }, [countries]);\n}"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,eAAe,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;EAC9C,OAAOJ,OAAO,CAAC,YAAY;IACzB,IAAII,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;MAC1B,OAAOJ,YAAP;IACD;;IAED,IAAIK,iBAAiB,GAAGL,YAAY,CAACM,MAAb,CAAoB,UAAUC,OAAV,EAAmB;MAC7D,OAAOJ,SAAS,CAACK,QAAV,CAAmBD,OAAO,CAACE,OAA3B,CAAP;IACD,CAFuB,CAAxB;;IAIA,IAAIJ,iBAAiB,CAACD,MAAlB,KAA6B,CAAjC,EAAoC;MAClCH,aAAa;MACb,OAAOD,YAAP;IACD;;IAED,OAAOK,iBAAP;EACD,CAfa,EAeX,CAACF,SAAD,CAfW,CAAd;AAgBD"},"metadata":{},"sourceType":"module"}