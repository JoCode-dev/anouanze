{"ast":null,"code":"import getRowSelectionInputType from './getRowSelectionInputType';\nimport computeUniqueRowKey from './computeUniqueRowKey';\nimport isSelectedRow from '../selector/isSelectedRow';\nimport isDisabledRow from '../selector/isDisabledRow';\n\nfunction getKey(row, keyField) {\n  if (row.key) {\n    return row.key;\n  }\n\n  return computeUniqueRowKey(row, keyField);\n}\n\nexport default function getRows() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _params$rows = params.rows,\n      rows = _params$rows === void 0 ? [] : _params$rows,\n      maxRowSelection = params.maxRowSelection,\n      keyField = params.keyField,\n      selectedRowsKeys = params.selectedRowsKeys;\n  var inputType = getRowSelectionInputType(maxRowSelection, rows.length);\n  return rows.map(function (row) {\n    var key = getKey(row, keyField);\n    return {\n      key: key,\n      inputType: inputType,\n      isSelected: isSelectedRow(selectedRowsKeys, key),\n      isDisabled: isDisabledRow({\n        rowKeyValue: key,\n        maxRowSelection: maxRowSelection,\n        selectedRowsKeys: selectedRowsKeys\n      })\n    };\n  });\n}","map":{"version":3,"names":["getRowSelectionInputType","computeUniqueRowKey","isSelectedRow","isDisabledRow","getKey","row","keyField","key","getRows","params","arguments","length","undefined","_params$rows","rows","maxRowSelection","selectedRowsKeys","inputType","map","isSelected","isDisabled","rowKeyValue"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/Table/helpers/rows/getRows.js"],"sourcesContent":["import getRowSelectionInputType from './getRowSelectionInputType';\nimport computeUniqueRowKey from './computeUniqueRowKey';\nimport isSelectedRow from '../selector/isSelectedRow';\nimport isDisabledRow from '../selector/isDisabledRow';\n\nfunction getKey(row, keyField) {\n  if (row.key) {\n    return row.key;\n  }\n\n  return computeUniqueRowKey(row, keyField);\n}\n\nexport default function getRows() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _params$rows = params.rows,\n      rows = _params$rows === void 0 ? [] : _params$rows,\n      maxRowSelection = params.maxRowSelection,\n      keyField = params.keyField,\n      selectedRowsKeys = params.selectedRowsKeys;\n  var inputType = getRowSelectionInputType(maxRowSelection, rows.length);\n  return rows.map(function (row) {\n    var key = getKey(row, keyField);\n    return {\n      key: key,\n      inputType: inputType,\n      isSelected: isSelectedRow(selectedRowsKeys, key),\n      isDisabled: isDisabledRow({\n        rowKeyValue: key,\n        maxRowSelection: maxRowSelection,\n        selectedRowsKeys: selectedRowsKeys\n      })\n    };\n  });\n}"],"mappings":"AAAA,OAAOA,wBAAP,MAAqC,4BAArC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAEA,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,QAArB,EAA+B;EAC7B,IAAID,GAAG,CAACE,GAAR,EAAa;IACX,OAAOF,GAAG,CAACE,GAAX;EACD;;EAED,OAAON,mBAAmB,CAACI,GAAD,EAAMC,QAAN,CAA1B;AACD;;AAED,eAAe,SAASE,OAAT,GAAmB;EAChC,IAAIC,MAAM,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAjF;EACA,IAAIG,YAAY,GAAGJ,MAAM,CAACK,IAA1B;EAAA,IACIA,IAAI,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0B,EAA1B,GAA+BA,YAD1C;EAAA,IAEIE,eAAe,GAAGN,MAAM,CAACM,eAF7B;EAAA,IAGIT,QAAQ,GAAGG,MAAM,CAACH,QAHtB;EAAA,IAIIU,gBAAgB,GAAGP,MAAM,CAACO,gBAJ9B;EAKA,IAAIC,SAAS,GAAGjB,wBAAwB,CAACe,eAAD,EAAkBD,IAAI,CAACH,MAAvB,CAAxC;EACA,OAAOG,IAAI,CAACI,GAAL,CAAS,UAAUb,GAAV,EAAe;IAC7B,IAAIE,GAAG,GAAGH,MAAM,CAACC,GAAD,EAAMC,QAAN,CAAhB;IACA,OAAO;MACLC,GAAG,EAAEA,GADA;MAELU,SAAS,EAAEA,SAFN;MAGLE,UAAU,EAAEjB,aAAa,CAACc,gBAAD,EAAmBT,GAAnB,CAHpB;MAILa,UAAU,EAAEjB,aAAa,CAAC;QACxBkB,WAAW,EAAEd,GADW;QAExBQ,eAAe,EAAEA,eAFO;QAGxBC,gBAAgB,EAAEA;MAHM,CAAD;IAJpB,CAAP;EAUD,CAZM,CAAP;AAaD"},"metadata":{},"sourceType":"module"}