{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nexport default function getValueArray(value, maxLength) {\n  if (value) {\n    var extractedNumbers = value.toString().match(/\\d+/g);\n\n    if (extractedNumbers) {\n      var numbersArray = extractedNumbers.join('').slice(0, maxLength).split('');\n      var emptyFieldsArray = Array(maxLength - numbersArray.length).fill('');\n      return numbersArray.concat.apply(numbersArray, _toConsumableArray(emptyFieldsArray));\n    }\n  }\n\n  return Array(maxLength).fill('');\n}","map":{"version":3,"names":["_toConsumableArray","getValueArray","value","maxLength","extractedNumbers","toString","match","numbersArray","join","slice","split","emptyFieldsArray","Array","length","fill","concat","apply"],"sources":["/Users/jocode/Documents/GitHub/anouanze/client/node_modules/react-rainbow-components/esm/components/CodeInput/helpers/getValueArray.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nexport default function getValueArray(value, maxLength) {\n  if (value) {\n    var extractedNumbers = value.toString().match(/\\d+/g);\n\n    if (extractedNumbers) {\n      var numbersArray = extractedNumbers.join('').slice(0, maxLength).split('');\n      var emptyFieldsArray = Array(maxLength - numbersArray.length).fill('');\n      return numbersArray.concat.apply(numbersArray, _toConsumableArray(emptyFieldsArray));\n    }\n  }\n\n  return Array(maxLength).fill('');\n}"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,0CAA/B;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,SAA9B,EAAyC;EACtD,IAAID,KAAJ,EAAW;IACT,IAAIE,gBAAgB,GAAGF,KAAK,CAACG,QAAN,GAAiBC,KAAjB,CAAuB,MAAvB,CAAvB;;IAEA,IAAIF,gBAAJ,EAAsB;MACpB,IAAIG,YAAY,GAAGH,gBAAgB,CAACI,IAAjB,CAAsB,EAAtB,EAA0BC,KAA1B,CAAgC,CAAhC,EAAmCN,SAAnC,EAA8CO,KAA9C,CAAoD,EAApD,CAAnB;MACA,IAAIC,gBAAgB,GAAGC,KAAK,CAACT,SAAS,GAAGI,YAAY,CAACM,MAA1B,CAAL,CAAuCC,IAAvC,CAA4C,EAA5C,CAAvB;MACA,OAAOP,YAAY,CAACQ,MAAb,CAAoBC,KAApB,CAA0BT,YAA1B,EAAwCP,kBAAkB,CAACW,gBAAD,CAA1D,CAAP;IACD;EACF;;EAED,OAAOC,KAAK,CAACT,SAAD,CAAL,CAAiBW,IAAjB,CAAsB,EAAtB,CAAP;AACD"},"metadata":{},"sourceType":"module"}